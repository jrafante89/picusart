

Microchip Technology PIC18 LITE Macro Assembler V1.34 build -361300703 
                                                                                               Sat May  9 03:35:45 2015

Microchip Technology Omniscient Code Generator (Lite mode) build 201502162209
     1                           	processor	18F4550
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1
     6                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     7                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1
     8                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
     9                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    10                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1
    11                           	psect	text0,global,reloc=2,class=CODE,delta=1
    12                           	psect	text1,global,reloc=2,class=CODE,delta=1
    13                           	psect	text2,global,reloc=2,class=CODE,delta=1
    14                           	psect	text3,global,reloc=2,class=CODE,delta=1
    15                           	psect	text4,global,reloc=2,class=CODE,delta=1
    16                           	psect	text5,global,reloc=2,class=CODE,delta=1
    17                           	psect	text6,global,reloc=2,class=CODE,delta=1
    18                           	psect	text7,global,reloc=2,class=CODE,delta=1
    19                           	psect	text8,global,reloc=2,class=CODE,delta=1
    20                           	psect	text9,global,reloc=2,class=CODE,delta=1
    21                           	psect	text10,global,reloc=2,class=CODE,delta=1
    22                           	psect	text11,global,reloc=2,class=CODE,delta=1
    23                           	psect	text12,global,reloc=2,class=CODE,delta=1
    24                           	psect	text13,global,reloc=2,class=CODE,delta=1
    25                           	psect	text14,global,reloc=2,class=CODE,delta=1
    26                           	psect	text15,global,reloc=2,class=CODE,delta=1
    27                           	psect	text16,global,reloc=2,class=CODE,delta=1
    28                           	psect	text17,global,reloc=2,class=CODE,delta=1
    29                           	psect	text18,global,reloc=2,class=CODE,delta=1
    30                           	psect	text19,global,reloc=2,class=CODE,delta=1
    31                           	psect	text20,global,reloc=2,class=CODE,delta=1
    32                           	psect	text21,global,reloc=2,class=CODE,delta=1
    33                           	psect	text22,global,reloc=2,class=CODE,delta=1
    34                           	psect	text23,global,reloc=2,class=CODE,delta=1
    35                           	psect	text24,global,reloc=2,class=CODE,delta=1
    36                           	psect	text25,global,reloc=2,class=CODE,delta=1
    37                           	psect	text26,global,reloc=2,class=CODE,delta=1
    38                           	psect	text27,global,reloc=2,class=CODE,delta=1
    39                           	psect	text28,global,reloc=2,class=CODE,delta=1
    40                           	psect	text29,global,reloc=2,class=CODE,delta=1
    41                           	psect	text30,global,reloc=2,class=CODE,delta=1
    42                           	psect	text31,global,reloc=2,class=CODE,delta=1
    43                           	psect	text32,global,reloc=2,class=CODE,delta=1
    44                           	psect	text33,global,reloc=2,class=CODE,delta=1
    45                           	psect	text34,global,reloc=2,class=CODE,delta=1
    46                           	psect	text35,global,reloc=2,class=CODE,delta=1
    47                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    48                           	psect	intcode_body,global,reloc=2,class=CODE,delta=1
    49                           	psect	text37,global,reloc=2,class=CODE,delta=1
    50                           	psect	text38,global,reloc=2,class=CODE,delta=1
    51                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1
    52                           	psect	rparam,global,class=COMRAM,space=1,delta=1
    53  0000                     
    54                           	psect	smallconst
    55  00101C                     __psmallconst:
    56                           	opt stack 0
    57  00101C  00                 	db	0
    58  00101D                     _dpowers:
    59                           	opt stack 0
    60  00101D  0001               	dw	1
    61  00101F  0000               	dw	0
    62  001021  000A               	dw	10
    63  001023  0000               	dw	0
    64  001025  0064               	dw	100
    65  001027  0000               	dw	0
    66  001029  03E8               	dw	1000
    67  00102B  0000               	dw	0
    68  00102D  2710               	dw	10000
    69  00102F  0000               	dw	0
    70  001031  86A0               	dw	34464
    71  001033  0001               	dw	1
    72  001035  4240               	dw	16960
    73  001037  000F               	dw	15
    74  001039  9680               	dw	38528
    75  00103B  0098               	dw	152
    76  00103D  E100               	dw	57600
    77  00103F  05F5               	dw	1525
    78  001041  CA00               	dw	51712
    79  001043  3B9A               	dw	15258
    80  001045                     __end_of_dpowers:
    81                           	opt stack 0
    82  0000                     _ADCON0	set	4034
    83  0000                     _ADCON0bits	set	4034
    84  0000                     _ADCON1	set	4033
    85  0000                     _ADCON2	set	4032
    86  0000                     _ADRESH	set	4036
    87  0000                     _ADRESL	set	4035
    88  0000                     _CCP1CON	set	4029
    89  0000                     _CCP2CON	set	4026
    90  0000                     _CCPR1L	set	4030
    91  0000                     _CCPR2L	set	4027
    92  0000                     _CMCON	set	4020
    93  0000                     _INTCONbits	set	4082
    94  0000                     _IPR1bits	set	3999
    95  0000                     _PIE1	set	3997
    96  0000                     _PIE1bits	set	3997
    97  0000                     _PIR1bits	set	3998
    98  0000                     _PORTAbits	set	3968
    99  0000                     _PORTB	set	3969
   100  0000                     _PORTCbits	set	3970
   101  0000                     _PORTD	set	3971
   102  0000                     _PORTE	set	3972
   103  0000                     _PR2	set	4043
   104  0000                     _RCON	set	4048
   105  0000                     _RCREG	set	4014
   106  0000                     _RCSTA	set	4011
   107  0000                     _RCSTAbits	set	4011
   108  0000                     _SPBRG	set	4015
   109  0000                     _SPBRGH	set	4016
   110  0000                     _T0CON	set	4053
   111  0000                     _T2CON	set	4042
   112  0000                     _T2CONbits	set	4042
   113  0000                     _TRISA	set	3986
   114  0000                     _TRISB	set	3987
   115  0000                     _TRISBbits	set	3987
   116  0000                     _TRISC	set	3988
   117  0000                     _TRISCbits	set	3988
   118  0000                     _TRISD	set	3989
   119  0000                     _TRISE	set	3990
   120  0000                     _TXSTA	set	4012
   121  0000                     _TXSTAbits	set	4012
   122  0000                     _RD0	set	31768
   123  0000                     _RD1	set	31769
   124  001045                     STR_2:
   125  001045  74                 	db	116	;'t'
   126  001046  65                 	db	101	;'e'
   127  001047  73                 	db	115	;'s'
   128  001048  74                 	db	116	;'t'
   129  001049  20                 	db	32
   130  00104A  70                 	db	112	;'p'
   131  00104B  72                 	db	114	;'r'
   132  00104C  6F                 	db	111	;'o'
   133  00104D  67                 	db	103	;'g'
   134  00104E  20                 	db	32
   135  00104F  4C                 	db	76	;'L'
   136  001050  69                 	db	105	;'i'
   137  001051  6E                 	db	110	;'n'
   138  001052  75                 	db	117	;'u'
   139  001053  78                 	db	120	;'x'
   140  001054  00                 	db	0
   141  001055                     STR_7:
   142  001055  25                 	db	37
   143  001056  6C                 	db	108	;'l'
   144  001057  75                 	db	117	;'u'
   145  001058  2E                 	db	46
   146  001059  25                 	db	37
   147  00105A  36                 	db	54	;'6'
   148  00105B  2E                 	db	46
   149  00105C  36                 	db	54	;'6'
   150  00105D  6C                 	db	108	;'l'
   151  00105E  75                 	db	117	;'u'
   152  00105F  00                 	db	0
   153  001060                     STR_1:
   154  001060  74                 	db	116	;'t'
   155  001061  65                 	db	101	;'e'
   156  001062  73                 	db	115	;'s'
   157  001063  74                 	db	116	;'t'
   158  001064  65                 	db	101	;'e'
   159  001065  20                 	db	32
   160  001066  50                 	db	80	;'P'
   161  001067  57                 	db	87	;'W'
   162  001068  4D                 	db	77	;'M'
   163  001069  00                 	db	0
   164  00106A                     STR_6:
   165  00106A  20                 	db	32
   166  00106B  20                 	db	32
   167  00106C  20                 	db	32
   168  00106D  20                 	db	32
   169  00106E  20                 	db	32
   170  00106F  20                 	db	32
   171  001070  00                 	db	0
   172  001071  00                 	db	0	; dummy byte at the end
   173  0000                     
   174                           ; #config settings
   175                           
   176                           	psect	cinit
   177  0027AA                     __pcinit:
   178                           	opt stack 0
   179  0027AA                     start_initialization:
   180                           	opt stack 0
   181  0027AA                     __initialization:
   182                           	opt stack 0
   183                           
   184                           ; Clear objects allocated to BANK0 (23 bytes)
   185  0027AA  EE00  F07F         	lfsr	0,__pbssBANK0
   186  0027AE  0E17               	movlw	23
   187  0027B0                     clear_0:
   188  0027B0  6AEE               	clrf	postinc0,c
   189  0027B2  06E8               	decf	wreg,f,c
   190  0027B4  E1FD               	bnz	clear_0
   191                           
   192                           ; Clear objects allocated to COMRAM (20 bytes)
   193  0027B6  EE00  F037         	lfsr	0,__pbssCOMRAM
   194  0027BA  0E14               	movlw	20
   195  0027BC                     clear_1:
   196  0027BC  6AEE               	clrf	postinc0,c
   197  0027BE  06E8               	decf	wreg,f,c
   198  0027C0  E1FD               	bnz	clear_1
   199  0027C2                     end_of_initialization:
   200                           	opt stack 0
   201  0027C2                     __end_of__initialization:
   202                           	opt stack 0
   203  0027C2  0100               	movlb	0
   204  0027C4  EF47  F00A         	goto	_main	;jump to C main() function
   205                           postinc0	equ	0xFEE
   206                           wreg	equ	0xFE8
   207                           
   208                           	psect	bssCOMRAM
   209  000037                     __pbssCOMRAM:
   210                           	opt stack 0
   211  000037                     _a:
   212                           	opt stack 0
   213  000037                     	ds	3
   214  00003A                     _ton:
   215                           	opt stack 0
   216  00003A                     	ds	3
   217  00003D                     _flag:
   218                           	opt stack 0
   219  00003D                     	ds	2
   220  00003F                     _status:
   221                           	opt stack 0
   222  00003F                     	ds	2
   223  000041                     _valorstr:
   224                           	opt stack 0
   225  000041                     	ds	2
   226  000043                     _USART_Status:
   227                           	opt stack 0
   228  000043                     	ds	1
   229  000044                     _rx1:
   230                           	opt stack 0
   231  000044                     	ds	4
   232  000048                     _rx:
   233                           	opt stack 0
   234  000048                     	ds	3
   235                           postinc0	equ	0xFEE
   236                           wreg	equ	0xFE8
   237                           
   238                           	psect	bssBANK0
   239  00007F                     __pbssBANK0:
   240                           	opt stack 0
   241  00007F                     _valor:
   242                           	opt stack 0
   243  00007F                     	ds	3
   244  000082                     _volt:
   245                           	opt stack 0
   246  000082                     	ds	3
   247  000085                     ftoa@buf:
   248                           	opt stack 0
   249  000085                     	ds	17
   250                           postinc0	equ	0xFEE
   251                           wreg	equ	0xFE8
   252                           
   253                           	psect	cstackBANK0
   254  000060                     __pcstackBANK0:
   255                           	opt stack 0
   256  000060                     ??_sprintf:
   257  000060                     ___ftdiv@cntr:
   258                           	opt stack 0
   259  000060                     ___fttol@sign1:
   260                           	opt stack 0
   261                           
   262                           ; 1 bytes @ 0x0
   263  000060                     	ds	1
   264  000061                     ___ftdiv@f3:
   265                           	opt stack 0
   266  000061                     ___fttol@lval:
   267                           	opt stack 0
   268                           
   269                           ; 4 bytes @ 0x1
   270  000061                     	ds	3
   271  000064                     sprintf@flag:
   272                           	opt stack 0
   273  000064                     ___ftdiv@exp:
   274                           	opt stack 0
   275                           
   276                           ; 1 bytes @ 0x4
   277  000064                     	ds	1
   278  000065                     ___ftdiv@sign:
   279                           	opt stack 0
   280  000065                     ___fttol@exp1:
   281                           	opt stack 0
   282  000065                     sprintf@ap:
   283                           	opt stack 0
   284                           
   285                           ; 2 bytes @ 0x5
   286  000065                     	ds	1
   287  000066                     ??_SetDCPWM1:
   288  000066                     ??_SetDCPWM2:
   289  000066                     itoa@buf:
   290                           	opt stack 0
   291                           
   292                           ; 2 bytes @ 0x6
   293  000066                     	ds	1
   294  000067                     sprintf@val:
   295                           	opt stack 0
   296                           
   297                           ; 4 bytes @ 0x7
   298  000067                     	ds	1
   299  000068                     SetDCPWM1@DCycle:
   300                           	opt stack 0
   301  000068                     SetDCPWM2@DCycle:
   302                           	opt stack 0
   303  000068                     itoa@val:
   304                           	opt stack 0
   305                           
   306                           ; 2 bytes @ 0x8
   307  000068                     	ds	2
   308  00006A                     itoa@base:
   309                           	opt stack 0
   310                           
   311                           ; 2 bytes @ 0xA
   312  00006A                     	ds	1
   313  00006B                     sprintf@width:
   314                           	opt stack 0
   315                           
   316                           ; 2 bytes @ 0xB
   317  00006B                     	ds	2
   318  00006D                     sprintf@prec:
   319                           	opt stack 0
   320                           
   321                           ; 2 bytes @ 0xD
   322  00006D                     	ds	2
   323  00006F                     sprintf@c:
   324                           	opt stack 0
   325                           
   326                           ; 1 bytes @ 0xF
   327  00006F                     	ds	1
   328  000070                     ?_ftoa:
   329                           	opt stack 0
   330  000070                     ftoa@f:
   331                           	opt stack 0
   332                           
   333                           ; 3 bytes @ 0x10
   334  000070                     	ds	3
   335  000073                     ftoa@status:
   336                           	opt stack 0
   337                           
   338                           ; 2 bytes @ 0x13
   339  000073                     	ds	2
   340  000075                     ftoa@rem:
   341                           	opt stack 0
   342                           
   343                           ; 4 bytes @ 0x15
   344  000075                     	ds	4
   345  000079                     ftoa@l:
   346                           	opt stack 0
   347                           
   348                           ; 4 bytes @ 0x19
   349  000079                     	ds	4
   350  00007D                     ftoa@cp:
   351                           	opt stack 0
   352                           
   353                           ; 2 bytes @ 0x1D
   354  00007D                     	ds	2
   355                           postinc0	equ	0xFEE
   356                           wreg	equ	0xFE8
   357                           
   358                           	psect	cstackCOMRAM
   359  000001                     __pcstackCOMRAM:
   360                           	opt stack 0
   361  000001                     ReadUSART@data:
   362                           	opt stack 0
   363                           
   364                           ; 1 bytes @ 0x0
   365  000001                     	ds	1
   366  000002                     getsUSART@buffer:
   367                           	opt stack 0
   368                           
   369                           ; 2 bytes @ 0x1
   370  000002                     	ds	2
   371  000004                     getsUSART@len:
   372                           	opt stack 0
   373                           
   374                           ; 1 bytes @ 0x3
   375  000004                     	ds	1
   376  000005                     getsUSART@data:
   377                           	opt stack 0
   378                           
   379                           ; 1 bytes @ 0x4
   380  000005                     	ds	1
   381  000006                     getsUSART@i:
   382                           	opt stack 0
   383                           
   384                           ; 1 bytes @ 0x5
   385  000006                     	ds	1
   386  000007                     ??_RS232:
   387                           
   388                           ; 0 bytes @ 0x6
   389  000007                     	ds	14
   390  000015                     ??_isdigit:
   391  000015                     ?_ReadADC:
   392                           	opt stack 0
   393  000015                     ?___wmul:
   394                           	opt stack 0
   395  000015                     ?___lwdiv:
   396                           	opt stack 0
   397  000015                     ?___lwmod:
   398                           	opt stack 0
   399  000015                     ?___ftpack:
   400                           	opt stack 0
   401  000015                     ?___ftneg:
   402                           	opt stack 0
   403  000015                     ?___lldiv:
   404                           	opt stack 0
   405  000015                     OpenADC@config2:
   406                           	opt stack 0
   407  000015                     OpenPWM1@period:
   408                           	opt stack 0
   409  000015                     OpenPWM2@period:
   410                           	opt stack 0
   411  000015                     delay_ms_x10@tempo:
   412                           	opt stack 0
   413  000015                     dados@rw:
   414                           	opt stack 0
   415  000015                     OpenUSART@spbrg:
   416                           	opt stack 0
   417  000015                     ___wmul@multiplier:
   418                           	opt stack 0
   419  000015                     ___lwdiv@dividend:
   420                           	opt stack 0
   421  000015                     ___lwmod@dividend:
   422                           	opt stack 0
   423  000015                     ___ftpack@arg:
   424                           	opt stack 0
   425  000015                     ___ftneg@f1:
   426                           	opt stack 0
   427  000015                     ___lldiv@dividend:
   428                           	opt stack 0
   429                           
   430                           ; 4 bytes @ 0x14
   431  000015                     	ds	1
   432  000016                     OpenADC@portconfig:
   433                           	opt stack 0
   434  000016                     OpenPWM2@ccp2mx:
   435                           	opt stack 0
   436  000016                     _isdigit$1735:
   437                           	opt stack 0
   438                           
   439                           ; 1 bytes @ 0x15
   440  000016                     	ds	1
   441  000017                     ??_OpenADC:
   442  000017                     ??_ReadADC:
   443  000017                     ??_delay_ms_x10:
   444  000017                     ??_dados:
   445  000017                     OpenUSART@config:
   446                           	opt stack 0
   447  000017                     isdigit@c:
   448                           	opt stack 0
   449  000017                     ___wmul@multiplicand:
   450                           	opt stack 0
   451  000017                     ___lwdiv@divisor:
   452                           	opt stack 0
   453  000017                     ___lwmod@divisor:
   454                           	opt stack 0
   455                           
   456                           ; 2 bytes @ 0x16
   457  000017                     	ds	1
   458  000018                     dados@chr:
   459                           	opt stack 0
   460  000018                     init_uart@baudconfig:
   461                           	opt stack 0
   462  000018                     ___ftpack@exp:
   463                           	opt stack 0
   464  000018                     delay_ms_x10@t:
   465                           	opt stack 0
   466                           
   467                           ; 2 bytes @ 0x17
   468  000018                     	ds	1
   469  000019                     escreve_str_lcd@y:
   470                           	opt stack 0
   471  000019                     init_uart@config:
   472                           	opt stack 0
   473  000019                     OpenADC@config:
   474                           	opt stack 0
   475  000019                     ___ftpack@sign:
   476                           	opt stack 0
   477  000019                     ___lwmod@counter:
   478                           	opt stack 0
   479  000019                     ___wmul@product:
   480                           	opt stack 0
   481  000019                     ___lwdiv@quotient:
   482                           	opt stack 0
   483  000019                     ___lldiv@divisor:
   484                           	opt stack 0
   485                           
   486                           ; 4 bytes @ 0x18
   487  000019                     	ds	1
   488  00001A                     ??___ftpack:
   489  00001A                     ??_init_lcd:
   490  00001A                     init_uart@spbrg:
   491                           	opt stack 0
   492  00001A                     escreve_str_lcd@str:
   493                           	opt stack 0
   494                           
   495                           ; 2 bytes @ 0x19
   496  00001A                     	ds	1
   497  00001B                     ?_atoi:
   498                           	opt stack 0
   499  00001B                     ___lwdiv@counter:
   500                           	opt stack 0
   501  00001B                     atoi@s:
   502                           	opt stack 0
   503                           
   504                           ; 2 bytes @ 0x1A
   505  00001B                     	ds	1
   506  00001C                     ??_escreve_str_lcd:
   507  00001C                     utoa@buf:
   508                           	opt stack 0
   509                           
   510                           ; 2 bytes @ 0x1B
   511  00001C                     	ds	1
   512  00001D                     ??_atoi:
   513  00001D                     ?___ftadd:
   514                           	opt stack 0
   515  00001D                     ?___ftmul:
   516                           	opt stack 0
   517  00001D                     ?___lltoft:
   518                           	opt stack 0
   519  00001D                     escreve_str_lcd@x:
   520                           	opt stack 0
   521  00001D                     ___ftadd@f1:
   522                           	opt stack 0
   523  00001D                     ___ftmul@f1:
   524                           	opt stack 0
   525  00001D                     ___lldiv@quotient:
   526                           	opt stack 0
   527  00001D                     ___lltoft@c:
   528                           	opt stack 0
   529                           
   530                           ; 4 bytes @ 0x1C
   531  00001D                     	ds	1
   532  00001E                     escreve_str_lcd@addressx:
   533                           	opt stack 0
   534  00001E                     utoa@val:
   535                           	opt stack 0
   536                           
   537                           ; 2 bytes @ 0x1D
   538  00001E                     	ds	1
   539  00001F                     escreve_str_lcd@addressy:
   540                           	opt stack 0
   541  00001F                     atoi@sign:
   542                           	opt stack 0
   543                           
   544                           ; 1 bytes @ 0x1E
   545  00001F                     	ds	1
   546  000020                     atoi@a:
   547                           	opt stack 0
   548  000020                     utoa@base:
   549                           	opt stack 0
   550  000020                     ___ftadd@f2:
   551                           	opt stack 0
   552  000020                     ___ftmul@f2:
   553                           	opt stack 0
   554                           
   555                           ; 3 bytes @ 0x1F
   556  000020                     	ds	1
   557  000021                     ??___lltoft:
   558  000021                     ___lldiv@counter:
   559                           	opt stack 0
   560                           
   561                           ; 1 bytes @ 0x20
   562  000021                     	ds	1
   563  000022                     ?___awtoft:
   564                           	opt stack 0
   565  000022                     ?___llmod:
   566                           	opt stack 0
   567  000022                     ___awtoft@c:
   568                           	opt stack 0
   569  000022                     utoa@v:
   570                           	opt stack 0
   571  000022                     ___llmod@dividend:
   572                           	opt stack 0
   573                           
   574                           ; 4 bytes @ 0x21
   575  000022                     	ds	1
   576  000023                     ??___ftadd:
   577  000023                     ??___ftmul:
   578                           
   579                           ; 0 bytes @ 0x22
   580  000023                     	ds	1
   581  000024                     utoa@c:
   582                           	opt stack 0
   583                           
   584                           ; 1 bytes @ 0x23
   585  000024                     	ds	1
   586  000025                     ___awtoft@sign:
   587                           	opt stack 0
   588  000025                     ___lltoft@exp:
   589                           	opt stack 0
   590                           
   591                           ; 1 bytes @ 0x24
   592  000025                     	ds	1
   593  000026                     ___ftadd@sign:
   594                           	opt stack 0
   595  000026                     ___ftmul@exp:
   596                           	opt stack 0
   597  000026                     ___llmod@divisor:
   598                           	opt stack 0
   599                           
   600                           ; 4 bytes @ 0x25
   601  000026                     	ds	1
   602  000027                     ___ftadd@exp2:
   603                           	opt stack 0
   604  000027                     ___ftmul@f3_as_product:
   605                           	opt stack 0
   606                           
   607                           ; 3 bytes @ 0x26
   608  000027                     	ds	1
   609  000028                     ___ftadd@exp1:
   610                           	opt stack 0
   611                           
   612                           ; 1 bytes @ 0x27
   613  000028                     	ds	1
   614  000029                     ?___ftsub:
   615                           	opt stack 0
   616  000029                     ___ftsub@f1:
   617                           	opt stack 0
   618                           
   619                           ; 3 bytes @ 0x28
   620  000029                     	ds	1
   621  00002A                     ___ftmul@cntr:
   622                           	opt stack 0
   623  00002A                     ___llmod@counter:
   624                           	opt stack 0
   625                           
   626                           ; 1 bytes @ 0x29
   627  00002A                     	ds	1
   628  00002B                     ?_sprintf:
   629                           	opt stack 0
   630  00002B                     ___ftmul@sign:
   631                           	opt stack 0
   632  00002B                     sprintf@sp:
   633                           	opt stack 0
   634                           
   635                           ; 2 bytes @ 0x2A
   636  00002B                     	ds	1
   637  00002C                     ?___ftdiv:
   638                           	opt stack 0
   639  00002C                     ?___fttol:
   640                           	opt stack 0
   641  00002C                     ___ftdiv@f1:
   642                           	opt stack 0
   643  00002C                     ___ftsub@f2:
   644                           	opt stack 0
   645  00002C                     ___fttol@f1:
   646                           	opt stack 0
   647                           
   648                           ; 3 bytes @ 0x2B
   649  00002C                     	ds	1
   650  00002D                     sprintf@f:
   651                           	opt stack 0
   652                           
   653                           ; 2 bytes @ 0x2C
   654  00002D                     	ds	2
   655  00002F                     ___ftdiv@f2:
   656                           	opt stack 0
   657                           
   658                           ; 3 bytes @ 0x2E
   659  00002F                     	ds	1
   660  000030                     ??___fttol:
   661                           
   662                           ; 0 bytes @ 0x2F
   663  000030                     	ds	2
   664  000032                     ??___ftdiv:
   665                           
   666                           ; 0 bytes @ 0x31
   667  000032                     	ds	3
   668  000035                     SetDCPWM1@dutycycle:
   669                           	opt stack 0
   670  000035                     SetDCPWM2@dutycycle:
   671                           	opt stack 0
   672  000035                     itoa@cp:
   673                           	opt stack 0
   674                           
   675                           ; 2 bytes @ 0x34
   676  000035                     	ds	2
   677  000037                     postinc0	equ	0xFEE
   678                           wreg	equ	0xFE8
   679                           
   680                           ; 0 bytes @ 0x36
   681 ;;
   682 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   683 ;;
   684 ;; *************** function _main *****************
   685 ;; Defined at:
   686 ;;		line 33 in file "proton.c"
   687 ;; Parameters:    Size  Location     Type
   688 ;;		None
   689 ;; Auto vars:     Size  Location     Type
   690 ;;		None
   691 ;; Return value:  Size  Location     Type
   692 ;;		None               void
   693 ;; Registers used:
   694 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
   695 ;; Tracked objects:
   696 ;;		On entry : 0/0
   697 ;;		On exit  : 0/0
   698 ;;		Unchanged: 0/0
   699 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   700 ;;      Params:         0       0       0       0       0       0       0       0       0
   701 ;;      Locals:         0       0       0       0       0       0       0       0       0
   702 ;;      Temps:          0       0       0       0       0       0       0       0       0
   703 ;;      Totals:         0       0       0       0       0       0       0       0       0
   704 ;;Total ram usage:        0 bytes
   705 ;; Hardware stack levels required when called:    7
   706 ;; This function calls:
   707 ;;		_Board_Init
   708 ;;		_BusyADC
   709 ;;		_ConvertADC
   710 ;;		_OpenADC
   711 ;;		_OpenPWM1
   712 ;;		_OpenPWM2
   713 ;;		_ReadADC
   714 ;;		_SetDCPWM1
   715 ;;		_SetDCPWM2
   716 ;;		___awtoft
   717 ;;		___ftdiv
   718 ;;		___ftmul
   719 ;;		___fttol
   720 ;;		_atoi
   721 ;;		_delay_ms_x10
   722 ;;		_escreve_str_lcd
   723 ;;		_ftoa
   724 ;;		_init_lcd
   725 ;;		_init_uart
   726 ;;		_itoa
   727 ;; This function is called by:
   728 ;;		Startup code after reset
   729 ;; This function uses a non-reentrant model
   730 ;;
   731                           
   732                           	psect	text0
   733  00148E                     __ptext0:
   734                           	opt stack 0
   735  00148E                     _main:
   736                           	opt stack 24
   737                           
   738                           ;proton.c: 39: Board_Init();
   739                           
   740                           ;incstack = 0
   741  00148E  EC14  F012         	call	_Board_Init	;wreg free
   742                           
   743                           ;proton.c: 40: init_lcd();
   744  001492  EC42  F010         	call	_init_lcd	;wreg free
   745                           
   746                           ;proton.c: 41: init_uart();
   747  001496  EC45  F013         	call	_init_uart	;wreg free
   748                           
   749                           ;proton.c: 42: OpenADC(0b11101111 & 0b11111111 & 0b11111111, 0b10000111 & 0b01111111 & 0
      +                          b11111100 , 0b11111110 );
   750  00149A  0E04               	movlw	4
   751  00149C  6E15               	movwf	OpenADC@config2,c
   752  00149E  0EFE               	movlw	254
   753  0014A0  6E16               	movwf	OpenADC@portconfig,c
   754  0014A2  0EEF               	movlw	239
   755  0014A4  ECB7  F011         	call	_OpenADC
   756                           
   757                           ;proton.c: 43: OpenPWM1(0b10111011);
   758  0014A8  0EBB               	movlw	187
   759  0014AA  ECE4  F013         	call	_OpenPWM1
   760                           
   761                           ;proton.c: 44: OpenPWM2(0b10111011);
   762  0014AE  0EBB               	movlw	187
   763  0014B0  EC29  F013         	call	_OpenPWM2
   764                           
   765                           ;proton.c: 46: SetDCPWM1(ton);
   766  0014B4  C03A  F02C         	movff	_ton,___fttol@f1
   767  0014B8  C03B  F02D         	movff	_ton+1,___fttol@f1+1
   768  0014BC  C03C  F02E         	movff	_ton+2,___fttol@f1+2
   769  0014C0  EC4A  F00D         	call	___fttol	;wreg free
   770  0014C4  C02C  F035         	movff	?___fttol,SetDCPWM1@dutycycle
   771  0014C8  C02D  F036         	movff	?___fttol+1,SetDCPWM1@dutycycle+1
   772  0014CC  ECCB  F012         	call	_SetDCPWM1	;wreg free
   773                           
   774                           ;proton.c: 47: SetDCPWM2(ton);
   775  0014D0  C03A  F02C         	movff	_ton,___fttol@f1
   776  0014D4  C03B  F02D         	movff	_ton+1,___fttol@f1+1
   777  0014D8  C03C  F02E         	movff	_ton+2,___fttol@f1+2
   778  0014DC  EC4A  F00D         	call	___fttol	;wreg free
   779  0014E0  C02C  F035         	movff	?___fttol,SetDCPWM2@dutycycle
   780  0014E4  C02D  F036         	movff	?___fttol+1,SetDCPWM2@dutycycle+1
   781  0014E8  ECA9  F012         	call	_SetDCPWM2	;wreg free
   782                           
   783                           ;proton.c: 50: escreve_str_lcd(1,1,"teste PWM");
   784  0014EC  0E01               	movlw	1
   785  0014EE  6E19               	movwf	escreve_str_lcd@y,c
   786  0014F0  0E60               	movlw	low STR_1
   787  0014F2  6E1A               	movwf	escreve_str_lcd@str,c
   788  0014F4  0E10               	movlw	high STR_1
   789  0014F6  6E1B               	movwf	escreve_str_lcd@str+1,c
   790  0014F8  0E01               	movlw	1
   791  0014FA  ECEF  F00F         	call	_escreve_str_lcd
   792                           
   793                           ;proton.c: 51: escreve_str_lcd(1,2,"test prog Linux");
   794  0014FE  0E02               	movlw	2
   795  001500  6E19               	movwf	escreve_str_lcd@y,c
   796  001502  0E45               	movlw	low STR_2
   797  001504  6E1A               	movwf	escreve_str_lcd@str,c
   798  001506  0E10               	movlw	high STR_2
   799  001508  6E1B               	movwf	escreve_str_lcd@str+1,c
   800  00150A  0E01               	movlw	1
   801  00150C  ECEF  F00F         	call	_escreve_str_lcd
   802                           
   803                           ;proton.c: 52: rx1[0]=0;
   804  001510  0E00               	movlw	0
   805  001512  6E44               	movwf	_rx1,c
   806                           
   807                           ;proton.c: 53: rx1[1]=0;
   808  001514  0E00               	movlw	0
   809  001516  6E45               	movwf	_rx1+1,c
   810                           
   811                           ;proton.c: 54: rx1[2]=0;
   812  001518  0E00               	movlw	0
   813  00151A  6E46               	movwf	_rx1+2,c
   814                           
   815                           ;proton.c: 55: rx1[3]=0;
   816  00151C  0E00               	movlw	0
   817  00151E  6E47               	movwf	_rx1+3,c
   818                           
   819                           ;proton.c: 56: rx1[4]=0;
   820  001520  0E00               	movlw	0
   821  001522  6E48               	movwf	_rx1+4,c
   822  001524  D000               	goto	l3294
   823  001526                     l3294:
   824                           
   825                           ;proton.c: 58: {
   826                           ;proton.c: 60: if (flag == 1)
   827  001526  043D               	decf	_flag,w,c
   828  001528  103E               	iorwf	_flag+1,w,c
   829  00152A  A4D8               	btfss	status,2,c
   830  00152C  D0DF               	goto	l3334
   831                           
   832                           ;proton.c: 61: {
   833                           ;proton.c: 62: escreve_str_lcd(1,2,"    ");
   834  00152E  0E02               	movlw	2
   835  001530  6E19               	movwf	escreve_str_lcd@y,c
   836  001532  0E6C               	movlw	low (STR_6+2)
   837  001534  6E1A               	movwf	escreve_str_lcd@str,c
   838  001536  0E10               	movlw	high (STR_6+2)
   839  001538  6E1B               	movwf	escreve_str_lcd@str+1,c
   840  00153A  0E01               	movlw	1
   841  00153C  ECEF  F00F         	call	_escreve_str_lcd
   842                           
   843                           ;proton.c: 63: escreve_str_lcd(1,3,"    ");
   844  001540  0E03               	movlw	3
   845  001542  6E19               	movwf	escreve_str_lcd@y,c
   846  001544  0E6C               	movlw	low (STR_6+2)
   847  001546  6E1A               	movwf	escreve_str_lcd@str,c
   848  001548  0E10               	movlw	high (STR_6+2)
   849  00154A  6E1B               	movwf	escreve_str_lcd@str+1,c
   850  00154C  0E01               	movlw	1
   851  00154E  ECEF  F00F         	call	_escreve_str_lcd
   852                           
   853                           ;proton.c: 64: escreve_str_lcd(1,4,"    ");
   854  001552  0E04               	movlw	4
   855  001554  6E19               	movwf	escreve_str_lcd@y,c
   856  001556  0E6C               	movlw	low (STR_6+2)
   857  001558  6E1A               	movwf	escreve_str_lcd@str,c
   858  00155A  0E10               	movlw	high (STR_6+2)
   859  00155C  6E1B               	movwf	escreve_str_lcd@str+1,c
   860  00155E  0E01               	movlw	1
   861  001560  ECEF  F00F         	call	_escreve_str_lcd
   862                           
   863                           ;proton.c: 65: delay_ms_x10(10);
   864  001564  0E00               	movlw	0
   865  001566  6E16               	movwf	delay_ms_x10@tempo+1,c
   866  001568  0E0A               	movlw	10
   867  00156A  6E15               	movwf	delay_ms_x10@tempo,c
   868  00156C  ECED  F012         	call	_delay_ms_x10	;wreg free
   869                           
   870                           ;proton.c: 66: escreve_str_lcd(1,2,rx1);
   871  001570  0E02               	movlw	2
   872  001572  6E19               	movwf	escreve_str_lcd@y,c
   873  001574  0E44               	movlw	low _rx1
   874  001576  6E1A               	movwf	escreve_str_lcd@str,c
   875  001578  0E00               	movlw	high _rx1
   876  00157A  6E1B               	movwf	escreve_str_lcd@str+1,c
   877  00157C  0E01               	movlw	1
   878  00157E  ECEF  F00F         	call	_escreve_str_lcd
   879                           
   880                           ;proton.c: 67: delay_ms_x10(10);
   881  001582  0E00               	movlw	0
   882  001584  6E16               	movwf	delay_ms_x10@tempo+1,c
   883  001586  0E0A               	movlw	10
   884  001588  6E15               	movwf	delay_ms_x10@tempo,c
   885  00158A  ECED  F012         	call	_delay_ms_x10	;wreg free
   886                           
   887                           ;proton.c: 69: a=atoi((char *)rx1);
   888  00158E  0E44               	movlw	low _rx1
   889  001590  6E1B               	movwf	atoi@s,c
   890  001592  0E00               	movlw	high _rx1
   891  001594  6E1C               	movwf	atoi@s+1,c
   892  001596  ECCD  F00E         	call	_atoi	;wreg free
   893  00159A  C01B  F022         	movff	?_atoi,___awtoft@c
   894  00159E  C01C  F023         	movff	?_atoi+1,___awtoft@c+1
   895  0015A2  EC0B  F013         	call	___awtoft	;wreg free
   896  0015A6  C022  F037         	movff	?___awtoft,_a
   897  0015AA  C023  F038         	movff	?___awtoft+1,_a+1
   898  0015AE  C024  F039         	movff	?___awtoft+2,_a+2
   899                           
   900                           ;proton.c: 70: itoa(rx,a,10);
   901  0015B2  0E48               	movlw	low _rx
   902  0015B4  0100               	movlb	0	; () banked
   903  0015B6  6F66               	movwf	itoa@buf& (0+255),b
   904  0015B8  0E00               	movlw	high _rx
   905  0015BA  0100               	movlb	0	; () banked
   906  0015BC  6F67               	movwf	(itoa@buf+1)& (0+255),b
   907  0015BE  C037  F02C         	movff	_a,___fttol@f1
   908  0015C2  C038  F02D         	movff	_a+1,___fttol@f1+1
   909  0015C6  C039  F02E         	movff	_a+2,___fttol@f1+2
   910  0015CA  EC4A  F00D         	call	___fttol	;wreg free
   911  0015CE  C02C  F068         	movff	?___fttol,itoa@val
   912  0015D2  C02D  F069         	movff	?___fttol+1,itoa@val+1
   913  0015D6  0E00               	movlw	0
   914  0015D8  0100               	movlb	0	; () banked
   915  0015DA  6F6B               	movwf	(itoa@base+1)& (0+255),b
   916  0015DC  0E0A               	movlw	10
   917  0015DE  6F6A               	movwf	itoa@base& (0+255),b
   918  0015E0  EC3B  F012         	call	_itoa	;wreg free
   919                           
   920                           ;proton.c: 71: escreve_str_lcd(1,3,rx);
   921  0015E4  0E03               	movlw	3
   922  0015E6  6E19               	movwf	escreve_str_lcd@y,c
   923  0015E8  0E48               	movlw	low _rx
   924  0015EA  6E1A               	movwf	escreve_str_lcd@str,c
   925  0015EC  0E00               	movlw	high _rx
   926  0015EE  6E1B               	movwf	escreve_str_lcd@str+1,c
   927  0015F0  0E01               	movlw	1
   928  0015F2  ECEF  F00F         	call	_escreve_str_lcd
   929                           
   930                           ;proton.c: 72: delay_ms_x10(10);
   931  0015F6  0E00               	movlw	0
   932  0015F8  6E16               	movwf	delay_ms_x10@tempo+1,c
   933  0015FA  0E0A               	movlw	10
   934  0015FC  6E15               	movwf	delay_ms_x10@tempo,c
   935  0015FE  ECED  F012         	call	_delay_ms_x10	;wreg free
   936                           
   937                           ;proton.c: 73: ton=a*1023/100;
   938  001602  0EC0               	movlw	192
   939  001604  6E20               	movwf	___ftmul@f2,c
   940  001606  0E7F               	movlw	127
   941  001608  6E21               	movwf	___ftmul@f2+1,c
   942  00160A  0E44               	movlw	68
   943  00160C  6E22               	movwf	___ftmul@f2+2,c
   944  00160E  C037  F01D         	movff	_a,___ftmul@f1
   945  001612  C038  F01E         	movff	_a+1,___ftmul@f1+1
   946  001616  C039  F01F         	movff	_a+2,___ftmul@f1+2
   947  00161A  EC51  F00E         	call	___ftmul	;wreg free
   948  00161E  C01D  F02C         	movff	?___ftmul,___ftdiv@f1
   949  001622  C01E  F02D         	movff	?___ftmul+1,___ftdiv@f1+1
   950  001626  C01F  F02E         	movff	?___ftmul+2,___ftdiv@f1+2
   951  00162A  0E00               	movlw	0
   952  00162C  6E2F               	movwf	___ftdiv@f2,c
   953  00162E  0EC8               	movlw	200
   954  001630  6E30               	movwf	___ftdiv@f2+1,c
   955  001632  0E42               	movlw	66
   956  001634  6E31               	movwf	___ftdiv@f2+2,c
   957  001636  ECD1  F00D         	call	___ftdiv	;wreg free
   958  00163A  C02C  F03A         	movff	?___ftdiv,_ton
   959  00163E  C02D  F03B         	movff	?___ftdiv+1,_ton+1
   960  001642  C02E  F03C         	movff	?___ftdiv+2,_ton+2
   961                           
   962                           ;proton.c: 75: SetDCPWM1(ton);
   963  001646  C03A  F02C         	movff	_ton,___fttol@f1
   964  00164A  C03B  F02D         	movff	_ton+1,___fttol@f1+1
   965  00164E  C03C  F02E         	movff	_ton+2,___fttol@f1+2
   966  001652  EC4A  F00D         	call	___fttol	;wreg free
   967  001656  C02C  F035         	movff	?___fttol,SetDCPWM1@dutycycle
   968  00165A  C02D  F036         	movff	?___fttol+1,SetDCPWM1@dutycycle+1
   969  00165E  ECCB  F012         	call	_SetDCPWM1	;wreg free
   970                           
   971                           ;proton.c: 76: SetDCPWM2(ton);
   972  001662  C03A  F02C         	movff	_ton,___fttol@f1
   973  001666  C03B  F02D         	movff	_ton+1,___fttol@f1+1
   974  00166A  C03C  F02E         	movff	_ton+2,___fttol@f1+2
   975  00166E  EC4A  F00D         	call	___fttol	;wreg free
   976  001672  C02C  F035         	movff	?___fttol,SetDCPWM2@dutycycle
   977  001676  C02D  F036         	movff	?___fttol+1,SetDCPWM2@dutycycle+1
   978  00167A  ECA9  F012         	call	_SetDCPWM2	;wreg free
   979                           
   980                           ;proton.c: 77: itoa(rx,ton,10);
   981  00167E  0E48               	movlw	low _rx
   982  001680  0100               	movlb	0	; () banked
   983  001682  6F66               	movwf	itoa@buf& (0+255),b
   984  001684  0E00               	movlw	high _rx
   985  001686  0100               	movlb	0	; () banked
   986  001688  6F67               	movwf	(itoa@buf+1)& (0+255),b
   987  00168A  C03A  F02C         	movff	_ton,___fttol@f1
   988  00168E  C03B  F02D         	movff	_ton+1,___fttol@f1+1
   989  001692  C03C  F02E         	movff	_ton+2,___fttol@f1+2
   990  001696  EC4A  F00D         	call	___fttol	;wreg free
   991  00169A  C02C  F068         	movff	?___fttol,itoa@val
   992  00169E  C02D  F069         	movff	?___fttol+1,itoa@val+1
   993  0016A2  0E00               	movlw	0
   994  0016A4  0100               	movlb	0	; () banked
   995  0016A6  6F6B               	movwf	(itoa@base+1)& (0+255),b
   996  0016A8  0E0A               	movlw	10
   997  0016AA  6F6A               	movwf	itoa@base& (0+255),b
   998  0016AC  EC3B  F012         	call	_itoa	;wreg free
   999                           
  1000                           ;proton.c: 78: escreve_str_lcd(1,4,rx);
  1001  0016B0  0E04               	movlw	4
  1002  0016B2  6E19               	movwf	escreve_str_lcd@y,c
  1003  0016B4  0E48               	movlw	low _rx
  1004  0016B6  6E1A               	movwf	escreve_str_lcd@str,c
  1005  0016B8  0E00               	movlw	high _rx
  1006  0016BA  6E1B               	movwf	escreve_str_lcd@str+1,c
  1007  0016BC  0E01               	movlw	1
  1008  0016BE  ECEF  F00F         	call	_escreve_str_lcd
  1009                           
  1010                           ;proton.c: 79: delay_ms_x10(10);
  1011  0016C2  0E00               	movlw	0
  1012  0016C4  6E16               	movwf	delay_ms_x10@tempo+1,c
  1013  0016C6  0E0A               	movlw	10
  1014  0016C8  6E15               	movwf	delay_ms_x10@tempo,c
  1015  0016CA  ECED  F012         	call	_delay_ms_x10	;wreg free
  1016                           
  1017                           ;proton.c: 83: rx1[0]=0;
  1018  0016CE  0E00               	movlw	0
  1019  0016D0  6E44               	movwf	_rx1,c
  1020                           
  1021                           ;proton.c: 84: rx1[1]=0;
  1022  0016D2  0E00               	movlw	0
  1023  0016D4  6E45               	movwf	_rx1+1,c
  1024                           
  1025                           ;proton.c: 85: rx1[2]=0;
  1026  0016D6  0E00               	movlw	0
  1027  0016D8  6E46               	movwf	_rx1+2,c
  1028                           
  1029                           ;proton.c: 86: rx1[3]=0;
  1030  0016DA  0E00               	movlw	0
  1031  0016DC  6E47               	movwf	_rx1+3,c
  1032                           
  1033                           ;proton.c: 87: rx1[4]=0;
  1034  0016DE  0E00               	movlw	0
  1035  0016E0  6E48               	movwf	_rx1+4,c
  1036                           
  1037                           ;proton.c: 89: flag = 0;
  1038  0016E2  0E00               	movlw	0
  1039  0016E4  6E3E               	movwf	_flag+1,c
  1040  0016E6  0E00               	movlw	0
  1041  0016E8  6E3D               	movwf	_flag,c
  1042  0016EA  D000               	goto	l3334
  1043  0016EC                     l3334:
  1044                           
  1045                           ;proton.c: 90: }
  1046                           ;proton.c: 128: ConvertADC();
  1047  0016EC  ECFC  F013         	call	_ConvertADC	;wreg free
  1048                           
  1049                           ;proton.c: 129: while( BusyADC() );
  1050  0016F0  D000               	goto	l3336
  1051  0016F2                     l3336:
  1052  0016F2  ECF5  F013         	call	_BusyADC	;wreg free
  1053  0016F6  0900               	iorlw	0
  1054  0016F8  A4D8               	btfss	status,2,c
  1055  0016FA  D7FB               	goto	l3336
  1056                           
  1057                           ;proton.c: 130: valor = ReadADC();
  1058  0016FC  ECED  F013         	call	_ReadADC	;wreg free
  1059  001700  C015  F022         	movff	?_ReadADC,___awtoft@c
  1060  001704  C016  F023         	movff	?_ReadADC+1,___awtoft@c+1
  1061  001708  EC0B  F013         	call	___awtoft	;wreg free
  1062  00170C  C022  F07F         	movff	?___awtoft,_valor
  1063  001710  C023  F080         	movff	?___awtoft+1,_valor+1
  1064  001714  C024  F081         	movff	?___awtoft+2,_valor+2
  1065                           
  1066                           ;proton.c: 131: volt=valor*5/1023;
  1067  001718  0E00               	movlw	0
  1068  00171A  6E20               	movwf	___ftmul@f2,c
  1069  00171C  0EA0               	movlw	160
  1070  00171E  6E21               	movwf	___ftmul@f2+1,c
  1071  001720  0E40               	movlw	64
  1072  001722  6E22               	movwf	___ftmul@f2+2,c
  1073  001724  C07F  F01D         	movff	_valor,___ftmul@f1
  1074  001728  C080  F01E         	movff	_valor+1,___ftmul@f1+1
  1075  00172C  C081  F01F         	movff	_valor+2,___ftmul@f1+2
  1076  001730  EC51  F00E         	call	___ftmul	;wreg free
  1077  001734  C01D  F02C         	movff	?___ftmul,___ftdiv@f1
  1078  001738  C01E  F02D         	movff	?___ftmul+1,___ftdiv@f1+1
  1079  00173C  C01F  F02E         	movff	?___ftmul+2,___ftdiv@f1+2
  1080  001740  0EC0               	movlw	192
  1081  001742  6E2F               	movwf	___ftdiv@f2,c
  1082  001744  0E7F               	movlw	127
  1083  001746  6E30               	movwf	___ftdiv@f2+1,c
  1084  001748  0E44               	movlw	68
  1085  00174A  6E31               	movwf	___ftdiv@f2+2,c
  1086  00174C  ECD1  F00D         	call	___ftdiv	;wreg free
  1087  001750  C02C  F082         	movff	?___ftdiv,_volt
  1088  001754  C02D  F083         	movff	?___ftdiv+1,_volt+1
  1089  001758  C02E  F084         	movff	?___ftdiv+2,_volt+2
  1090                           
  1091                           ;proton.c: 132: valorstr=ftoa(volt,status);
  1092  00175C  C082  F070         	movff	_volt,ftoa@f
  1093  001760  C083  F071         	movff	_volt+1,ftoa@f+1
  1094  001764  C084  F072         	movff	_volt+2,ftoa@f+2
  1095  001768  C03F  F073         	movff	_status,ftoa@status
  1096  00176C  C040  F074         	movff	_status+1,ftoa@status+1
  1097  001770  ECBB  F00C         	call	_ftoa	;wreg free
  1098  001774  C070  F041         	movff	?_ftoa,_valorstr
  1099  001778  C071  F042         	movff	?_ftoa+1,_valorstr+1
  1100                           
  1101                           ;proton.c: 133: escreve_str_lcd(8,4,"      ");
  1102  00177C  0E04               	movlw	4
  1103  00177E  6E19               	movwf	escreve_str_lcd@y,c
  1104  001780  0E6A               	movlw	low STR_6
  1105  001782  6E1A               	movwf	escreve_str_lcd@str,c
  1106  001784  0E10               	movlw	high STR_6
  1107  001786  6E1B               	movwf	escreve_str_lcd@str+1,c
  1108  001788  0E08               	movlw	8
  1109  00178A  ECEF  F00F         	call	_escreve_str_lcd
  1110                           
  1111                           ;proton.c: 134: escreve_str_lcd(8,4,valorstr);
  1112  00178E  0E04               	movlw	4
  1113  001790  6E19               	movwf	escreve_str_lcd@y,c
  1114  001792  C041  F01A         	movff	_valorstr,escreve_str_lcd@str
  1115  001796  C042  F01B         	movff	_valorstr+1,escreve_str_lcd@str+1
  1116  00179A  0E08               	movlw	8
  1117  00179C  ECEF  F00F         	call	_escreve_str_lcd
  1118                           
  1119                           ;proton.c: 135: delay_ms_x10(100);
  1120  0017A0  0E00               	movlw	0
  1121  0017A2  6E16               	movwf	delay_ms_x10@tempo+1,c
  1122  0017A4  0E64               	movlw	100
  1123  0017A6  6E15               	movwf	delay_ms_x10@tempo,c
  1124  0017A8  ECED  F012         	call	_delay_ms_x10	;wreg free
  1125  0017AC  D6BC               	goto	l3294
  1126  0017AE  EF0C  F008         	goto	start
  1127  0017B2                     __end_of_main:
  1128                           	opt stack 0
  1129                           postinc0	equ	0xFEE
  1130                           wreg	equ	0xFE8
  1131                           status	equ	0xFD8
  1132                           
  1133 ;; *************** function _itoa *****************
  1134 ;; Defined at:
  1135 ;;		line 4 in file "/opt/microchip/xc8/v1.34/sources/common/itoa.c"
  1136 ;; Parameters:    Size  Location     Type
  1137 ;;  buf             2    6[BANK0 ] PTR unsigned char 
  1138 ;;		 -> rx(3), 
  1139 ;;  val             2    8[BANK0 ] int 
  1140 ;;  base            2   10[BANK0 ] int 
  1141 ;; Auto vars:     Size  Location     Type
  1142 ;;  cp              2   52[COMRAM] PTR unsigned char 
  1143 ;;		 -> rx(3), 
  1144 ;; Return value:  Size  Location     Type
  1145 ;;                  2    6[BANK0 ] PTR unsigned char 
  1146 ;; Registers used:
  1147 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  1148 ;; Tracked objects:
  1149 ;;		On entry : 0/0
  1150 ;;		On exit  : 0/0
  1151 ;;		Unchanged: 0/0
  1152 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1153 ;;      Params:         0       6       0       0       0       0       0       0       0
  1154 ;;      Locals:         2       0       0       0       0       0       0       0       0
  1155 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1156 ;;      Totals:         2       6       0       0       0       0       0       0       0
  1157 ;;Total ram usage:        8 bytes
  1158 ;; Hardware stack levels used:    1
  1159 ;; Hardware stack levels required when called:    5
  1160 ;; This function calls:
  1161 ;;		_utoa
  1162 ;; This function is called by:
  1163 ;;		_main
  1164 ;; This function uses a non-reentrant model
  1165 ;;
  1166                           
  1167                           	psect	text1
  1168  002476                     __ptext1:
  1169                           	opt stack 0
  1170  002476                     _itoa:
  1171                           	opt stack 25
  1172                           
  1173                           ;incstack = 0
  1174  002476  C066  F035         	movff	itoa@buf,itoa@cp
  1175  00247A  C067  F036         	movff	itoa@buf+1,itoa@cp+1
  1176  00247E  0100               	movlb	0	; () banked
  1177  002480  AF69               	btfss	(itoa@val+1)& (0+255),7,b
  1178  002482  D00F               	goto	l3182
  1179                           
  1180                           ; BSR set to: 0
  1181  002484  C066  FFD9         	movff	itoa@buf,fsr2l
  1182  002488  C067  FFDA         	movff	itoa@buf+1,fsr2h
  1183  00248C  0E2D               	movlw	45
  1184  00248E  6EDF               	movwf	indf2,c
  1185                           
  1186                           ; BSR set to: 0
  1187  002490  0100               	movlb	0	; () banked
  1188  002492  4B66               	infsnz	itoa@buf& (0+255),f,b
  1189  002494  2B67               	incf	(itoa@buf+1)& (0+255),f,b
  1190                           
  1191                           ; BSR set to: 0
  1192  002496  0100               	movlb	0	; () banked
  1193  002498  6D68               	negf	itoa@val& (0+255),b
  1194  00249A  1F69               	comf	(itoa@val+1)& (0+255),f,b
  1195  00249C  B0D8               	btfsc	status,0,c
  1196  00249E  2B69               	incf	(itoa@val+1)& (0+255),f,b
  1197  0024A0  D000               	goto	l3182
  1198  0024A2                     l3182:
  1199                           
  1200                           ; BSR set to: 0
  1201  0024A2  C066  F01C         	movff	itoa@buf,utoa@buf
  1202  0024A6  C067  F01D         	movff	itoa@buf+1,utoa@buf+1
  1203  0024AA  C068  F01E         	movff	itoa@val,utoa@val
  1204  0024AE  C069  F01F         	movff	itoa@val+1,utoa@val+1
  1205  0024B2  C06A  F020         	movff	itoa@base,utoa@base
  1206  0024B6  C06B  F021         	movff	itoa@base+1,utoa@base+1
  1207  0024BA  EC9A  F00F         	call	_utoa	;wreg free
  1208  0024BE  D000               	goto	l793
  1209  0024C0                     l793:
  1210  0024C0  0012               	return		;funcret
  1211  0024C2                     __end_of_itoa:
  1212                           	opt stack 0
  1213                           postinc0	equ	0xFEE
  1214                           wreg	equ	0xFE8
  1215                           indf2	equ	0xFDF
  1216                           fsr2h	equ	0xFDA
  1217                           fsr2l	equ	0xFD9
  1218                           status	equ	0xFD8
  1219                           
  1220 ;; *************** function _utoa *****************
  1221 ;; Defined at:
  1222 ;;		line 17 in file "/opt/microchip/xc8/v1.34/sources/common/itoa.c"
  1223 ;; Parameters:    Size  Location     Type
  1224 ;;  buf             2   27[COMRAM] PTR unsigned char 
  1225 ;;		 -> rx(3), 
  1226 ;;  val             2   29[COMRAM] unsigned int 
  1227 ;;  base            2   31[COMRAM] int 
  1228 ;; Auto vars:     Size  Location     Type
  1229 ;;  v               2   33[COMRAM] unsigned int 
  1230 ;;  c               1   35[COMRAM] unsigned char 
  1231 ;; Return value:  Size  Location     Type
  1232 ;;                  2   27[COMRAM] PTR unsigned char 
  1233 ;; Registers used:
  1234 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  1235 ;; Tracked objects:
  1236 ;;		On entry : 0/0
  1237 ;;		On exit  : 0/0
  1238 ;;		Unchanged: 0/0
  1239 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1240 ;;      Params:         6       0       0       0       0       0       0       0       0
  1241 ;;      Locals:         3       0       0       0       0       0       0       0       0
  1242 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1243 ;;      Totals:         9       0       0       0       0       0       0       0       0
  1244 ;;Total ram usage:        9 bytes
  1245 ;; Hardware stack levels used:    1
  1246 ;; Hardware stack levels required when called:    4
  1247 ;; This function calls:
  1248 ;;		___lwdiv
  1249 ;;		___lwmod
  1250 ;; This function is called by:
  1251 ;;		_itoa
  1252 ;; This function uses a non-reentrant model
  1253 ;;
  1254                           
  1255                           	psect	text2
  1256  001F34                     __ptext2:
  1257                           	opt stack 0
  1258  001F34                     _utoa:
  1259                           	opt stack 25
  1260                           
  1261                           ;incstack = 0
  1262  001F34  C01E  F022         	movff	utoa@val,utoa@v
  1263  001F38  C01F  F023         	movff	utoa@val+1,utoa@v+1
  1264  001F3C  D000               	goto	l2354
  1265  001F3E                     l2354:
  1266  001F3E  C022  F015         	movff	utoa@v,___lwdiv@dividend
  1267  001F42  C023  F016         	movff	utoa@v+1,___lwdiv@dividend+1
  1268  001F46  C020  F017         	movff	utoa@base,___lwdiv@divisor
  1269  001F4A  C021  F018         	movff	utoa@base+1,___lwdiv@divisor+1
  1270  001F4E  ECE6  F011         	call	___lwdiv	;wreg free
  1271  001F52  C015  F022         	movff	?___lwdiv,utoa@v
  1272  001F56  C016  F023         	movff	?___lwdiv+1,utoa@v+1
  1273  001F5A  4A1C               	infsnz	utoa@buf,f,c
  1274  001F5C  2A1D               	incf	utoa@buf+1,f,c
  1275  001F5E  5022               	movf	utoa@v,w,c
  1276  001F60  1023               	iorwf	utoa@v+1,w,c
  1277  001F62  A4D8               	btfss	status,2,c
  1278  001F64  D7EC               	goto	l2354
  1279  001F66  C01C  FFD9         	movff	utoa@buf,fsr2l
  1280  001F6A  C01D  FFDA         	movff	utoa@buf+1,fsr2h
  1281  001F6E  0E00               	movlw	0
  1282  001F70  6EDF               	movwf	indf2,c
  1283  001F72  061C               	decf	utoa@buf,f,c
  1284  001F74  A0D8               	btfss	status,0,c
  1285  001F76  061D               	decf	utoa@buf+1,f,c
  1286  001F78  D000               	goto	l2364
  1287  001F7A                     l2364:
  1288  001F7A  C01E  F015         	movff	utoa@val,___lwmod@dividend
  1289  001F7E  C01F  F016         	movff	utoa@val+1,___lwmod@dividend+1
  1290  001F82  C020  F017         	movff	utoa@base,___lwmod@divisor
  1291  001F86  C021  F018         	movff	utoa@base+1,___lwmod@divisor+1
  1292  001F8A  EC61  F012         	call	___lwmod	;wreg free
  1293  001F8E  5015               	movf	?___lwmod,w,c
  1294  001F90  6E24               	movwf	utoa@c,c
  1295  001F92  C01E  F015         	movff	utoa@val,___lwdiv@dividend
  1296  001F96  C01F  F016         	movff	utoa@val+1,___lwdiv@dividend+1
  1297  001F9A  C020  F017         	movff	utoa@base,___lwdiv@divisor
  1298  001F9E  C021  F018         	movff	utoa@base+1,___lwdiv@divisor+1
  1299  001FA2  ECE6  F011         	call	___lwdiv	;wreg free
  1300  001FA6  C015  F01E         	movff	?___lwdiv,utoa@val
  1301  001FAA  C016  F01F         	movff	?___lwdiv+1,utoa@val+1
  1302  001FAE  0E09               	movlw	9
  1303  001FB0  6424               	cpfsgt	utoa@c,c
  1304  001FB2  D002               	goto	l799
  1305  001FB4  0E07               	movlw	7
  1306  001FB6  2624               	addwf	utoa@c,f,c
  1307  001FB8                     l799:
  1308  001FB8  0E30               	movlw	48
  1309  001FBA  2624               	addwf	utoa@c,f,c
  1310  001FBC  C01C  FFD9         	movff	utoa@buf,fsr2l
  1311  001FC0  C01D  FFDA         	movff	utoa@buf+1,fsr2h
  1312  001FC4  C024  FFDF         	movff	utoa@c,indf2
  1313  001FC8  061C               	decf	utoa@buf,f,c
  1314  001FCA  A0D8               	btfss	status,0,c
  1315  001FCC  061D               	decf	utoa@buf+1,f,c
  1316  001FCE  501E               	movf	utoa@val,w,c
  1317  001FD0  101F               	iorwf	utoa@val+1,w,c
  1318  001FD2  A4D8               	btfss	status,2,c
  1319  001FD4  D7D2               	goto	l2364
  1320                           
  1321                           ;	Return value of _utoa is never used
  1322  001FD6  4A1C               	infsnz	utoa@buf,f,c
  1323  001FD8  2A1D               	incf	utoa@buf+1,f,c
  1324  001FDA  D000               	goto	l801
  1325  001FDC                     l801:
  1326  001FDC  0012               	return		;funcret
  1327  001FDE                     __end_of_utoa:
  1328                           	opt stack 0
  1329                           postinc0	equ	0xFEE
  1330                           wreg	equ	0xFE8
  1331                           indf2	equ	0xFDF
  1332                           fsr2h	equ	0xFDA
  1333                           fsr2l	equ	0xFD9
  1334                           status	equ	0xFD8
  1335                           
  1336 ;; *************** function ___lwmod *****************
  1337 ;; Defined at:
  1338 ;;		line 8 in file "/opt/microchip/xc8/v1.34/sources/common/lwmod.c"
  1339 ;; Parameters:    Size  Location     Type
  1340 ;;  dividend        2   20[COMRAM] unsigned int 
  1341 ;;  divisor         2   22[COMRAM] unsigned int 
  1342 ;; Auto vars:     Size  Location     Type
  1343 ;;  counter         1   24[COMRAM] unsigned char 
  1344 ;; Return value:  Size  Location     Type
  1345 ;;                  2   20[COMRAM] unsigned int 
  1346 ;; Registers used:
  1347 ;;		wreg, status,2, status,0
  1348 ;; Tracked objects:
  1349 ;;		On entry : 0/0
  1350 ;;		On exit  : 0/0
  1351 ;;		Unchanged: 0/0
  1352 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1353 ;;      Params:         4       0       0       0       0       0       0       0       0
  1354 ;;      Locals:         1       0       0       0       0       0       0       0       0
  1355 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1356 ;;      Totals:         5       0       0       0       0       0       0       0       0
  1357 ;;Total ram usage:        5 bytes
  1358 ;; Hardware stack levels used:    1
  1359 ;; Hardware stack levels required when called:    3
  1360 ;; This function calls:
  1361 ;;		Nothing
  1362 ;; This function is called by:
  1363 ;;		_utoa
  1364 ;; This function uses a non-reentrant model
  1365 ;;
  1366                           
  1367                           	psect	text3
  1368  0024C2                     __ptext3:
  1369                           	opt stack 0
  1370  0024C2                     ___lwmod:
  1371                           	opt stack 25
  1372                           
  1373                           ;incstack = 0
  1374  0024C2  5017               	movf	___lwmod@divisor,w,c
  1375  0024C4  1018               	iorwf	___lwmod@divisor+1,w,c
  1376  0024C6  B4D8               	btfsc	status,2,c
  1377  0024C8  D01D               	goto	l903
  1378  0024CA  0E01               	movlw	1
  1379  0024CC  6E19               	movwf	___lwmod@counter,c
  1380  0024CE  D005               	goto	l2058
  1381  0024D0                     l2056:
  1382  0024D0  90D8               	bcf	status,0,c
  1383  0024D2  3617               	rlcf	___lwmod@divisor,f,c
  1384  0024D4  3618               	rlcf	___lwmod@divisor+1,f,c
  1385  0024D6  2A19               	incf	___lwmod@counter,f,c
  1386  0024D8  D000               	goto	l2058
  1387  0024DA                     l2058:
  1388  0024DA  BE18               	btfsc	___lwmod@divisor+1,7,c
  1389  0024DC  D002               	goto	l2060
  1390  0024DE  D7F8               	goto	l2056
  1391  0024E0  D000               	goto	l2060
  1392  0024E2                     l2060:
  1393  0024E2  5017               	movf	___lwmod@divisor,w,c
  1394  0024E4  5C15               	subwf	___lwmod@dividend,w,c
  1395  0024E6  5018               	movf	___lwmod@divisor+1,w,c
  1396  0024E8  5816               	subwfb	___lwmod@dividend+1,w,c
  1397  0024EA  A0D8               	btfss	status,0,c
  1398  0024EC  D005               	goto	l2064
  1399  0024EE  5017               	movf	___lwmod@divisor,w,c
  1400  0024F0  5E15               	subwf	___lwmod@dividend,f,c
  1401  0024F2  5018               	movf	___lwmod@divisor+1,w,c
  1402  0024F4  5A16               	subwfb	___lwmod@dividend+1,f,c
  1403  0024F6  D000               	goto	l2064
  1404  0024F8                     l2064:
  1405  0024F8  90D8               	bcf	status,0,c
  1406  0024FA  3218               	rrcf	___lwmod@divisor+1,f,c
  1407  0024FC  3217               	rrcf	___lwmod@divisor,f,c
  1408  0024FE  2E19               	decfsz	___lwmod@counter,f,c
  1409  002500  D7F0               	goto	l2060
  1410  002502  D000               	goto	l903
  1411  002504                     l903:
  1412  002504  C015  F015         	movff	___lwmod@dividend,?___lwmod
  1413  002508  C016  F016         	movff	___lwmod@dividend+1,?___lwmod+1
  1414  00250C  0012               	return		;funcret
  1415  00250E                     __end_of___lwmod:
  1416                           	opt stack 0
  1417                           postinc0	equ	0xFEE
  1418                           wreg	equ	0xFE8
  1419                           indf2	equ	0xFDF
  1420                           fsr2h	equ	0xFDA
  1421                           fsr2l	equ	0xFD9
  1422                           status	equ	0xFD8
  1423                           
  1424 ;; *************** function ___lwdiv *****************
  1425 ;; Defined at:
  1426 ;;		line 8 in file "/opt/microchip/xc8/v1.34/sources/common/lwdiv.c"
  1427 ;; Parameters:    Size  Location     Type
  1428 ;;  dividend        2   20[COMRAM] unsigned int 
  1429 ;;  divisor         2   22[COMRAM] unsigned int 
  1430 ;; Auto vars:     Size  Location     Type
  1431 ;;  quotient        2   24[COMRAM] unsigned int 
  1432 ;;  counter         1   26[COMRAM] unsigned char 
  1433 ;; Return value:  Size  Location     Type
  1434 ;;                  2   20[COMRAM] unsigned int 
  1435 ;; Registers used:
  1436 ;;		wreg, status,2, status,0
  1437 ;; Tracked objects:
  1438 ;;		On entry : 0/0
  1439 ;;		On exit  : 0/0
  1440 ;;		Unchanged: 0/0
  1441 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1442 ;;      Params:         4       0       0       0       0       0       0       0       0
  1443 ;;      Locals:         3       0       0       0       0       0       0       0       0
  1444 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1445 ;;      Totals:         7       0       0       0       0       0       0       0       0
  1446 ;;Total ram usage:        7 bytes
  1447 ;; Hardware stack levels used:    1
  1448 ;; Hardware stack levels required when called:    3
  1449 ;; This function calls:
  1450 ;;		Nothing
  1451 ;; This function is called by:
  1452 ;;		_utoa
  1453 ;; This function uses a non-reentrant model
  1454 ;;
  1455                           
  1456                           	psect	text4
  1457  0023CC                     __ptext4:
  1458                           	opt stack 0
  1459  0023CC                     ___lwdiv:
  1460                           	opt stack 25
  1461                           
  1462                           ;incstack = 0
  1463  0023CC  0E00               	movlw	0
  1464  0023CE  6E1A               	movwf	___lwdiv@quotient+1,c
  1465  0023D0  0E00               	movlw	0
  1466  0023D2  6E19               	movwf	___lwdiv@quotient,c
  1467  0023D4  5017               	movf	___lwdiv@divisor,w,c
  1468  0023D6  1018               	iorwf	___lwdiv@divisor+1,w,c
  1469  0023D8  B4D8               	btfsc	status,2,c
  1470  0023DA  D021               	goto	l893
  1471  0023DC  0E01               	movlw	1
  1472  0023DE  6E1B               	movwf	___lwdiv@counter,c
  1473  0023E0  D005               	goto	l2038
  1474  0023E2                     l2036:
  1475  0023E2  90D8               	bcf	status,0,c
  1476  0023E4  3617               	rlcf	___lwdiv@divisor,f,c
  1477  0023E6  3618               	rlcf	___lwdiv@divisor+1,f,c
  1478  0023E8  2A1B               	incf	___lwdiv@counter,f,c
  1479  0023EA  D000               	goto	l2038
  1480  0023EC                     l2038:
  1481  0023EC  BE18               	btfsc	___lwdiv@divisor+1,7,c
  1482  0023EE  D002               	goto	l2040
  1483  0023F0  D7F8               	goto	l2036
  1484  0023F2  D000               	goto	l2040
  1485  0023F4                     l2040:
  1486  0023F4  90D8               	bcf	status,0,c
  1487  0023F6  3619               	rlcf	___lwdiv@quotient,f,c
  1488  0023F8  361A               	rlcf	___lwdiv@quotient+1,f,c
  1489  0023FA  5017               	movf	___lwdiv@divisor,w,c
  1490  0023FC  5C15               	subwf	___lwdiv@dividend,w,c
  1491  0023FE  5018               	movf	___lwdiv@divisor+1,w,c
  1492  002400  5816               	subwfb	___lwdiv@dividend+1,w,c
  1493  002402  A0D8               	btfss	status,0,c
  1494  002404  D006               	goto	l2048
  1495  002406  5017               	movf	___lwdiv@divisor,w,c
  1496  002408  5E15               	subwf	___lwdiv@dividend,f,c
  1497  00240A  5018               	movf	___lwdiv@divisor+1,w,c
  1498  00240C  5A16               	subwfb	___lwdiv@dividend+1,f,c
  1499  00240E  8019               	bsf	___lwdiv@quotient,0,c
  1500  002410  D000               	goto	l2048
  1501  002412                     l2048:
  1502  002412  90D8               	bcf	status,0,c
  1503  002414  3218               	rrcf	___lwdiv@divisor+1,f,c
  1504  002416  3217               	rrcf	___lwdiv@divisor,f,c
  1505  002418  2E1B               	decfsz	___lwdiv@counter,f,c
  1506  00241A  D7EC               	goto	l2040
  1507  00241C  D000               	goto	l893
  1508  00241E                     l893:
  1509  00241E  C019  F015         	movff	___lwdiv@quotient,?___lwdiv
  1510  002422  C01A  F016         	movff	___lwdiv@quotient+1,?___lwdiv+1
  1511  002426  0012               	return		;funcret
  1512  002428                     __end_of___lwdiv:
  1513                           	opt stack 0
  1514                           postinc0	equ	0xFEE
  1515                           wreg	equ	0xFE8
  1516                           indf2	equ	0xFDF
  1517                           fsr2h	equ	0xFDA
  1518                           fsr2l	equ	0xFD9
  1519                           status	equ	0xFD8
  1520                           
  1521 ;; *************** function _init_uart *****************
  1522 ;; Defined at:
  1523 ;;		line 200 in file "proton.c"
  1524 ;; Parameters:    Size  Location     Type
  1525 ;;		None
  1526 ;; Auto vars:     Size  Location     Type
  1527 ;;  spbrg           1   25[COMRAM] unsigned char 
  1528 ;;  config          1   24[COMRAM] unsigned char 
  1529 ;;  baudconfig      1   23[COMRAM] unsigned char 
  1530 ;; Return value:  Size  Location     Type
  1531 ;;		None               void
  1532 ;; Registers used:
  1533 ;;		wreg, status,2, status,0, cstack
  1534 ;; Tracked objects:
  1535 ;;		On entry : 0/0
  1536 ;;		On exit  : 0/0
  1537 ;;		Unchanged: 0/0
  1538 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1539 ;;      Params:         0       0       0       0       0       0       0       0       0
  1540 ;;      Locals:         3       0       0       0       0       0       0       0       0
  1541 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1542 ;;      Totals:         3       0       0       0       0       0       0       0       0
  1543 ;;Total ram usage:        3 bytes
  1544 ;; Hardware stack levels used:    1
  1545 ;; Hardware stack levels required when called:    4
  1546 ;; This function calls:
  1547 ;;		_OpenUSART
  1548 ;; This function is called by:
  1549 ;;		_main
  1550 ;; This function uses a non-reentrant model
  1551 ;;
  1552                           
  1553                           	psect	text5
  1554  00268A                     __ptext5:
  1555                           	opt stack 0
  1556  00268A                     _init_uart:
  1557                           	opt stack 26
  1558                           
  1559                           ;proton.c: 202: unsigned char config =0, spbrg =0, baudconfig=0;
  1560                           
  1561                           ;incstack = 0
  1562  00268A  0E00               	movlw	0
  1563  00268C  6E19               	movwf	init_uart@config,c
  1564  00268E  0E00               	movlw	0
  1565  002690  6E1A               	movwf	init_uart@spbrg,c
  1566  002692  0E00               	movlw	0
  1567  002694  6E18               	movwf	init_uart@baudconfig,c
  1568                           
  1569                           ;proton.c: 204: RCSTA&=0b01001111,TXSTAbits.TXEN=0,PIE1&=0b11001111;
  1570  002696  0E4F               	movlw	79
  1571  002698  16AB               	andwf	4011,f,c	;volatile
  1572  00269A  9AAC               	bcf	4012,5,c	;volatile
  1573  00269C  0ECF               	movlw	207
  1574  00269E  169D               	andwf	3997,f,c	;volatile
  1575                           
  1576                           ;proton.c: 206: INTCONbits.GIE = 1;
  1577  0026A0  8EF2               	bsf	intcon,7,c	;volatile
  1578                           
  1579                           ;proton.c: 207: INTCONbits.PEIE = 1;
  1580  0026A2  8CF2               	bsf	intcon,6,c	;volatile
  1581                           
  1582                           ;proton.c: 208: IPR1bits.RCIP = 1;
  1583  0026A4  8A9F               	bsf	3999,5,c	;volatile
  1584                           
  1585                           ;proton.c: 211: config = 0b01111111 & 0b11111111 & 0b11111110 & 0b11111101 & 0b11111111 
      +                          & 0b11101111;
  1586  0026A6  0E6C               	movlw	108
  1587  0026A8  6E19               	movwf	init_uart@config,c
  1588                           
  1589                           ;proton.c: 213: spbrg = 77;
  1590  0026AA  0E4D               	movlw	77
  1591  0026AC  6E1A               	movwf	init_uart@spbrg,c
  1592                           
  1593                           ;proton.c: 215: OpenUSART(config, spbrg);
  1594  0026AE  C01A  F015         	movff	init_uart@spbrg,OpenUSART@spbrg
  1595  0026B2  6A16               	clrf	OpenUSART@spbrg+1,c
  1596  0026B4  5019               	movf	init_uart@config,w,c
  1597  0026B6  EC17  F011         	call	_OpenUSART
  1598                           
  1599                           ;proton.c: 217: PIR1bits.RCIF = 0;
  1600  0026BA  9A9E               	bcf	3998,5,c	;volatile
  1601  0026BC  0012               	return		;funcret
  1602  0026BE                     __end_of_init_uart:
  1603                           	opt stack 0
  1604                           intcon	equ	0xFF2
  1605                           postinc0	equ	0xFEE
  1606                           wreg	equ	0xFE8
  1607                           indf2	equ	0xFDF
  1608                           fsr2h	equ	0xFDA
  1609                           fsr2l	equ	0xFD9
  1610                           status	equ	0xFD8
  1611                           
  1612 ;; *************** function _OpenUSART *****************
  1613 ;; Defined at:
  1614 ;;		line 73 in file "/opt/microchip/xc8/v1.34/sources/pic18/plib/USART/uopen.c"
  1615 ;; Parameters:    Size  Location     Type
  1616 ;;  config          1    wreg     unsigned char 
  1617 ;;  spbrg           2   20[COMRAM] unsigned int 
  1618 ;; Auto vars:     Size  Location     Type
  1619 ;;  config          1   22[COMRAM] unsigned char 
  1620 ;; Return value:  Size  Location     Type
  1621 ;;		None               void
  1622 ;; Registers used:
  1623 ;;		wreg, status,2
  1624 ;; Tracked objects:
  1625 ;;		On entry : 0/0
  1626 ;;		On exit  : 0/0
  1627 ;;		Unchanged: 0/0
  1628 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1629 ;;      Params:         2       0       0       0       0       0       0       0       0
  1630 ;;      Locals:         1       0       0       0       0       0       0       0       0
  1631 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1632 ;;      Totals:         3       0       0       0       0       0       0       0       0
  1633 ;;Total ram usage:        3 bytes
  1634 ;; Hardware stack levels used:    1
  1635 ;; Hardware stack levels required when called:    3
  1636 ;; This function calls:
  1637 ;;		Nothing
  1638 ;; This function is called by:
  1639 ;;		_init_uart
  1640 ;; This function uses a non-reentrant model
  1641 ;;
  1642                           
  1643                           	psect	text6
  1644  00222E                     __ptext6:
  1645                           	opt stack 0
  1646  00222E                     _OpenUSART:
  1647                           	opt stack 26
  1648                           
  1649                           ;incstack = 0
  1650                           ;OpenUSART@config stored from wreg
  1651  00222E  6E17               	movwf	OpenUSART@config,c
  1652  002230  0E00               	movlw	0
  1653  002232  6EAC               	movwf	4012,c	;volatile
  1654  002234  0E00               	movlw	0
  1655  002236  6EAB               	movwf	4011,c	;volatile
  1656  002238  A017               	btfss	OpenUSART@config,0,c
  1657  00223A  D002               	goto	l2094
  1658  00223C  88AC               	bsf	4012,4,c	;volatile
  1659  00223E  D000               	goto	l2094
  1660  002240                     l2094:
  1661  002240  A217               	btfss	OpenUSART@config,1,c
  1662  002242  D003               	goto	l2098
  1663  002244  8CAC               	bsf	4012,6,c	;volatile
  1664  002246  8CAB               	bsf	4011,6,c	;volatile
  1665  002248  D000               	goto	l2098
  1666  00224A                     l2098:
  1667  00224A  A417               	btfss	OpenUSART@config,2,c
  1668  00224C  D002               	goto	l2102
  1669  00224E  8EAC               	bsf	4012,7,c	;volatile
  1670  002250  D000               	goto	l2102
  1671  002252                     l2102:
  1672  002252  A617               	btfss	OpenUSART@config,3,c
  1673  002254  D002               	goto	l308
  1674  002256  88AB               	bsf	4011,4,c	;volatile
  1675  002258  D002               	goto	l2106
  1676  00225A                     l308:
  1677  00225A  8AAB               	bsf	4011,5,c	;volatile
  1678  00225C  D000               	goto	l2106
  1679  00225E                     l2106:
  1680  00225E  B817               	btfsc	OpenUSART@config,4,c
  1681  002260  84AC               	bsf	4012,2,c	;volatile
  1682  002262  989E               	bcf	3998,4,c	;volatile
  1683  002264  AA17               	btfss	OpenUSART@config,5,c
  1684  002266  D002               	goto	l2114
  1685  002268  86AB               	bsf	4011,3,c	;volatile
  1686  00226A  D000               	goto	l2114
  1687  00226C                     l2114:
  1688  00226C  AC17               	btfss	OpenUSART@config,6,c
  1689  00226E  D002               	goto	l312
  1690  002270  8A9D               	bsf	3997,5,c	;volatile
  1691  002272  D001               	goto	l313
  1692  002274                     l312:
  1693  002274  9A9D               	bcf	3997,5,c	;volatile
  1694  002276                     l313:
  1695  002276  9A9E               	bcf	3998,5,c	;volatile
  1696  002278  AE17               	btfss	OpenUSART@config,7,c
  1697  00227A  D002               	goto	l314
  1698  00227C  889D               	bsf	3997,4,c	;volatile
  1699  00227E  D001               	goto	l315
  1700  002280                     l314:
  1701  002280  989D               	bcf	3997,4,c	;volatile
  1702  002282                     l315:
  1703  002282  C015  FFAF         	movff	OpenUSART@spbrg,4015	;volatile
  1704  002286  5016               	movf	OpenUSART@spbrg+1,w,c
  1705  002288  6EB0               	movwf	4016,c	;volatile
  1706  00228A  8AAC               	bsf	4012,5,c	;volatile
  1707  00228C  8EAB               	bsf	4011,7,c	;volatile
  1708  00228E  9C94               	bcf	3988,6,c	;volatile
  1709  002290  8E94               	bsf	3988,7,c	;volatile
  1710  002292  B8AC               	btfsc	4012,4,c	;volatile
  1711  002294  BEAC               	btfsc	4012,7,c	;volatile
  1712  002296  D002               	goto	l317
  1713  002298  8C94               	bsf	3988,6,c	;volatile
  1714  00229A  D000               	goto	l317
  1715  00229C                     l317:
  1716  00229C  0012               	return		;funcret
  1717  00229E                     __end_of_OpenUSART:
  1718                           	opt stack 0
  1719                           intcon	equ	0xFF2
  1720                           postinc0	equ	0xFEE
  1721                           wreg	equ	0xFE8
  1722                           indf2	equ	0xFDF
  1723                           fsr2h	equ	0xFDA
  1724                           fsr2l	equ	0xFD9
  1725                           status	equ	0xFD8
  1726                           
  1727 ;; *************** function _init_lcd *****************
  1728 ;; Defined at:
  1729 ;;		line 62 in file "LCD8.h"
  1730 ;; Parameters:    Size  Location     Type
  1731 ;;		None
  1732 ;; Auto vars:     Size  Location     Type
  1733 ;;		None
  1734 ;; Return value:  Size  Location     Type
  1735 ;;		None               void
  1736 ;; Registers used:
  1737 ;;		wreg, status,2, status,0, cstack
  1738 ;; Tracked objects:
  1739 ;;		On entry : 0/0
  1740 ;;		On exit  : 0/0
  1741 ;;		Unchanged: 0/0
  1742 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1743 ;;      Params:         0       0       0       0       0       0       0       0       0
  1744 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1745 ;;      Temps:          1       0       0       0       0       0       0       0       0
  1746 ;;      Totals:         1       0       0       0       0       0       0       0       0
  1747 ;;Total ram usage:        1 bytes
  1748 ;; Hardware stack levels used:    1
  1749 ;; Hardware stack levels required when called:    4
  1750 ;; This function calls:
  1751 ;;		_dados
  1752 ;;		_delay_ms_x10
  1753 ;; This function is called by:
  1754 ;;		_main
  1755 ;; This function uses a non-reentrant model
  1756 ;;
  1757                           
  1758                           	psect	text7
  1759  002084                     __ptext7:
  1760                           	opt stack 0
  1761  002084                     _init_lcd:
  1762                           	opt stack 26
  1763                           
  1764                           ;LCD8.h: 64: delay_ms_x10(3);
  1765                           
  1766                           ;incstack = 0
  1767  002084  0E00               	movlw	0
  1768  002086  6E16               	movwf	delay_ms_x10@tempo+1,c
  1769  002088  0E03               	movlw	3
  1770  00208A  6E15               	movwf	delay_ms_x10@tempo,c
  1771  00208C  ECED  F012         	call	_delay_ms_x10	;wreg free
  1772                           
  1773                           ;LCD8.h: 66: dados(0b00111000, 0);
  1774  002090  0E00               	movlw	0
  1775  002092  6E16               	movwf	dados@rw+1,c
  1776  002094  0E00               	movlw	0
  1777  002096  6E15               	movwf	dados@rw,c
  1778  002098  0E38               	movlw	56
  1779  00209A  EC77  F013         	call	_dados
  1780                           
  1781                           ;LCD8.h: 67: dados(0b00001110, 0);
  1782  00209E  0E00               	movlw	0
  1783  0020A0  6E16               	movwf	dados@rw+1,c
  1784  0020A2  0E00               	movlw	0
  1785  0020A4  6E15               	movwf	dados@rw,c
  1786  0020A6  0E0E               	movlw	14
  1787  0020A8  EC77  F013         	call	_dados
  1788                           
  1789                           ;LCD8.h: 68: _delay((unsigned long)((5)*(48000000/4000.0)));
  1790  0020AC  0E4E               	movlw	78
  1791  0020AE  6E1A               	movwf	??_init_lcd& (0+255),c
  1792  0020B0  0EEB               	movlw	235
  1793  0020B2                     u3427:
  1794  0020B2  2EE8               	decfsz	wreg,f,c
  1795  0020B4  D7FE               	goto	u3427
  1796  0020B6  2E1A               	decfsz	??_init_lcd& (0+255),f,c
  1797  0020B8  D7FC               	goto	u3427
  1798  0020BA  F000               	nop	
  1799                           
  1800                           ;LCD8.h: 69: dados(0b00000110, 0);
  1801  0020BC  0E00               	movlw	0
  1802  0020BE  6E16               	movwf	dados@rw+1,c
  1803  0020C0  0E00               	movlw	0
  1804  0020C2  6E15               	movwf	dados@rw,c
  1805  0020C4  0E06               	movlw	6
  1806  0020C6  EC77  F013         	call	_dados
  1807                           
  1808                           ;LCD8.h: 71: dados(0b00110000, 0);
  1809  0020CA  0E00               	movlw	0
  1810  0020CC  6E16               	movwf	dados@rw+1,c
  1811  0020CE  0E00               	movlw	0
  1812  0020D0  6E15               	movwf	dados@rw,c
  1813  0020D2  0E30               	movlw	48
  1814  0020D4  EC77  F013         	call	_dados
  1815                           
  1816                           ;LCD8.h: 72: dados(0b00110000, 0);
  1817  0020D8  0E00               	movlw	0
  1818  0020DA  6E16               	movwf	dados@rw+1,c
  1819  0020DC  0E00               	movlw	0
  1820  0020DE  6E15               	movwf	dados@rw,c
  1821  0020E0  0E30               	movlw	48
  1822  0020E2  EC77  F013         	call	_dados
  1823                           
  1824                           ;LCD8.h: 73: dados(0b00110000, 0);
  1825  0020E6  0E00               	movlw	0
  1826  0020E8  6E16               	movwf	dados@rw+1,c
  1827  0020EA  0E00               	movlw	0
  1828  0020EC  6E15               	movwf	dados@rw,c
  1829  0020EE  0E30               	movlw	48
  1830  0020F0  EC77  F013         	call	_dados
  1831                           
  1832                           ;LCD8.h: 74: dados(0b00111000, 0);
  1833  0020F4  0E00               	movlw	0
  1834  0020F6  6E16               	movwf	dados@rw+1,c
  1835  0020F8  0E00               	movlw	0
  1836  0020FA  6E15               	movwf	dados@rw,c
  1837  0020FC  0E38               	movlw	56
  1838  0020FE  EC77  F013         	call	_dados
  1839                           
  1840                           ;LCD8.h: 75: dados(0b00000001, 0);
  1841  002102  0E00               	movlw	0
  1842  002104  6E16               	movwf	dados@rw+1,c
  1843  002106  0E00               	movlw	0
  1844  002108  6E15               	movwf	dados@rw,c
  1845  00210A  0E01               	movlw	1
  1846  00210C  EC77  F013         	call	_dados
  1847                           
  1848                           ;LCD8.h: 76: dados(0b00000110, 0);
  1849  002110  0E00               	movlw	0
  1850  002112  6E16               	movwf	dados@rw+1,c
  1851  002114  0E00               	movlw	0
  1852  002116  6E15               	movwf	dados@rw,c
  1853  002118  0E06               	movlw	6
  1854  00211A  EC77  F013         	call	_dados
  1855  00211E  0012               	return		;funcret
  1856  002120                     __end_of_init_lcd:
  1857                           	opt stack 0
  1858                           intcon	equ	0xFF2
  1859                           postinc0	equ	0xFEE
  1860                           wreg	equ	0xFE8
  1861                           indf2	equ	0xFDF
  1862                           fsr2h	equ	0xFDA
  1863                           fsr2l	equ	0xFD9
  1864                           status	equ	0xFD8
  1865                           
  1866 ;; *************** function _delay_ms_x10 *****************
  1867 ;; Defined at:
  1868 ;;		line 39 in file "LCD8.h"
  1869 ;; Parameters:    Size  Location     Type
  1870 ;;  tempo           2   20[COMRAM] int 
  1871 ;; Auto vars:     Size  Location     Type
  1872 ;;  t               2   23[COMRAM] int 
  1873 ;; Return value:  Size  Location     Type
  1874 ;;		None               void
  1875 ;; Registers used:
  1876 ;;		wreg, status,2, status,0
  1877 ;; Tracked objects:
  1878 ;;		On entry : 0/0
  1879 ;;		On exit  : 0/0
  1880 ;;		Unchanged: 0/0
  1881 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1882 ;;      Params:         2       0       0       0       0       0       0       0       0
  1883 ;;      Locals:         2       0       0       0       0       0       0       0       0
  1884 ;;      Temps:          1       0       0       0       0       0       0       0       0
  1885 ;;      Totals:         5       0       0       0       0       0       0       0       0
  1886 ;;Total ram usage:        5 bytes
  1887 ;; Hardware stack levels used:    1
  1888 ;; Hardware stack levels required when called:    3
  1889 ;; This function calls:
  1890 ;;		Nothing
  1891 ;; This function is called by:
  1892 ;;		_init_lcd
  1893 ;;		_main
  1894 ;; This function uses a non-reentrant model
  1895 ;;
  1896                           
  1897                           	psect	text8
  1898  0025DA                     __ptext8:
  1899                           	opt stack 0
  1900  0025DA                     _delay_ms_x10:
  1901                           	opt stack 26
  1902                           
  1903                           ;LCD8.h: 41: int t = 0;
  1904                           
  1905                           ;incstack = 0
  1906  0025DA  0E00               	movlw	0
  1907  0025DC  6E19               	movwf	delay_ms_x10@t+1,c
  1908  0025DE  0E00               	movlw	0
  1909  0025E0  6E18               	movwf	delay_ms_x10@t,c
  1910                           
  1911                           ;LCD8.h: 42: while(t<tempo)
  1912  0025E2  D00A               	goto	l81
  1913  0025E4                     l2070:
  1914                           
  1915                           ;LCD8.h: 43: {
  1916                           ;LCD8.h: 44: _delay((unsigned long)((10)*(48000000/4000.0)));
  1917  0025E4  0E9C               	movlw	156
  1918  0025E6  6E17               	movwf	??_delay_ms_x10& (0+255),c
  1919  0025E8  0ED7               	movlw	215
  1920  0025EA                     u3437:
  1921  0025EA  2EE8               	decfsz	wreg,f,c
  1922  0025EC  D7FE               	goto	u3437
  1923  0025EE  2E17               	decfsz	??_delay_ms_x10& (0+255),f,c
  1924  0025F0  D7FC               	goto	u3437
  1925  0025F2  F000               	nop	
  1926                           
  1927                           ;LCD8.h: 45: t++;
  1928  0025F4  4A18               	infsnz	delay_ms_x10@t,f,c
  1929  0025F6  2A19               	incf	delay_ms_x10@t+1,f,c
  1930  0025F8                     l81:
  1931  0025F8  5015               	movf	delay_ms_x10@tempo,w,c
  1932  0025FA  5C18               	subwf	delay_ms_x10@t,w,c
  1933  0025FC  5019               	movf	delay_ms_x10@t+1,w,c
  1934  0025FE  0A80               	xorlw	128
  1935  002600  6E17               	movwf	??_delay_ms_x10& (0+255),c
  1936  002602  5016               	movf	delay_ms_x10@tempo+1,w,c
  1937  002604  0A80               	xorlw	128
  1938  002606  5817               	subwfb	??_delay_ms_x10& (0+255),w,c
  1939  002608  A0D8               	btfss	status,0,c
  1940  00260A  D7EC               	goto	l2070
  1941                           
  1942                           ;LCD8.h: 46: }
  1943                           ;LCD8.h: 47: t=0;
  1944  00260C  0E00               	movlw	0
  1945  00260E  6E19               	movwf	delay_ms_x10@t+1,c
  1946  002610  0E00               	movlw	0
  1947  002612  6E18               	movwf	delay_ms_x10@t,c
  1948  002614  0012               	return		;funcret
  1949  002616                     __end_of_delay_ms_x10:
  1950                           	opt stack 0
  1951                           intcon	equ	0xFF2
  1952                           postinc0	equ	0xFEE
  1953                           wreg	equ	0xFE8
  1954                           indf2	equ	0xFDF
  1955                           fsr2h	equ	0xFDA
  1956                           fsr2l	equ	0xFD9
  1957                           status	equ	0xFD8
  1958                           
  1959 ;; *************** function _ftoa *****************
  1960 ;; Defined at:
  1961 ;;		line 6 in file "/opt/microchip/xc8/v1.34/sources/common/ftoa.c"
  1962 ;; Parameters:    Size  Location     Type
  1963 ;;  f               3   16[BANK0 ] float 
  1964 ;;  status          2   19[BANK0 ] PTR int 
  1965 ;;		 -> RAM(2047), 
  1966 ;; Auto vars:     Size  Location     Type
  1967 ;;  l               4   25[BANK0 ] unsigned long 
  1968 ;;  rem             4   21[BANK0 ] unsigned long 
  1969 ;;  cp              2   29[BANK0 ] PTR unsigned char 
  1970 ;;		 -> ftoa@buf(17), 
  1971 ;; Return value:  Size  Location     Type
  1972 ;;                  2   16[BANK0 ] PTR unsigned char 
  1973 ;; Registers used:
  1974 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1975 ;; Tracked objects:
  1976 ;;		On entry : 0/0
  1977 ;;		On exit  : 0/0
  1978 ;;		Unchanged: 0/0
  1979 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1980 ;;      Params:         0       5       0       0       0       0       0       0       0
  1981 ;;      Locals:         0      10       0       0       0       0       0       0       0
  1982 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1983 ;;      Totals:         0      15       0       0       0       0       0       0       0
  1984 ;;Total ram usage:       15 bytes
  1985 ;; Hardware stack levels used:    1
  1986 ;; Hardware stack levels required when called:    6
  1987 ;; This function calls:
  1988 ;;		___ftmul
  1989 ;;		___ftneg
  1990 ;;		___ftsub
  1991 ;;		___fttol
  1992 ;;		___lltoft
  1993 ;;		_sprintf
  1994 ;; This function is called by:
  1995 ;;		_main
  1996 ;; This function uses a non-reentrant model
  1997 ;;
  1998                           
  1999                           	psect	text9
  2000  001976                     __ptext9:
  2001                           	opt stack 0
  2002  001976                     _ftoa:
  2003                           	opt stack 24
  2004                           
  2005                           ;incstack = 0
  2006  001976  0E85               	movlw	low ftoa@buf
  2007  001978  0100               	movlb	0	; () banked
  2008  00197A  6F7D               	movwf	ftoa@cp& (0+255),b
  2009  00197C  0E00               	movlw	high ftoa@buf
  2010  00197E  0100               	movlb	0	; () banked
  2011  001980  6F7E               	movwf	(ftoa@cp+1)& (0+255),b
  2012  001982  0100               	movlb	0	; () banked
  2013  001984  AF72               	btfss	(ftoa@f+2)& (0+255),7,b
  2014  001986  D018               	goto	l3194
  2015                           
  2016                           ; BSR set to: 0
  2017  001988  C07D  FFD9         	movff	ftoa@cp,fsr2l
  2018  00198C  C07E  FFDA         	movff	ftoa@cp+1,fsr2h
  2019  001990  0E2D               	movlw	45
  2020  001992  6EDF               	movwf	indf2,c
  2021                           
  2022                           ; BSR set to: 0
  2023  001994  0100               	movlb	0	; () banked
  2024  001996  4B7D               	infsnz	ftoa@cp& (0+255),f,b
  2025  001998  2B7E               	incf	(ftoa@cp+1)& (0+255),f,b
  2026                           
  2027                           ; BSR set to: 0
  2028  00199A  C070  F015         	movff	ftoa@f,___ftneg@f1
  2029  00199E  C071  F016         	movff	ftoa@f+1,___ftneg@f1+1
  2030  0019A2  C072  F017         	movff	ftoa@f+2,___ftneg@f1+2
  2031  0019A6  ECA0  F013         	call	___ftneg	;wreg free
  2032  0019AA  C015  F070         	movff	?___ftneg,ftoa@f
  2033  0019AE  C016  F071         	movff	?___ftneg+1,ftoa@f+1
  2034  0019B2  C017  F072         	movff	?___ftneg+2,ftoa@f+2
  2035  0019B6  D000               	goto	l3194
  2036  0019B8                     l3194:
  2037  0019B8  C070  F02C         	movff	ftoa@f,___fttol@f1
  2038  0019BC  C071  F02D         	movff	ftoa@f+1,___fttol@f1+1
  2039  0019C0  C072  F02E         	movff	ftoa@f+2,___fttol@f1+2
  2040  0019C4  EC4A  F00D         	call	___fttol	;wreg free
  2041  0019C8  C02C  F079         	movff	?___fttol,ftoa@l
  2042  0019CC  C02D  F07A         	movff	?___fttol+1,ftoa@l+1
  2043  0019D0  C02E  F07B         	movff	?___fttol+2,ftoa@l+2
  2044  0019D4  C02F  F07C         	movff	?___fttol+3,ftoa@l+3
  2045  0019D8  C070  F029         	movff	ftoa@f,___ftsub@f1
  2046  0019DC  C071  F02A         	movff	ftoa@f+1,___ftsub@f1+1
  2047  0019E0  C072  F02B         	movff	ftoa@f+2,___ftsub@f1+2
  2048  0019E4  C079  F01D         	movff	ftoa@l,___lltoft@c
  2049  0019E8  C07A  F01E         	movff	ftoa@l+1,___lltoft@c+1
  2050  0019EC  C07B  F01F         	movff	ftoa@l+2,___lltoft@c+2
  2051  0019F0  C07C  F020         	movff	ftoa@l+3,___lltoft@c+3
  2052  0019F4  EC87  F011         	call	___lltoft	;wreg free
  2053  0019F8  C01D  F02C         	movff	?___lltoft,___ftsub@f2
  2054  0019FC  C01E  F02D         	movff	?___lltoft+1,___ftsub@f2+1
  2055  001A00  C01F  F02E         	movff	?___lltoft+2,___ftsub@f2+2
  2056  001A04  EC87  F012         	call	___ftsub	;wreg free
  2057  001A08  C029  F070         	movff	?___ftsub,ftoa@f
  2058  001A0C  C02A  F071         	movff	?___ftsub+1,ftoa@f+1
  2059  001A10  C02B  F072         	movff	?___ftsub+2,ftoa@f+2
  2060  001A14  0E24               	movlw	36
  2061  001A16  6E20               	movwf	___ftmul@f2,c
  2062  001A18  0E74               	movlw	116
  2063  001A1A  6E21               	movwf	___ftmul@f2+1,c
  2064  001A1C  0E49               	movlw	73
  2065  001A1E  6E22               	movwf	___ftmul@f2+2,c
  2066  001A20  C070  F01D         	movff	ftoa@f,___ftmul@f1
  2067  001A24  C071  F01E         	movff	ftoa@f+1,___ftmul@f1+1
  2068  001A28  C072  F01F         	movff	ftoa@f+2,___ftmul@f1+2
  2069  001A2C  EC51  F00E         	call	___ftmul	;wreg free
  2070  001A30  C01D  F02C         	movff	?___ftmul,___fttol@f1
  2071  001A34  C01E  F02D         	movff	?___ftmul+1,___fttol@f1+1
  2072  001A38  C01F  F02E         	movff	?___ftmul+2,___fttol@f1+2
  2073  001A3C  EC4A  F00D         	call	___fttol	;wreg free
  2074  001A40  C02C  F075         	movff	?___fttol,ftoa@rem
  2075  001A44  C02D  F076         	movff	?___fttol+1,ftoa@rem+1
  2076  001A48  C02E  F077         	movff	?___fttol+2,ftoa@rem+2
  2077  001A4C  C02F  F078         	movff	?___fttol+3,ftoa@rem+3
  2078  001A50  C07D  F02B         	movff	ftoa@cp,sprintf@sp
  2079  001A54  C07E  F02C         	movff	ftoa@cp+1,sprintf@sp+1
  2080  001A58  0E55               	movlw	low STR_7
  2081  001A5A  6E2D               	movwf	sprintf@f,c
  2082  001A5C  0E10               	movlw	high STR_7
  2083  001A5E  6E2E               	movwf	sprintf@f+1,c
  2084  001A60  C079  F02F         	movff	ftoa@l,?_sprintf+4
  2085  001A64  C07A  F030         	movff	ftoa@l+1,?_sprintf+5
  2086  001A68  C07B  F031         	movff	ftoa@l+2,?_sprintf+6
  2087  001A6C  C07C  F032         	movff	ftoa@l+3,?_sprintf+7
  2088  001A70  C075  F033         	movff	ftoa@rem,?_sprintf+8
  2089  001A74  C076  F034         	movff	ftoa@rem+1,?_sprintf+9
  2090  001A78  C077  F035         	movff	ftoa@rem+2,?_sprintf+10
  2091  001A7C  C078  F036         	movff	ftoa@rem+3,?_sprintf+11
  2092  001A80  EC39  F008         	call	_sprintf	;wreg free
  2093  001A84  0E85               	movlw	low ftoa@buf
  2094  001A86  0100               	movlb	0	; () banked
  2095  001A88  6F70               	movwf	?_ftoa& (0+255),b
  2096  001A8A  0E00               	movlw	high ftoa@buf
  2097  001A8C  0100               	movlb	0	; () banked
  2098  001A8E  6F71               	movwf	(?_ftoa+1)& (0+255),b
  2099  001A90  D000               	goto	l762
  2100  001A92                     l762:
  2101                           
  2102                           ; BSR set to: 0
  2103  001A92  0012               	return		;funcret
  2104  001A94                     __end_of_ftoa:
  2105                           	opt stack 0
  2106                           intcon	equ	0xFF2
  2107                           postinc0	equ	0xFEE
  2108                           wreg	equ	0xFE8
  2109                           indf2	equ	0xFDF
  2110                           fsr2h	equ	0xFDA
  2111                           fsr2l	equ	0xFD9
  2112                           status	equ	0xFD8
  2113                           
  2114 ;; *************** function _sprintf *****************
  2115 ;; Defined at:
  2116 ;;		line 492 in file "/opt/microchip/xc8/v1.34/sources/common/doprnt.c"
  2117 ;; Parameters:    Size  Location     Type
  2118 ;;  sp              2   42[COMRAM] PTR unsigned char 
  2119 ;;		 -> ftoa@buf(17), 
  2120 ;;  f               2   44[COMRAM] PTR const unsigned char 
  2121 ;;		 -> STR_7(11), 
  2122 ;; Auto vars:     Size  Location     Type
  2123 ;;  val             4    7[BANK0 ] unsigned long 
  2124 ;;  tmpval          4    0        struct .
  2125 ;;  cp              3    0        PTR const unsigned char 
  2126 ;;  prec            2   13[BANK0 ] int 
  2127 ;;  width           2   11[BANK0 ] int 
  2128 ;;  ap              2    5[BANK0 ] PTR void [1]
  2129 ;;		 -> ?_sprintf(2), 
  2130 ;;  len             2    0        unsigned int 
  2131 ;;  c               1   15[BANK0 ] char 
  2132 ;;  flag            1    4[BANK0 ] unsigned char 
  2133 ;; Return value:  Size  Location     Type
  2134 ;;                  2   42[COMRAM] int 
  2135 ;; Registers used:
  2136 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2137 ;; Tracked objects:
  2138 ;;		On entry : 0/0
  2139 ;;		On exit  : 0/0
  2140 ;;		Unchanged: 0/0
  2141 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2142 ;;      Params:        12       0       0       0       0       0       0       0       0
  2143 ;;      Locals:         0      12       0       0       0       0       0       0       0
  2144 ;;      Temps:          0       4       0       0       0       0       0       0       0
  2145 ;;      Totals:        12      16       0       0       0       0       0       0       0
  2146 ;;Total ram usage:       28 bytes
  2147 ;; Hardware stack levels used:    1
  2148 ;; Hardware stack levels required when called:    4
  2149 ;; This function calls:
  2150 ;;		___lldiv
  2151 ;;		___llmod
  2152 ;;		___wmul
  2153 ;;		_isdigit
  2154 ;; This function is called by:
  2155 ;;		_ftoa
  2156 ;; This function uses a non-reentrant model
  2157 ;;
  2158                           
  2159                           	psect	text10
  2160  001072                     __ptext10:
  2161                           	opt stack 0
  2162  001072                     _sprintf:
  2163                           	opt stack 25
  2164                           
  2165                           ;doprnt.c: 494: va_list ap;
  2166                           ;doprnt.c: 499: signed char c;
  2167                           ;doprnt.c: 501: int width;
  2168                           ;doprnt.c: 504: int prec;
  2169                           ;doprnt.c: 508: unsigned char flag;
  2170                           ;doprnt.c: 523: union {
  2171                           ;doprnt.c: 524: unsigned long vd;
  2172                           ;doprnt.c: 525: double integ;
  2173                           ;doprnt.c: 526: } tmpval;
  2174                           ;doprnt.c: 528: unsigned long val;
  2175                           ;doprnt.c: 529: unsigned len;
  2176                           ;doprnt.c: 530: const char * cp;
  2177                           ;doprnt.c: 533: *ap = __va_start();
  2178                           
  2179                           ; BSR set to: 0
  2180                           ;incstack = 0
  2181  001072  0E2F               	movlw	low (?_sprintf+4)
  2182  001074  0100               	movlb	0	; () banked
  2183  001076  6F65               	movwf	sprintf@ap& (0+255),b
  2184  001078  0E00               	movlw	high (?_sprintf+4)
  2185  00107A  0100               	movlb	0	; () banked
  2186  00107C  6F66               	movwf	(sprintf@ap+1)& (0+255),b
  2187                           
  2188                           ;doprnt.c: 536: while(c = *f++) {
  2189  00107E  D1EF               	goto	l3020
  2190  001080                     l2920:
  2191                           
  2192                           ; BSR set to: 0
  2193                           ;doprnt.c: 538: if(c != '%')
  2194  001080  0E25               	movlw	37
  2195  001082  0100               	movlb	0	; () banked
  2196  001084  196F               	xorwf	sprintf@c& (0+255),w,b
  2197  001086  B4D8               	btfsc	status,2,c
  2198  001088  D009               	goto	l2926
  2199                           
  2200                           ; BSR set to: 0
  2201                           ;doprnt.c: 540: {
  2202                           ;doprnt.c: 541: ((*sp++ = (c)));
  2203  00108A  C02B  FFD9         	movff	sprintf@sp,fsr2l
  2204  00108E  C02C  FFDA         	movff	sprintf@sp+1,fsr2h
  2205  001092  C06F  FFDF         	movff	sprintf@c,indf2
  2206                           
  2207                           ; BSR set to: 0
  2208  001096  4A2B               	infsnz	sprintf@sp,f,c
  2209  001098  2A2C               	incf	sprintf@sp+1,f,c
  2210                           
  2211                           ;doprnt.c: 542: continue;
  2212  00109A  D1E1               	goto	l3020
  2213  00109C                     l2926:
  2214                           
  2215                           ; BSR set to: 0
  2216                           ;doprnt.c: 543: }
  2217                           ;doprnt.c: 546: width = 0;
  2218  00109C  0E00               	movlw	0
  2219  00109E  0100               	movlb	0	; () banked
  2220  0010A0  6F6C               	movwf	(sprintf@width+1)& (0+255),b
  2221  0010A2  0E00               	movlw	0
  2222  0010A4  6F6B               	movwf	sprintf@width& (0+255),b
  2223                           
  2224                           ;doprnt.c: 548: flag = 0;
  2225  0010A6  0E00               	movlw	0
  2226  0010A8  0100               	movlb	0	; () banked
  2227  0010AA  6F64               	movwf	sprintf@flag& (0+255),b
  2228                           
  2229                           ; BSR set to: 0
  2230                           ;doprnt.c: 597: if(isdigit((unsigned)*f)) {
  2231  0010AC  C02D  FFF6         	movff	sprintf@f,tblptrl
  2232  0010B0  C02E  FFF7         	movff	sprintf@f+1,tblptrh
  2233  0010B4                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  2234  0010B4  6AF8               	clrf	tblptru,c
  2235  0010B6                     	endif
  2236  0010B6                     	if	0	;tblptru may be non-zero
  2237  0010B6                     	endif
  2238  0010B6  0008               	tblrd		*
  2239  0010B8  50F5               	movf	tablat,w,c
  2240  0010BA  ECC4  F013         	call	_isdigit
  2241  0010BE  A0D8               	btfss	status,0,c
  2242  0010C0  D043               	goto	l2940
  2243                           
  2244                           ;doprnt.c: 598: width = 0;
  2245  0010C2  0E00               	movlw	0
  2246  0010C4  0100               	movlb	0	; () banked
  2247  0010C6  6F6C               	movwf	(sprintf@width+1)& (0+255),b
  2248  0010C8  0E00               	movlw	0
  2249  0010CA  6F6B               	movwf	sprintf@width& (0+255),b
  2250  0010CC  D000               	goto	l2932
  2251  0010CE                     l2932:
  2252                           
  2253                           ;doprnt.c: 600: width *= 10;
  2254  0010CE  C06B  F015         	movff	sprintf@width,___wmul@multiplier
  2255  0010D2  C06C  F016         	movff	sprintf@width+1,___wmul@multiplier+1
  2256  0010D6  0E00               	movlw	0
  2257  0010D8  6E18               	movwf	___wmul@multiplicand+1,c
  2258  0010DA  0E0A               	movlw	10
  2259  0010DC  6E17               	movwf	___wmul@multiplicand,c
  2260  0010DE  EC8C  F013         	call	___wmul	;wreg free
  2261  0010E2  C015  F06B         	movff	?___wmul,sprintf@width
  2262  0010E6  C016  F06C         	movff	?___wmul+1,sprintf@width+1
  2263                           
  2264                           ;doprnt.c: 601: width += *f++ - '0';
  2265  0010EA  0ED0               	movlw	208
  2266  0010EC  0100               	movlb	0	; () banked
  2267  0010EE  6F60               	movwf	??_sprintf& (0+255),b
  2268  0010F0  0EFF               	movlw	255
  2269  0010F2  0100               	movlb	0	; () banked
  2270  0010F4  6F61               	movwf	(??_sprintf+1)& (0+255),b
  2271  0010F6  C02D  FFF6         	movff	sprintf@f,tblptrl
  2272  0010FA  C02E  FFF7         	movff	sprintf@f+1,tblptrh
  2273  0010FE                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  2274  0010FE  6AF8               	clrf	tblptru,c
  2275  001100                     	endif
  2276  001100                     	if	0	;tblptru may be non-zero
  2277  001100                     	endif
  2278  001100  0008               	tblrd		*
  2279  001102  50F5               	movf	tablat,w,c
  2280  001104  0100               	movlb	0	; () banked
  2281  001106  6F62               	movwf	(??_sprintf+2)& (0+255),b
  2282  001108  6B63               	clrf	(??_sprintf+3)& (0+255),b
  2283  00110A  0100               	movlb	0	; () banked
  2284  00110C  5160               	movf	??_sprintf& (0+255),w,b
  2285  00110E  0100               	movlb	0	; () banked
  2286  001110  2762               	addwf	(??_sprintf+2)& (0+255),f,b
  2287  001112  0100               	movlb	0	; () banked
  2288  001114  5161               	movf	(??_sprintf+1)& (0+255),w,b
  2289  001116  0100               	movlb	0	; () banked
  2290  001118  2363               	addwfc	(??_sprintf+3)& (0+255),f,b
  2291  00111A  0100               	movlb	0	; () banked
  2292  00111C  5162               	movf	(??_sprintf+2)& (0+255),w,b
  2293  00111E  0100               	movlb	0	; () banked
  2294  001120  276B               	addwf	sprintf@width& (0+255),f,b
  2295  001122  0100               	movlb	0	; () banked
  2296  001124  5163               	movf	(??_sprintf+3)& (0+255),w,b
  2297  001126  0100               	movlb	0	; () banked
  2298  001128  236C               	addwfc	(sprintf@width+1)& (0+255),f,b
  2299                           
  2300                           ; BSR set to: 0
  2301  00112A  4A2D               	infsnz	sprintf@f,f,c
  2302  00112C  2A2E               	incf	sprintf@f+1,f,c
  2303                           
  2304                           ; BSR set to: 0
  2305                           ;doprnt.c: 602: } while(isdigit((unsigned)*f));
  2306  00112E  C02D  FFF6         	movff	sprintf@f,tblptrl
  2307  001132  C02E  FFF7         	movff	sprintf@f+1,tblptrh
  2308  001136                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  2309  001136  6AF8               	clrf	tblptru,c
  2310  001138                     	endif
  2311  001138                     	if	0	;tblptru may be non-zero
  2312  001138                     	endif
  2313  001138  0008               	tblrd		*
  2314  00113A  50F5               	movf	tablat,w,c
  2315  00113C  ECC4  F013         	call	_isdigit
  2316  001140  A0D8               	btfss	status,0,c
  2317  001142  D002               	goto	l2940
  2318  001144  D7C4               	goto	l2932
  2319  001146  D000               	goto	l2940
  2320  001148                     l2940:
  2321                           
  2322                           ;doprnt.c: 608: }
  2323                           ;doprnt.c: 611: if(*f == '.') {
  2324  001148  C02D  FFF6         	movff	sprintf@f,tblptrl
  2325  00114C  C02E  FFF7         	movff	sprintf@f+1,tblptrh
  2326  001150                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  2327  001150  6AF8               	clrf	tblptru,c
  2328  001152                     	endif
  2329  001152                     	if	0	;tblptru may be non-zero
  2330  001152                     	endif
  2331  001152  0008               	tblrd		*
  2332  001154  50F5               	movf	tablat,w,c
  2333  001156  0A2E               	xorlw	46
  2334  001158  A4D8               	btfss	status,2,c
  2335  00115A  D034               	goto	l2952
  2336                           
  2337                           ;doprnt.c: 613: f++;
  2338  00115C  4A2D               	infsnz	sprintf@f,f,c
  2339  00115E  2A2E               	incf	sprintf@f+1,f,c
  2340                           
  2341                           ;doprnt.c: 620: {
  2342                           ;doprnt.c: 621: prec = 0;
  2343  001160  0E00               	movlw	0
  2344  001162  0100               	movlb	0	; () banked
  2345  001164  6F6E               	movwf	(sprintf@prec+1)& (0+255),b
  2346  001166  0E00               	movlw	0
  2347  001168  6F6D               	movwf	sprintf@prec& (0+255),b
  2348                           
  2349                           ;doprnt.c: 622: while(isdigit((unsigned)*f))
  2350  00116A  D01F               	goto	l2950
  2351  00116C                     l2946:
  2352                           
  2353                           ;doprnt.c: 623: prec = prec*10 + *f++ - '0';
  2354  00116C  C06D  F015         	movff	sprintf@prec,___wmul@multiplier
  2355  001170  C06E  F016         	movff	sprintf@prec+1,___wmul@multiplier+1
  2356  001174  0E00               	movlw	0
  2357  001176  6E18               	movwf	___wmul@multiplicand+1,c
  2358  001178  0E0A               	movlw	10
  2359  00117A  6E17               	movwf	___wmul@multiplicand,c
  2360  00117C  EC8C  F013         	call	___wmul	;wreg free
  2361  001180  C02D  FFF6         	movff	sprintf@f,tblptrl
  2362  001184  C02E  FFF7         	movff	sprintf@f+1,tblptrh
  2363  001188                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  2364  001188  6AF8               	clrf	tblptru,c
  2365  00118A                     	endif
  2366  00118A                     	if	0	;tblptru may be non-zero
  2367  00118A                     	endif
  2368  00118A  0008               	tblrd		*
  2369  00118C  50F5               	movf	tablat,w,c
  2370  00118E  2615               	addwf	?___wmul,f,c
  2371  001190  0E00               	movlw	0
  2372  001192  2216               	addwfc	?___wmul+1,f,c
  2373  001194  0ED0               	movlw	208
  2374  001196  2415               	addwf	?___wmul,w,c
  2375  001198  0100               	movlb	0	; () banked
  2376  00119A  6F6D               	movwf	sprintf@prec& (0+255),b
  2377  00119C  0EFF               	movlw	255
  2378  00119E  2016               	addwfc	?___wmul+1,w,c
  2379  0011A0  0100               	movlb	0	; () banked
  2380  0011A2  6F6E               	movwf	(sprintf@prec+1)& (0+255),b
  2381                           
  2382                           ; BSR set to: 0
  2383  0011A4  4A2D               	infsnz	sprintf@f,f,c
  2384  0011A6  2A2E               	incf	sprintf@f+1,f,c
  2385  0011A8  D000               	goto	l2950
  2386  0011AA                     l2950:
  2387                           
  2388                           ; BSR set to: 0
  2389  0011AA  C02D  FFF6         	movff	sprintf@f,tblptrl
  2390  0011AE  C02E  FFF7         	movff	sprintf@f+1,tblptrh
  2391  0011B2                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  2392  0011B2  6AF8               	clrf	tblptru,c
  2393  0011B4                     	endif
  2394  0011B4                     	if	0	;tblptru may be non-zero
  2395  0011B4                     	endif
  2396  0011B4  0008               	tblrd		*
  2397  0011B6  50F5               	movf	tablat,w,c
  2398  0011B8  ECC4  F013         	call	_isdigit
  2399  0011BC  A0D8               	btfss	status,0,c
  2400  0011BE  D011               	goto	l2960
  2401  0011C0  D7D5               	goto	l2946
  2402                           
  2403                           ;doprnt.c: 624: }
  2404                           ;doprnt.c: 625: } else {
  2405  0011C2  D00F               	goto	l2960
  2406  0011C4                     l2952:
  2407                           
  2408                           ;doprnt.c: 626: prec = 0;
  2409  0011C4  0E00               	movlw	0
  2410  0011C6  0100               	movlb	0	; () banked
  2411  0011C8  6F6E               	movwf	(sprintf@prec+1)& (0+255),b
  2412  0011CA  0E00               	movlw	0
  2413  0011CC  6F6D               	movwf	sprintf@prec& (0+255),b
  2414                           
  2415                           ; BSR set to: 0
  2416                           ;doprnt.c: 635: switch(c = *f++) {
  2417                           
  2418                           ;doprnt.c: 630: }
  2419                           ;doprnt.c: 633: loop:
  2420                           
  2421                           ; BSR set to: 0
  2422  0011CE  D009               	goto	l2960
  2423                           
  2424                           ; BSR set to: 0
  2425                           ;doprnt.c: 638: goto alldone;
  2426                           
  2427                           ;doprnt.c: 637: case 0:
  2428  0011D0  D156               	goto	l3022
  2429  0011D2                     l2954:
  2430                           
  2431                           ; BSR set to: 0
  2432                           ;doprnt.c: 643: flag |= 0x10;
  2433  0011D2  0100               	movlb	0	; () banked
  2434  0011D4  8964               	bsf	sprintf@flag& (0+255),4,b
  2435                           
  2436                           ;doprnt.c: 644: goto loop;
  2437  0011D6  D005               	goto	l2960
  2438                           
  2439                           ; BSR set to: 0
  2440                           ;doprnt.c: 813: continue;
  2441                           
  2442                           ;doprnt.c: 802: default:
  2443  0011D8  D142               	goto	l3020
  2444  0011DA                     l2956:
  2445                           
  2446                           ; BSR set to: 0
  2447                           ;doprnt.c: 818: flag |= 0xC0;
  2448  0011DA  0EC0               	movlw	192
  2449  0011DC  0100               	movlb	0	; () banked
  2450  0011DE  1364               	iorwf	sprintf@flag& (0+255),f,b
  2451                           
  2452                           ; BSR set to: 0
  2453                           ;doprnt.c: 822: }
  2454                           
  2455                           ;doprnt.c: 819: break;
  2456  0011E0  D016               	goto	l172
  2457  0011E2                     l2960:
  2458  0011E2  C02D  FFF6         	movff	sprintf@f,tblptrl
  2459  0011E6  C02E  FFF7         	movff	sprintf@f+1,tblptrh
  2460  0011EA  4A2D               	infsnz	sprintf@f,f,c
  2461  0011EC  2A2E               	incf	sprintf@f+1,f,c
  2462  0011EE                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  2463  0011EE  6AF8               	clrf	tblptru,c
  2464  0011F0                     	endif
  2465  0011F0                     	if	0	;tblptru may be non-zero
  2466  0011F0                     	endif
  2467  0011F0  0008               	tblrd		*
  2468  0011F2  CFF5 F06F          	movff	tablat,sprintf@c
  2469  0011F6  0100               	movlb	0	; () banked
  2470  0011F8  516F               	movf	sprintf@c& (0+255),w,b
  2471                           
  2472                           ; Switch size 1, requested type "space"
  2473                           ; Number of cases is 3, Range of values is 0 to 117
  2474                           ; switch strategies available:
  2475                           ; Name         Instructions Cycles
  2476                           ; simple_byte           10     6 (average)
  2477                           ;	Chosen strategy is simple_byte
  2478  0011FA  0A00               	xorlw	0	; case 0
  2479  0011FC  B4D8               	btfsc	status,2,c
  2480  0011FE  D13F               	goto	l3022
  2481  001200  0A6C               	xorlw	108	; case 108
  2482  001202  B4D8               	btfsc	status,2,c
  2483  001204  D7E6               	goto	l2954
  2484  001206  0A19               	xorlw	25	; case 117
  2485  001208  B4D8               	btfsc	status,2,c
  2486  00120A  D7E7               	goto	l2956
  2487  00120C  D128               	goto	l3020
  2488  00120E                     l172:
  2489                           
  2490                           ; BSR set to: 0
  2491                           ;doprnt.c: 1273: {
  2492                           ;doprnt.c: 1281: if(flag & 0x10)
  2493  00120E  0100               	movlb	0	; () banked
  2494  001210  A964               	btfss	sprintf@flag& (0+255),4,b
  2495  001212  D00E               	goto	l2966
  2496                           
  2497                           ; BSR set to: 0
  2498                           ;doprnt.c: 1282: val = (*(unsigned long *)__va_arg((*(unsigned long **)ap), (unsigned lo
      +                          ng)0));
  2499  001214  C065  FFD9         	movff	sprintf@ap,fsr2l
  2500  001218  C066  FFDA         	movff	sprintf@ap+1,fsr2h
  2501  00121C  CFDE F067          	movff	postinc2,sprintf@val
  2502  001220  CFDE F068          	movff	postinc2,sprintf@val+1
  2503  001224  CFDE F069          	movff	postinc2,sprintf@val+2
  2504  001228  CFDE F06A          	movff	postinc2,sprintf@val+3
  2505                           
  2506                           ; BSR set to: 0
  2507  00122C  0E04               	movlw	4
  2508  00122E  D010               	goto	L1
  2509  001230                     l2966:
  2510                           
  2511                           ; BSR set to: 0
  2512                           ;doprnt.c: 1283: else
  2513                           ;doprnt.c: 1286: val = (*(unsigned *)__va_arg((*(unsigned **)ap), (unsigned)0));
  2514  001230  C065  FFD9         	movff	sprintf@ap,fsr2l
  2515  001234  C066  FFDA         	movff	sprintf@ap+1,fsr2h
  2516  001238  CFDE F060          	movff	postinc2,??_sprintf
  2517  00123C  CFDD F061          	movff	postdec2,??_sprintf+1
  2518  001240  C060  F067         	movff	??_sprintf,sprintf@val
  2519  001244  C061  F068         	movff	??_sprintf+1,sprintf@val+1
  2520  001248  0100               	movlb	0	; () banked
  2521  00124A  6B69               	clrf	(sprintf@val+2)& (0+255),b
  2522  00124C  6B6A               	clrf	(sprintf@val+3)& (0+255),b
  2523                           
  2524                           ; BSR set to: 0
  2525  00124E  0E02               	movlw	2
  2526  001250                     L1:
  2527  001250  0100               	movlb	0	; () banked
  2528  001252  2765               	addwf	sprintf@ap& (0+255),f,b
  2529  001254  0E00               	movlw	0
  2530  001256  2366               	addwfc	(sprintf@ap+1)& (0+255),f,b
  2531  001258  D000               	goto	l2970
  2532  00125A                     l2970:
  2533                           
  2534                           ; BSR set to: 0
  2535                           ;doprnt.c: 1287: }
  2536                           ;doprnt.c: 1290: if(prec == 0 && val == 0)
  2537  00125A  0100               	movlb	0	; () banked
  2538  00125C  516D               	movf	sprintf@prec& (0+255),w,b
  2539  00125E  0100               	movlb	0	; () banked
  2540  001260  116E               	iorwf	(sprintf@prec+1)& (0+255),w,b
  2541  001262  A4D8               	btfss	status,2,c
  2542  001264  D00E               	goto	l2976
  2543                           
  2544                           ; BSR set to: 0
  2545  001266  0100               	movlb	0	; () banked
  2546  001268  5167               	movf	sprintf@val& (0+255),w,b
  2547  00126A  0100               	movlb	0	; () banked
  2548  00126C  1168               	iorwf	(sprintf@val+1)& (0+255),w,b
  2549  00126E  0100               	movlb	0	; () banked
  2550  001270  1169               	iorwf	(sprintf@val+2)& (0+255),w,b
  2551  001272  0100               	movlb	0	; () banked
  2552  001274  116A               	iorwf	(sprintf@val+3)& (0+255),w,b
  2553  001276  A4D8               	btfss	status,2,c
  2554  001278  D004               	goto	l2976
  2555                           
  2556                           ; BSR set to: 0
  2557                           ;doprnt.c: 1291: prec++;
  2558  00127A  0100               	movlb	0	; () banked
  2559  00127C  4B6D               	infsnz	sprintf@prec& (0+255),f,b
  2560  00127E  2B6E               	incf	(sprintf@prec+1)& (0+255),f,b
  2561  001280  D000               	goto	l2976
  2562  001282                     l2976:
  2563                           
  2564                           ; BSR set to: 0
  2565                           ;doprnt.c: 1305: for(c = 1 ; c != sizeof dpowers/sizeof dpowers[0] ; c++)
  2566  001282  0E01               	movlw	1
  2567  001284  0100               	movlb	0	; () banked
  2568  001286  6F6F               	movwf	sprintf@c& (0+255),b
  2569  001288                     l2978:
  2570                           
  2571                           ; BSR set to: 0
  2572  001288  0E0A               	movlw	10
  2573  00128A  0100               	movlb	0	; () banked
  2574  00128C  196F               	xorwf	sprintf@c& (0+255),w,b
  2575  00128E  B4D8               	btfsc	status,2,c
  2576  001290  D025               	goto	l2990
  2577  001292  D001               	goto	l2982
  2578                           
  2579                           ; BSR set to: 0
  2580  001294  D023               	goto	l2990
  2581  001296                     l2982:
  2582                           
  2583                           ; BSR set to: 0
  2584                           ;doprnt.c: 1306: if(val < dpowers[c])
  2585  001296  0100               	movlb	0	; () banked
  2586  001298  516F               	movf	sprintf@c& (0+255),w,b
  2587  00129A  0D04               	mullw	4
  2588  00129C  0E1D               	movlw	low _dpowers
  2589  00129E  24F3               	addwf	prodl,w,c
  2590  0012A0  6EF6               	movwf	tblptrl,c
  2591  0012A2  0E10               	movlw	high _dpowers
  2592  0012A4  20F4               	addwfc	prodh,w,c
  2593  0012A6  6EF7               	movwf	tblptrh,c
  2594  0012A8                     	if	1	;There are 3 active tblptr bytes
  2595  0012A8  6AF8               	clrf	tblptru,c
  2596  0012AA  0E00               	movlw	low (__mediumconst shr (0+16))
  2597  0012AC  22F8               	addwfc	tblptru,f,c
  2598  0012AE                     	endif
  2599  0012AE  0009               	tblrd		*+
  2600  0012B0  50F5               	movf	tablat,w,c
  2601  0012B2  0100               	movlb	0	; () banked
  2602  0012B4  5D67               	subwf	sprintf@val& (0+255),w,b
  2603  0012B6  0009               	tblrd		*+
  2604  0012B8  50F5               	movf	tablat,w,c
  2605  0012BA  0100               	movlb	0	; () banked
  2606  0012BC  5968               	subwfb	(sprintf@val+1)& (0+255),w,b
  2607  0012BE  0009               	tblrd		*+
  2608  0012C0  50F5               	movf	tablat,w,c
  2609  0012C2  0100               	movlb	0	; () banked
  2610  0012C4  5969               	subwfb	(sprintf@val+2)& (0+255),w,b
  2611  0012C6  0009               	tblrd		*+
  2612  0012C8  50F5               	movf	tablat,w,c
  2613  0012CA  0100               	movlb	0	; () banked
  2614  0012CC  596A               	subwfb	(sprintf@val+3)& (0+255),w,b
  2615  0012CE  A0D8               	btfss	status,0,c
  2616  0012D0  D005               	goto	l2990
  2617  0012D2  D001               	goto	l2986
  2618                           
  2619                           ; BSR set to: 0
  2620                           ;doprnt.c: 1307: break;
  2621  0012D4  D003               	goto	l2990
  2622  0012D6                     l2986:
  2623                           
  2624                           ; BSR set to: 0
  2625  0012D6  0100               	movlb	0	; () banked
  2626  0012D8  2B6F               	incf	sprintf@c& (0+255),f,b
  2627  0012DA  D7D6               	goto	l2978
  2628  0012DC                     l2990:
  2629                           
  2630                           ; BSR set to: 0
  2631                           ;doprnt.c: 1339: if(c < prec)
  2632  0012DC  0E80               	movlw	128
  2633  0012DE  0100               	movlb	0	; () banked
  2634  0012E0  BF6F               	btfsc	sprintf@c& (0+255),7,b
  2635  0012E2  0E7F               	movlw	127
  2636  0012E4  0100               	movlb	0	; () banked
  2637  0012E6  6F60               	movwf	??_sprintf& (0+255),b
  2638  0012E8  0100               	movlb	0	; () banked
  2639  0012EA  516D               	movf	sprintf@prec& (0+255),w,b
  2640  0012EC  0100               	movlb	0	; () banked
  2641  0012EE  5D6F               	subwf	sprintf@c& (0+255),w,b
  2642  0012F0  0100               	movlb	0	; () banked
  2643  0012F2  516E               	movf	(sprintf@prec+1)& (0+255),w,b
  2644  0012F4  0A80               	xorlw	128
  2645  0012F6  0100               	movlb	0	; () banked
  2646  0012F8  5960               	subwfb	??_sprintf& (0+255),w,b
  2647  0012FA  B0D8               	btfsc	status,0,c
  2648  0012FC  D003               	goto	l2994
  2649                           
  2650                           ; BSR set to: 0
  2651                           ;doprnt.c: 1340: c = prec;
  2652  0012FE  C06D  F06F         	movff	sprintf@prec,sprintf@c
  2653  001302  D019               	goto	l2998
  2654  001304                     l2994:
  2655                           
  2656                           ; BSR set to: 0
  2657                           ;doprnt.c: 1341: else if(prec < c)
  2658  001304  0100               	movlb	0	; () banked
  2659  001306  516E               	movf	(sprintf@prec+1)& (0+255),w,b
  2660  001308  0A80               	xorlw	128
  2661  00130A  0100               	movlb	0	; () banked
  2662  00130C  6F60               	movwf	??_sprintf& (0+255),b
  2663  00130E  0100               	movlb	0	; () banked
  2664  001310  516F               	movf	sprintf@c& (0+255),w,b
  2665  001312  0100               	movlb	0	; () banked
  2666  001314  5D6D               	subwf	sprintf@prec& (0+255),w,b
  2667  001316  0E80               	movlw	128
  2668  001318  0100               	movlb	0	; () banked
  2669  00131A  BF6F               	btfsc	sprintf@c& (0+255),7,b
  2670  00131C  0E7F               	movlw	127
  2671  00131E  0100               	movlb	0	; () banked
  2672  001320  5960               	subwfb	??_sprintf& (0+255),w,b
  2673  001322  B0D8               	btfsc	status,0,c
  2674  001324  D008               	goto	l2998
  2675                           
  2676                           ; BSR set to: 0
  2677                           ;doprnt.c: 1342: prec = c;
  2678  001326  0100               	movlb	0	; () banked
  2679  001328  516F               	movf	sprintf@c& (0+255),w,b
  2680  00132A  0100               	movlb	0	; () banked
  2681  00132C  6F6D               	movwf	sprintf@prec& (0+255),b
  2682  00132E  6B6E               	clrf	(sprintf@prec+1)& (0+255),b
  2683  001330  BF6D               	btfsc	sprintf@prec& (0+255),7,b
  2684  001332  076E               	decf	(sprintf@prec+1)& (0+255),f,b
  2685                           
  2686                           ; BSR set to: 0
  2687  001334  D000               	goto	l2998
  2688  001336                     l2998:
  2689                           
  2690                           ; BSR set to: 0
  2691                           ;doprnt.c: 1381: if(width > c)
  2692  001336  0E80               	movlw	128
  2693  001338  0100               	movlb	0	; () banked
  2694  00133A  BF6F               	btfsc	sprintf@c& (0+255),7,b
  2695  00133C  0E7F               	movlw	127
  2696  00133E  0100               	movlb	0	; () banked
  2697  001340  6F60               	movwf	??_sprintf& (0+255),b
  2698  001342  0100               	movlb	0	; () banked
  2699  001344  516B               	movf	sprintf@width& (0+255),w,b
  2700  001346  0100               	movlb	0	; () banked
  2701  001348  5D6F               	subwf	sprintf@c& (0+255),w,b
  2702  00134A  0100               	movlb	0	; () banked
  2703  00134C  516C               	movf	(sprintf@width+1)& (0+255),w,b
  2704  00134E  0A80               	xorlw	128
  2705  001350  0100               	movlb	0	; () banked
  2706  001352  5960               	subwfb	??_sprintf& (0+255),w,b
  2707  001354  B0D8               	btfsc	status,0,c
  2708  001356  D00B               	goto	l3002
  2709                           
  2710                           ; BSR set to: 0
  2711                           ;doprnt.c: 1382: width -= c;
  2712  001358  0100               	movlb	0	; () banked
  2713  00135A  516F               	movf	sprintf@c& (0+255),w,b
  2714  00135C  0100               	movlb	0	; () banked
  2715  00135E  5F6B               	subwf	sprintf@width& (0+255),f,b
  2716  001360  0E00               	movlw	0
  2717  001362  0100               	movlb	0	; () banked
  2718  001364  BF6F               	btfsc	sprintf@c& (0+255),7,b
  2719  001366  0EFF               	movlw	255
  2720  001368  0100               	movlb	0	; () banked
  2721  00136A  5B6C               	subwfb	(sprintf@width+1)& (0+255),f,b
  2722  00136C  D006               	goto	l3004
  2723  00136E                     l3002:
  2724                           
  2725                           ; BSR set to: 0
  2726                           ;doprnt.c: 1383: else
  2727                           ;doprnt.c: 1384: width = 0;
  2728  00136E  0E00               	movlw	0
  2729  001370  0100               	movlb	0	; () banked
  2730  001372  6F6C               	movwf	(sprintf@width+1)& (0+255),b
  2731  001374  0E00               	movlw	0
  2732  001376  6F6B               	movwf	sprintf@width& (0+255),b
  2733  001378  D000               	goto	l3004
  2734  00137A                     l3004:
  2735                           
  2736                           ; BSR set to: 0
  2737                           ;doprnt.c: 1422: {
  2738                           ;doprnt.c: 1424: if(width
  2739                           ;doprnt.c: 1428: )
  2740  00137A  0100               	movlb	0	; () banked
  2741  00137C  516B               	movf	sprintf@width& (0+255),w,b
  2742  00137E  0100               	movlb	0	; () banked
  2743  001380  116C               	iorwf	(sprintf@width+1)& (0+255),w,b
  2744  001382  B4D8               	btfsc	status,2,c
  2745  001384  D05F               	goto	l3018
  2746  001386                     l3006:
  2747                           
  2748                           ; BSR set to: 0
  2749                           ;doprnt.c: 1430: ((*sp++ = (' ')));
  2750  001386  C02B  FFD9         	movff	sprintf@sp,fsr2l
  2751  00138A  C02C  FFDA         	movff	sprintf@sp+1,fsr2h
  2752  00138E  0E20               	movlw	32
  2753  001390  6EDF               	movwf	indf2,c
  2754                           
  2755                           ; BSR set to: 0
  2756  001392  4A2B               	infsnz	sprintf@sp,f,c
  2757  001394  2A2C               	incf	sprintf@sp+1,f,c
  2758                           
  2759                           ; BSR set to: 0
  2760                           ;doprnt.c: 1431: while(--width);
  2761  001396  0100               	movlb	0	; () banked
  2762  001398  076B               	decf	sprintf@width& (0+255),f,b
  2763  00139A  A0D8               	btfss	status,0,c
  2764  00139C  076C               	decf	(sprintf@width+1)& (0+255),f,b
  2765  00139E  0100               	movlb	0	; () banked
  2766  0013A0  516B               	movf	sprintf@width& (0+255),w,b
  2767  0013A2  0100               	movlb	0	; () banked
  2768  0013A4  116C               	iorwf	(sprintf@width+1)& (0+255),w,b
  2769  0013A6  B4D8               	btfsc	status,2,c
  2770  0013A8  D04D               	goto	l3018
  2771  0013AA  D7ED               	goto	l3006
  2772                           
  2773                           ; BSR set to: 0
  2774                           ;doprnt.c: 1469: }
  2775                           ;doprnt.c: 1474: while(prec--) {
  2776                           
  2777                           ; BSR set to: 0
  2778  0013AC  D04B               	goto	l3018
  2779  0013AE                     l3012:
  2780                           
  2781                           ; BSR set to: 0
  2782                           ;doprnt.c: 1478: {
  2783                           ;doprnt.c: 1489: c = (val / dpowers[prec]) % 10 + '0';
  2784  0013AE  C06D  F060         	movff	sprintf@prec,??_sprintf
  2785  0013B2  C06E  F061         	movff	sprintf@prec+1,??_sprintf+1
  2786  0013B6  0100               	movlb	0	; () banked
  2787  0013B8  90D8               	bcf	status,0,c
  2788  0013BA  3760               	rlcf	??_sprintf& (0+255),f,b
  2789  0013BC  3761               	rlcf	(??_sprintf+1)& (0+255),f,b
  2790  0013BE  0100               	movlb	0	; () banked
  2791  0013C0  90D8               	bcf	status,0,c
  2792  0013C2  3760               	rlcf	??_sprintf& (0+255),f,b
  2793  0013C4  3761               	rlcf	(??_sprintf+1)& (0+255),f,b
  2794  0013C6  0E1D               	movlw	low _dpowers
  2795  0013C8  0100               	movlb	0	; () banked
  2796  0013CA  2560               	addwf	??_sprintf& (0+255),w,b
  2797  0013CC  6EF6               	movwf	tblptrl,c
  2798  0013CE  0E10               	movlw	high _dpowers
  2799  0013D0  2161               	addwfc	(??_sprintf+1)& (0+255),w,b
  2800  0013D2  6EF7               	movwf	tblptrh,c
  2801  0013D4                     	if	1	;There are 3 active tblptr bytes
  2802  0013D4  6AF8               	clrf	tblptru,c
  2803  0013D6  0E00               	movlw	low (__mediumconst shr (0+16))
  2804  0013D8  22F8               	addwfc	tblptru,f,c
  2805  0013DA                     	endif
  2806  0013DA  0009               	tblrd		*+
  2807  0013DC  CFF5 F019          	movff	tablat,___lldiv@divisor
  2808  0013E0  0009               	tblrd		*+
  2809  0013E2  CFF5 F01A          	movff	tablat,___lldiv@divisor+1
  2810  0013E6  0009               	tblrd		*+
  2811  0013E8  CFF5 F01B          	movff	tablat,___lldiv@divisor+2
  2812  0013EC  000A               	tblrd		*-
  2813  0013EE  CFF5 F01C          	movff	tablat,___lldiv@divisor+3
  2814  0013F2  C067  F015         	movff	sprintf@val,___lldiv@dividend
  2815  0013F6  C068  F016         	movff	sprintf@val+1,___lldiv@dividend+1
  2816  0013FA  C069  F017         	movff	sprintf@val+2,___lldiv@dividend+2
  2817  0013FE  C06A  F018         	movff	sprintf@val+3,___lldiv@dividend+3
  2818  001402  EC90  F010         	call	___lldiv	;wreg free
  2819  001406  C015  F022         	movff	?___lldiv,___llmod@dividend
  2820  00140A  C016  F023         	movff	?___lldiv+1,___llmod@dividend+1
  2821  00140E  C017  F024         	movff	?___lldiv+2,___llmod@dividend+2
  2822  001412  C018  F025         	movff	?___lldiv+3,___llmod@dividend+3
  2823  001416  0E0A               	movlw	10
  2824  001418  6E26               	movwf	___llmod@divisor,c
  2825  00141A  0E00               	movlw	0
  2826  00141C  6E27               	movwf	___llmod@divisor+1,c
  2827  00141E  0E00               	movlw	0
  2828  001420  6E28               	movwf	___llmod@divisor+2,c
  2829  001422  0E00               	movlw	0
  2830  001424  6E29               	movwf	___llmod@divisor+3,c
  2831  001426  EC4F  F011         	call	___llmod	;wreg free
  2832  00142A  5022               	movf	?___llmod,w,c
  2833  00142C  0F30               	addlw	48
  2834  00142E  0100               	movlb	0	; () banked
  2835  001430  6F6F               	movwf	sprintf@c& (0+255),b
  2836                           
  2837                           ; BSR set to: 0
  2838                           ;doprnt.c: 1523: }
  2839                           ;doprnt.c: 1524: ((*sp++ = (c)));
  2840  001432  C02B  FFD9         	movff	sprintf@sp,fsr2l
  2841  001436  C02C  FFDA         	movff	sprintf@sp+1,fsr2h
  2842  00143A  C06F  FFDF         	movff	sprintf@c,indf2
  2843                           
  2844                           ; BSR set to: 0
  2845  00143E  4A2B               	infsnz	sprintf@sp,f,c
  2846  001440  2A2C               	incf	sprintf@sp+1,f,c
  2847  001442  D000               	goto	l3018
  2848  001444                     l3018:
  2849                           
  2850                           ; BSR set to: 0
  2851  001444  0100               	movlb	0	; () banked
  2852  001446  076D               	decf	sprintf@prec& (0+255),f,b
  2853  001448  A0D8               	btfss	status,0,c
  2854  00144A  076E               	decf	(sprintf@prec+1)& (0+255),f,b
  2855  00144C  0100               	movlb	0	; () banked
  2856  00144E  296D               	incf	sprintf@prec& (0+255),w,b
  2857  001450  E1AE               	bnz	l3012
  2858  001452  0100               	movlb	0	; () banked
  2859  001454  296E               	incf	(sprintf@prec+1)& (0+255),w,b
  2860  001456  B4D8               	btfsc	status,2,c
  2861  001458  D002               	goto	l3020
  2862  00145A  D7A9               	goto	l3012
  2863                           
  2864                           ; BSR set to: 0
  2865  00145C  D000               	goto	l3020
  2866  00145E                     l3020:
  2867                           
  2868                           ; BSR set to: 0
  2869  00145E  C02D  FFF6         	movff	sprintf@f,tblptrl
  2870  001462  C02E  FFF7         	movff	sprintf@f+1,tblptrh
  2871  001466  4A2D               	infsnz	sprintf@f,f,c
  2872  001468  2A2E               	incf	sprintf@f+1,f,c
  2873  00146A                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  2874  00146A  6AF8               	clrf	tblptru,c
  2875  00146C                     	endif
  2876  00146C                     	if	0	;tblptru may be non-zero
  2877  00146C                     	endif
  2878  00146C  0008               	tblrd		*
  2879  00146E  CFF5 F06F          	movff	tablat,sprintf@c
  2880  001472  0100               	movlb	0	; () banked
  2881  001474  516F               	movf	sprintf@c& (0+255),w,b
  2882  001476  B4D8               	btfsc	status,2,c
  2883  001478  D002               	goto	l3022
  2884  00147A  D602               	goto	l2920
  2885                           
  2886                           ; BSR set to: 0
  2887  00147C  D000               	goto	l3022
  2888  00147E                     l3022:
  2889                           
  2890                           ; BSR set to: 0
  2891                           ;doprnt.c: 1538: *sp = 0;
  2892  00147E  C02B  FFD9         	movff	sprintf@sp,fsr2l
  2893  001482  C02C  FFDA         	movff	sprintf@sp+1,fsr2h
  2894  001486  0E00               	movlw	0
  2895  001488  6EDF               	movwf	indf2,c
  2896  00148A  D000               	goto	l191
  2897  00148C                     l191:
  2898                           
  2899                           ; BSR set to: 0
  2900  00148C  0012               	return		;funcret
  2901  00148E                     __end_of_sprintf:
  2902                           	opt stack 0
  2903                           tblptru	equ	0xFF8
  2904                           tblptrh	equ	0xFF7
  2905                           tblptrl	equ	0xFF6
  2906                           tablat	equ	0xFF5
  2907                           prodh	equ	0xFF4
  2908                           prodl	equ	0xFF3
  2909                           intcon	equ	0xFF2
  2910                           postinc0	equ	0xFEE
  2911                           wreg	equ	0xFE8
  2912                           indf2	equ	0xFDF
  2913                           postinc2	equ	0xFDE
  2914                           postdec2	equ	0xFDD
  2915                           fsr2h	equ	0xFDA
  2916                           fsr2l	equ	0xFD9
  2917                           status	equ	0xFD8
  2918                           
  2919 ;; *************** function ___llmod *****************
  2920 ;; Defined at:
  2921 ;;		line 8 in file "/opt/microchip/xc8/v1.34/sources/common/llmod.c"
  2922 ;; Parameters:    Size  Location     Type
  2923 ;;  dividend        4   33[COMRAM] unsigned long 
  2924 ;;  divisor         4   37[COMRAM] unsigned long 
  2925 ;; Auto vars:     Size  Location     Type
  2926 ;;  counter         1   41[COMRAM] unsigned char 
  2927 ;; Return value:  Size  Location     Type
  2928 ;;                  4   33[COMRAM] unsigned long 
  2929 ;; Registers used:
  2930 ;;		wreg, status,2, status,0
  2931 ;; Tracked objects:
  2932 ;;		On entry : 0/0
  2933 ;;		On exit  : 0/0
  2934 ;;		Unchanged: 0/0
  2935 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2936 ;;      Params:         8       0       0       0       0       0       0       0       0
  2937 ;;      Locals:         1       0       0       0       0       0       0       0       0
  2938 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2939 ;;      Totals:         9       0       0       0       0       0       0       0       0
  2940 ;;Total ram usage:        9 bytes
  2941 ;; Hardware stack levels used:    1
  2942 ;; Hardware stack levels required when called:    3
  2943 ;; This function calls:
  2944 ;;		Nothing
  2945 ;; This function is called by:
  2946 ;;		_sprintf
  2947 ;; This function uses a non-reentrant model
  2948 ;;
  2949                           
  2950                           	psect	text11
  2951  00229E                     __ptext11:
  2952                           	opt stack 0
  2953  00229E                     ___llmod:
  2954                           	opt stack 25
  2955                           
  2956                           ; BSR set to: 0
  2957                           ;incstack = 0
  2958  00229E  5026               	movf	___llmod@divisor,w,c
  2959  0022A0  1027               	iorwf	___llmod@divisor+1,w,c
  2960  0022A2  1028               	iorwf	___llmod@divisor+2,w,c
  2961  0022A4  1029               	iorwf	___llmod@divisor+3,w,c
  2962  0022A6  B4D8               	btfsc	status,2,c
  2963  0022A8  D029               	goto	l840
  2964  0022AA  0E01               	movlw	1
  2965  0022AC  6E2A               	movwf	___llmod@counter,c
  2966  0022AE  D007               	goto	l2908
  2967  0022B0                     l2906:
  2968  0022B0  90D8               	bcf	status,0,c
  2969  0022B2  3626               	rlcf	___llmod@divisor,f,c
  2970  0022B4  3627               	rlcf	___llmod@divisor+1,f,c
  2971  0022B6  3628               	rlcf	___llmod@divisor+2,f,c
  2972  0022B8  3629               	rlcf	___llmod@divisor+3,f,c
  2973  0022BA  2A2A               	incf	___llmod@counter,f,c
  2974  0022BC  D000               	goto	l2908
  2975  0022BE                     l2908:
  2976  0022BE  BE29               	btfsc	___llmod@divisor+3,7,c
  2977  0022C0  D002               	goto	l2910
  2978  0022C2  D7F6               	goto	l2906
  2979  0022C4  D000               	goto	l2910
  2980  0022C6                     l2910:
  2981  0022C6  5026               	movf	___llmod@divisor,w,c
  2982  0022C8  5C22               	subwf	___llmod@dividend,w,c
  2983  0022CA  5027               	movf	___llmod@divisor+1,w,c
  2984  0022CC  5823               	subwfb	___llmod@dividend+1,w,c
  2985  0022CE  5028               	movf	___llmod@divisor+2,w,c
  2986  0022D0  5824               	subwfb	___llmod@dividend+2,w,c
  2987  0022D2  5029               	movf	___llmod@divisor+3,w,c
  2988  0022D4  5825               	subwfb	___llmod@dividend+3,w,c
  2989  0022D6  A0D8               	btfss	status,0,c
  2990  0022D8  D009               	goto	l2914
  2991  0022DA  5026               	movf	___llmod@divisor,w,c
  2992  0022DC  5E22               	subwf	___llmod@dividend,f,c
  2993  0022DE  5027               	movf	___llmod@divisor+1,w,c
  2994  0022E0  5A23               	subwfb	___llmod@dividend+1,f,c
  2995  0022E2  5028               	movf	___llmod@divisor+2,w,c
  2996  0022E4  5A24               	subwfb	___llmod@dividend+2,f,c
  2997  0022E6  5029               	movf	___llmod@divisor+3,w,c
  2998  0022E8  5A25               	subwfb	___llmod@dividend+3,f,c
  2999  0022EA  D000               	goto	l2914
  3000  0022EC                     l2914:
  3001  0022EC  90D8               	bcf	status,0,c
  3002  0022EE  3229               	rrcf	___llmod@divisor+3,f,c
  3003  0022F0  3228               	rrcf	___llmod@divisor+2,f,c
  3004  0022F2  3227               	rrcf	___llmod@divisor+1,f,c
  3005  0022F4  3226               	rrcf	___llmod@divisor,f,c
  3006  0022F6  2E2A               	decfsz	___llmod@counter,f,c
  3007  0022F8  D7E6               	goto	l2910
  3008  0022FA  D000               	goto	l840
  3009  0022FC                     l840:
  3010  0022FC  C022  F022         	movff	___llmod@dividend,?___llmod
  3011  002300  C023  F023         	movff	___llmod@dividend+1,?___llmod+1
  3012  002304  C024  F024         	movff	___llmod@dividend+2,?___llmod+2
  3013  002308  C025  F025         	movff	___llmod@dividend+3,?___llmod+3
  3014  00230C  0012               	return		;funcret
  3015  00230E                     __end_of___llmod:
  3016                           	opt stack 0
  3017                           tblptru	equ	0xFF8
  3018                           tblptrh	equ	0xFF7
  3019                           tblptrl	equ	0xFF6
  3020                           tablat	equ	0xFF5
  3021                           prodh	equ	0xFF4
  3022                           prodl	equ	0xFF3
  3023                           intcon	equ	0xFF2
  3024                           postinc0	equ	0xFEE
  3025                           wreg	equ	0xFE8
  3026                           indf2	equ	0xFDF
  3027                           postinc2	equ	0xFDE
  3028                           postdec2	equ	0xFDD
  3029                           fsr2h	equ	0xFDA
  3030                           fsr2l	equ	0xFD9
  3031                           status	equ	0xFD8
  3032                           
  3033 ;; *************** function ___lldiv *****************
  3034 ;; Defined at:
  3035 ;;		line 8 in file "/opt/microchip/xc8/v1.34/sources/common/lldiv.c"
  3036 ;; Parameters:    Size  Location     Type
  3037 ;;  dividend        4   20[COMRAM] unsigned long 
  3038 ;;  divisor         4   24[COMRAM] unsigned long 
  3039 ;; Auto vars:     Size  Location     Type
  3040 ;;  quotient        4   28[COMRAM] unsigned long 
  3041 ;;  counter         1   32[COMRAM] unsigned char 
  3042 ;; Return value:  Size  Location     Type
  3043 ;;                  4   20[COMRAM] unsigned long 
  3044 ;; Registers used:
  3045 ;;		wreg, status,2, status,0
  3046 ;; Tracked objects:
  3047 ;;		On entry : 0/0
  3048 ;;		On exit  : 0/0
  3049 ;;		Unchanged: 0/0
  3050 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3051 ;;      Params:         8       0       0       0       0       0       0       0       0
  3052 ;;      Locals:         5       0       0       0       0       0       0       0       0
  3053 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3054 ;;      Totals:        13       0       0       0       0       0       0       0       0
  3055 ;;Total ram usage:       13 bytes
  3056 ;; Hardware stack levels used:    1
  3057 ;; Hardware stack levels required when called:    3
  3058 ;; This function calls:
  3059 ;;		Nothing
  3060 ;; This function is called by:
  3061 ;;		_sprintf
  3062 ;; This function uses a non-reentrant model
  3063 ;;
  3064                           
  3065                           	psect	text12
  3066  002120                     __ptext12:
  3067                           	opt stack 0
  3068  002120                     ___lldiv:
  3069                           	opt stack 25
  3070                           
  3071                           ;incstack = 0
  3072  002120  0E00               	movlw	0
  3073  002122  6E1D               	movwf	___lldiv@quotient,c
  3074  002124  0E00               	movlw	0
  3075  002126  6E1E               	movwf	___lldiv@quotient+1,c
  3076  002128  0E00               	movlw	0
  3077  00212A  6E1F               	movwf	___lldiv@quotient+2,c
  3078  00212C  0E00               	movlw	0
  3079  00212E  6E20               	movwf	___lldiv@quotient+3,c
  3080  002130  5019               	movf	___lldiv@divisor,w,c
  3081  002132  101A               	iorwf	___lldiv@divisor+1,w,c
  3082  002134  101B               	iorwf	___lldiv@divisor+2,w,c
  3083  002136  101C               	iorwf	___lldiv@divisor+3,w,c
  3084  002138  B4D8               	btfsc	status,2,c
  3085  00213A  D02F               	goto	l830
  3086  00213C  0E01               	movlw	1
  3087  00213E  6E21               	movwf	___lldiv@counter,c
  3088  002140  D007               	goto	l2888
  3089  002142                     l2886:
  3090  002142  90D8               	bcf	status,0,c
  3091  002144  3619               	rlcf	___lldiv@divisor,f,c
  3092  002146  361A               	rlcf	___lldiv@divisor+1,f,c
  3093  002148  361B               	rlcf	___lldiv@divisor+2,f,c
  3094  00214A  361C               	rlcf	___lldiv@divisor+3,f,c
  3095  00214C  2A21               	incf	___lldiv@counter,f,c
  3096  00214E  D000               	goto	l2888
  3097  002150                     l2888:
  3098  002150  BE1C               	btfsc	___lldiv@divisor+3,7,c
  3099  002152  D002               	goto	l2890
  3100  002154  D7F6               	goto	l2886
  3101  002156  D000               	goto	l2890
  3102  002158                     l2890:
  3103  002158  90D8               	bcf	status,0,c
  3104  00215A  361D               	rlcf	___lldiv@quotient,f,c
  3105  00215C  361E               	rlcf	___lldiv@quotient+1,f,c
  3106  00215E  361F               	rlcf	___lldiv@quotient+2,f,c
  3107  002160  3620               	rlcf	___lldiv@quotient+3,f,c
  3108  002162  5019               	movf	___lldiv@divisor,w,c
  3109  002164  5C15               	subwf	___lldiv@dividend,w,c
  3110  002166  501A               	movf	___lldiv@divisor+1,w,c
  3111  002168  5816               	subwfb	___lldiv@dividend+1,w,c
  3112  00216A  501B               	movf	___lldiv@divisor+2,w,c
  3113  00216C  5817               	subwfb	___lldiv@dividend+2,w,c
  3114  00216E  501C               	movf	___lldiv@divisor+3,w,c
  3115  002170  5818               	subwfb	___lldiv@dividend+3,w,c
  3116  002172  A0D8               	btfss	status,0,c
  3117  002174  D00A               	goto	l2898
  3118  002176  5019               	movf	___lldiv@divisor,w,c
  3119  002178  5E15               	subwf	___lldiv@dividend,f,c
  3120  00217A  501A               	movf	___lldiv@divisor+1,w,c
  3121  00217C  5A16               	subwfb	___lldiv@dividend+1,f,c
  3122  00217E  501B               	movf	___lldiv@divisor+2,w,c
  3123  002180  5A17               	subwfb	___lldiv@dividend+2,f,c
  3124  002182  501C               	movf	___lldiv@divisor+3,w,c
  3125  002184  5A18               	subwfb	___lldiv@dividend+3,f,c
  3126  002186  801D               	bsf	___lldiv@quotient,0,c
  3127  002188  D000               	goto	l2898
  3128  00218A                     l2898:
  3129  00218A  90D8               	bcf	status,0,c
  3130  00218C  321C               	rrcf	___lldiv@divisor+3,f,c
  3131  00218E  321B               	rrcf	___lldiv@divisor+2,f,c
  3132  002190  321A               	rrcf	___lldiv@divisor+1,f,c
  3133  002192  3219               	rrcf	___lldiv@divisor,f,c
  3134  002194  2E21               	decfsz	___lldiv@counter,f,c
  3135  002196  D7E0               	goto	l2890
  3136  002198  D000               	goto	l830
  3137  00219A                     l830:
  3138  00219A  C01D  F015         	movff	___lldiv@quotient,?___lldiv
  3139  00219E  C01E  F016         	movff	___lldiv@quotient+1,?___lldiv+1
  3140  0021A2  C01F  F017         	movff	___lldiv@quotient+2,?___lldiv+2
  3141  0021A6  C020  F018         	movff	___lldiv@quotient+3,?___lldiv+3
  3142  0021AA  0012               	return		;funcret
  3143  0021AC                     __end_of___lldiv:
  3144                           	opt stack 0
  3145                           tblptru	equ	0xFF8
  3146                           tblptrh	equ	0xFF7
  3147                           tblptrl	equ	0xFF6
  3148                           tablat	equ	0xFF5
  3149                           prodh	equ	0xFF4
  3150                           prodl	equ	0xFF3
  3151                           intcon	equ	0xFF2
  3152                           postinc0	equ	0xFEE
  3153                           wreg	equ	0xFE8
  3154                           indf2	equ	0xFDF
  3155                           postinc2	equ	0xFDE
  3156                           postdec2	equ	0xFDD
  3157                           fsr2h	equ	0xFDA
  3158                           fsr2l	equ	0xFD9
  3159                           status	equ	0xFD8
  3160                           
  3161 ;; *************** function ___lltoft *****************
  3162 ;; Defined at:
  3163 ;;		line 35 in file "/opt/microchip/xc8/v1.34/sources/common/lltoft.c"
  3164 ;; Parameters:    Size  Location     Type
  3165 ;;  c               4   28[COMRAM] unsigned long 
  3166 ;; Auto vars:     Size  Location     Type
  3167 ;;  exp             1   36[COMRAM] unsigned char 
  3168 ;; Return value:  Size  Location     Type
  3169 ;;                  3   28[COMRAM] float 
  3170 ;; Registers used:
  3171 ;;		wreg, status,2, status,0, cstack
  3172 ;; Tracked objects:
  3173 ;;		On entry : 0/0
  3174 ;;		On exit  : 0/0
  3175 ;;		Unchanged: 0/0
  3176 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3177 ;;      Params:         4       0       0       0       0       0       0       0       0
  3178 ;;      Locals:         1       0       0       0       0       0       0       0       0
  3179 ;;      Temps:          4       0       0       0       0       0       0       0       0
  3180 ;;      Totals:         9       0       0       0       0       0       0       0       0
  3181 ;;Total ram usage:        9 bytes
  3182 ;; Hardware stack levels used:    1
  3183 ;; Hardware stack levels required when called:    4
  3184 ;; This function calls:
  3185 ;;		___ftpack
  3186 ;; This function is called by:
  3187 ;;		_ftoa
  3188 ;; This function uses a non-reentrant model
  3189 ;;
  3190                           
  3191                           	psect	text13
  3192  00230E                     __ptext13:
  3193                           	opt stack 0
  3194  00230E                     ___lltoft:
  3195                           	opt stack 25
  3196                           
  3197                           ;incstack = 0
  3198  00230E  0E8E               	movlw	142
  3199  002310  6E25               	movwf	___lltoft@exp,c
  3200  002312  D007               	goto	l3132
  3201  002314                     l3130:
  3202  002314  90D8               	bcf	status,0,c
  3203  002316  3220               	rrcf	___lltoft@c+3,f,c
  3204  002318  321F               	rrcf	___lltoft@c+2,f,c
  3205  00231A  321E               	rrcf	___lltoft@c+1,f,c
  3206  00231C  321D               	rrcf	___lltoft@c,f,c
  3207  00231E  2A25               	incf	___lltoft@exp,f,c
  3208  002320  D000               	goto	l3132
  3209  002322                     l3132:
  3210  002322  0E00               	movlw	0
  3211  002324  141D               	andwf	___lltoft@c,w,c
  3212  002326  6E21               	movwf	??___lltoft& (0+255),c
  3213  002328  0E00               	movlw	0
  3214  00232A  141E               	andwf	___lltoft@c+1,w,c
  3215  00232C  6E22               	movwf	(??___lltoft+1)& (0+255),c
  3216  00232E  0E00               	movlw	0
  3217  002330  141F               	andwf	___lltoft@c+2,w,c
  3218  002332  6E23               	movwf	(??___lltoft+2)& (0+255),c
  3219  002334  0EFF               	movlw	255
  3220  002336  1420               	andwf	___lltoft@c+3,w,c
  3221  002338  6E24               	movwf	(??___lltoft+3)& (0+255),c
  3222  00233A  5021               	movf	??___lltoft,w,c
  3223  00233C  1022               	iorwf	??___lltoft+1,w,c
  3224  00233E  1023               	iorwf	??___lltoft+2,w,c
  3225  002340  1024               	iorwf	??___lltoft+3,w,c
  3226  002342  A4D8               	btfss	status,2,c
  3227  002344  D7E7               	goto	l3130
  3228  002346  C01D  F015         	movff	___lltoft@c,___ftpack@arg
  3229  00234A  C01E  F016         	movff	___lltoft@c+1,___ftpack@arg+1
  3230  00234E  C01F  F017         	movff	___lltoft@c+2,___ftpack@arg+2
  3231  002352  C025  F018         	movff	___lltoft@exp,___ftpack@exp
  3232  002356  0E00               	movlw	0
  3233  002358  6E19               	movwf	___ftpack@sign,c
  3234  00235A  EC37  F00F         	call	___ftpack	;wreg free
  3235  00235E  C015  F01D         	movff	?___ftpack,?___lltoft
  3236  002362  C016  F01E         	movff	?___ftpack+1,?___lltoft+1
  3237  002366  C017  F01F         	movff	?___ftpack+2,?___lltoft+2
  3238  00236A  D000               	goto	l860
  3239  00236C                     l860:
  3240  00236C  0012               	return		;funcret
  3241  00236E                     __end_of___lltoft:
  3242                           	opt stack 0
  3243                           tblptru	equ	0xFF8
  3244                           tblptrh	equ	0xFF7
  3245                           tblptrl	equ	0xFF6
  3246                           tablat	equ	0xFF5
  3247                           prodh	equ	0xFF4
  3248                           prodl	equ	0xFF3
  3249                           intcon	equ	0xFF2
  3250                           postinc0	equ	0xFEE
  3251                           wreg	equ	0xFE8
  3252                           indf2	equ	0xFDF
  3253                           postinc2	equ	0xFDE
  3254                           postdec2	equ	0xFDD
  3255                           fsr2h	equ	0xFDA
  3256                           fsr2l	equ	0xFD9
  3257                           status	equ	0xFD8
  3258                           
  3259 ;; *************** function ___fttol *****************
  3260 ;; Defined at:
  3261 ;;		line 44 in file "/opt/microchip/xc8/v1.34/sources/common/fttol.c"
  3262 ;; Parameters:    Size  Location     Type
  3263 ;;  f1              3   43[COMRAM] float 
  3264 ;; Auto vars:     Size  Location     Type
  3265 ;;  lval            4    1[BANK0 ] unsigned long 
  3266 ;;  exp1            1    5[BANK0 ] unsigned char 
  3267 ;;  sign1           1    0[BANK0 ] unsigned char 
  3268 ;; Return value:  Size  Location     Type
  3269 ;;                  4   43[COMRAM] long 
  3270 ;; Registers used:
  3271 ;;		wreg, status,2, status,0
  3272 ;; Tracked objects:
  3273 ;;		On entry : 0/0
  3274 ;;		On exit  : 0/0
  3275 ;;		Unchanged: 0/0
  3276 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3277 ;;      Params:         4       0       0       0       0       0       0       0       0
  3278 ;;      Locals:         0       6       0       0       0       0       0       0       0
  3279 ;;      Temps:          5       0       0       0       0       0       0       0       0
  3280 ;;      Totals:         9       6       0       0       0       0       0       0       0
  3281 ;;Total ram usage:       15 bytes
  3282 ;; Hardware stack levels used:    1
  3283 ;; Hardware stack levels required when called:    3
  3284 ;; This function calls:
  3285 ;;		Nothing
  3286 ;; This function is called by:
  3287 ;;		_main
  3288 ;;		_ftoa
  3289 ;; This function uses a non-reentrant model
  3290 ;;
  3291                           
  3292                           	psect	text14
  3293  001A94                     __ptext14:
  3294                           	opt stack 0
  3295  001A94                     ___fttol:
  3296                           	opt stack 26
  3297                           
  3298                           ;incstack = 0
  3299  001A94  C02E  F030         	movff	___fttol@f1+2,??___fttol
  3300  001A98  6A31               	clrf	(??___fttol+1)& (0+255),c
  3301  001A9A  6A32               	clrf	(??___fttol+2)& (0+255),c
  3302  001A9C  342D               	rlcf	___fttol@f1+1,w,c
  3303  001A9E  3630               	rlcf	??___fttol& (0+255),f,c
  3304  001AA0  E301               	bnc	u3151
  3305  001AA2  8031               	bsf	(??___fttol+1)& (0+255),0,c
  3306  001AA4                     u3151:
  3307  001AA4  5030               	movf	??___fttol,w,c
  3308  001AA6  0100               	movlb	0	; () banked
  3309  001AA8  6F65               	movwf	___fttol@exp1& (0+255),b
  3310  001AAA  0100               	movlb	0	; () banked
  3311  001AAC  5165               	movf	___fttol@exp1& (0+255),w,b
  3312  001AAE  A4D8               	btfss	status,2,c
  3313  001AB0  D002               	goto	l3088
  3314  001AB2  D044               	goto	l3112
  3315                           
  3316                           ; BSR set to: 0
  3317                           
  3318                           ; BSR set to: 0
  3319  001AB4  D075               	goto	l772
  3320  001AB6                     l3088:
  3321                           
  3322                           ; BSR set to: 0
  3323  001AB6  0E17               	movlw	23
  3324  001AB8  6E30               	movwf	??___fttol& (0+255),c
  3325  001ABA  C02C  F031         	movff	___fttol@f1,??___fttol+1
  3326  001ABE  C02D  F032         	movff	___fttol@f1+1,??___fttol+2
  3327  001AC2  C02E  F033         	movff	___fttol@f1+2,??___fttol+3
  3328  001AC6  2830               	incf	??___fttol,w,c
  3329  001AC8  6E34               	movwf	(??___fttol+4)& (0+255),c
  3330  001ACA  D004               	goto	u3170
  3331  001ACC                     u3175:
  3332  001ACC  90D8               	bcf	status,0,c
  3333  001ACE  3233               	rrcf	??___fttol+3,f,c
  3334  001AD0  3232               	rrcf	??___fttol+2,f,c
  3335  001AD2  3231               	rrcf	??___fttol+1,f,c
  3336  001AD4                     u3170:
  3337  001AD4  2E34               	decfsz	(??___fttol+4)& (0+255),f,c
  3338  001AD6  D7FA               	goto	u3175
  3339  001AD8  5031               	movf	??___fttol+1,w,c
  3340  001ADA  0100               	movlb	0	; () banked
  3341  001ADC  6F60               	movwf	___fttol@sign1& (0+255),b
  3342                           
  3343                           ; BSR set to: 0
  3344  001ADE  8E2D               	bsf	___fttol@f1+1,7,c
  3345                           
  3346                           ; BSR set to: 0
  3347  001AE0  0EFF               	movlw	255
  3348  001AE2  162C               	andwf	___fttol@f1,f,c
  3349  001AE4  0EFF               	movlw	255
  3350  001AE6  162D               	andwf	___fttol@f1+1,f,c
  3351  001AE8  0E00               	movlw	0
  3352  001AEA  162E               	andwf	___fttol@f1+2,f,c
  3353                           
  3354                           ; BSR set to: 0
  3355  001AEC  502C               	movf	___fttol@f1,w,c
  3356  001AEE  0100               	movlb	0	; () banked
  3357  001AF0  6F61               	movwf	___fttol@lval& (0+255),b
  3358  001AF2  502D               	movf	___fttol@f1+1,w,c
  3359  001AF4  0100               	movlb	0	; () banked
  3360  001AF6  6F62               	movwf	(___fttol@lval+1)& (0+255),b
  3361  001AF8  502E               	movf	___fttol@f1+2,w,c
  3362  001AFA  0100               	movlb	0	; () banked
  3363  001AFC  6F63               	movwf	(___fttol@lval+2)& (0+255),b
  3364  001AFE  0100               	movlb	0	; () banked
  3365  001B00  6B64               	clrf	(___fttol@lval+3)& (0+255),b
  3366                           
  3367                           ; BSR set to: 0
  3368  001B02  0E8E               	movlw	142
  3369  001B04  0100               	movlb	0	; () banked
  3370  001B06  5F65               	subwf	___fttol@exp1& (0+255),f,b
  3371                           
  3372                           ; BSR set to: 0
  3373  001B08  0100               	movlb	0	; () banked
  3374  001B0A  AF65               	btfss	___fttol@exp1& (0+255),7,b
  3375  001B0C  D013               	goto	l3110
  3376                           
  3377                           ; BSR set to: 0
  3378  001B0E  0100               	movlb	0	; () banked
  3379  001B10  5165               	movf	___fttol@exp1& (0+255),w,b
  3380  001B12  0A80               	xorlw	128
  3381  001B14  0F8F               	addlw	143
  3382  001B16  B0D8               	btfsc	status,0,c
  3383  001B18  D003               	goto	l3106
  3384  001B1A  D010               	goto	l3112
  3385                           
  3386                           ; BSR set to: 0
  3387                           
  3388                           ; BSR set to: 0
  3389  001B1C  D041               	goto	l772
  3390                           
  3391                           ; BSR set to: 0
  3392  001B1E  D000               	goto	l3106
  3393  001B20                     l3106:
  3394                           
  3395                           ; BSR set to: 0
  3396  001B20  0100               	movlb	0	; () banked
  3397  001B22  90D8               	bcf	status,0,c
  3398  001B24  3364               	rrcf	(___fttol@lval+3)& (0+255),f,b
  3399  001B26  3363               	rrcf	(___fttol@lval+2)& (0+255),f,b
  3400  001B28  3362               	rrcf	(___fttol@lval+1)& (0+255),f,b
  3401  001B2A  3361               	rrcf	___fttol@lval& (0+255),f,b
  3402                           
  3403                           ; BSR set to: 0
  3404  001B2C  0100               	movlb	0	; () banked
  3405  001B2E  3F65               	incfsz	___fttol@exp1& (0+255),f,b
  3406  001B30  D7F7               	goto	l3106
  3407                           
  3408                           ; BSR set to: 0
  3409  001B32  D01E               	goto	l3120
  3410  001B34                     l3110:
  3411                           
  3412                           ; BSR set to: 0
  3413  001B34  0E17               	movlw	23
  3414  001B36  0100               	movlb	0	; () banked
  3415  001B38  6565               	cpfsgt	___fttol@exp1& (0+255),b
  3416  001B3A  D013               	goto	l3118
  3417  001B3C                     l3112:
  3418                           
  3419                           ; BSR set to: 0
  3420  001B3C  0E00               	movlw	0
  3421  001B3E  6E2C               	movwf	?___fttol,c
  3422  001B40  0E00               	movlw	0
  3423  001B42  6E2D               	movwf	?___fttol+1,c
  3424  001B44  0E00               	movlw	0
  3425  001B46  6E2E               	movwf	?___fttol+2,c
  3426  001B48  0E00               	movlw	0
  3427  001B4A  6E2F               	movwf	?___fttol+3,c
  3428                           
  3429                           ; BSR set to: 0
  3430  001B4C  D029               	goto	l772
  3431                           
  3432                           ; BSR set to: 0
  3433  001B4E  D009               	goto	l3118
  3434  001B50                     l3116:
  3435                           
  3436                           ; BSR set to: 0
  3437  001B50  0100               	movlb	0	; () banked
  3438  001B52  90D8               	bcf	status,0,c
  3439  001B54  3761               	rlcf	___fttol@lval& (0+255),f,b
  3440  001B56  3762               	rlcf	(___fttol@lval+1)& (0+255),f,b
  3441  001B58  3763               	rlcf	(___fttol@lval+2)& (0+255),f,b
  3442  001B5A  3764               	rlcf	(___fttol@lval+3)& (0+255),f,b
  3443  001B5C  0100               	movlb	0	; () banked
  3444  001B5E  0765               	decf	___fttol@exp1& (0+255),f,b
  3445  001B60  D000               	goto	l3118
  3446  001B62                     l3118:
  3447                           
  3448                           ; BSR set to: 0
  3449  001B62  0100               	movlb	0	; () banked
  3450  001B64  5165               	movf	___fttol@exp1& (0+255),w,b
  3451  001B66  0100               	movlb	0	; () banked
  3452  001B68  B4D8               	btfsc	status,2,c
  3453  001B6A  D002               	goto	l3120
  3454  001B6C  D7F1               	goto	l3116
  3455                           
  3456                           ; BSR set to: 0
  3457  001B6E  D000               	goto	l3120
  3458  001B70                     l3120:
  3459                           
  3460                           ; BSR set to: 0
  3461  001B70  0100               	movlb	0	; () banked
  3462  001B72  5160               	movf	___fttol@sign1& (0+255),w,b
  3463  001B74  0100               	movlb	0	; () banked
  3464  001B76  B4D8               	btfsc	status,2,c
  3465  001B78  D00A               	goto	l3124
  3466                           
  3467                           ; BSR set to: 0
  3468  001B7A  0100               	movlb	0	; () banked
  3469  001B7C  1F64               	comf	(___fttol@lval+3)& (0+255),f,b
  3470  001B7E  1F63               	comf	(___fttol@lval+2)& (0+255),f,b
  3471  001B80  1F62               	comf	(___fttol@lval+1)& (0+255),f,b
  3472  001B82  6D61               	negf	___fttol@lval& (0+255),b
  3473  001B84  0E00               	movlw	0
  3474  001B86  2362               	addwfc	(___fttol@lval+1)& (0+255),f,b
  3475  001B88  2363               	addwfc	(___fttol@lval+2)& (0+255),f,b
  3476  001B8A  2364               	addwfc	(___fttol@lval+3)& (0+255),f,b
  3477  001B8C  D000               	goto	l3124
  3478  001B8E                     l3124:
  3479                           
  3480                           ; BSR set to: 0
  3481  001B8E  C061  F02C         	movff	___fttol@lval,?___fttol
  3482  001B92  C062  F02D         	movff	___fttol@lval+1,?___fttol+1
  3483  001B96  C063  F02E         	movff	___fttol@lval+2,?___fttol+2
  3484  001B9A  C064  F02F         	movff	___fttol@lval+3,?___fttol+3
  3485  001B9E  D000               	goto	l772
  3486  001BA0                     l772:
  3487                           
  3488                           ; BSR set to: 0
  3489  001BA0  0012               	return		;funcret
  3490  001BA2                     __end_of___fttol:
  3491                           	opt stack 0
  3492                           tblptru	equ	0xFF8
  3493                           tblptrh	equ	0xFF7
  3494                           tblptrl	equ	0xFF6
  3495                           tablat	equ	0xFF5
  3496                           prodh	equ	0xFF4
  3497                           prodl	equ	0xFF3
  3498                           intcon	equ	0xFF2
  3499                           postinc0	equ	0xFEE
  3500                           wreg	equ	0xFE8
  3501                           indf2	equ	0xFDF
  3502                           postinc2	equ	0xFDE
  3503                           postdec2	equ	0xFDD
  3504                           fsr2h	equ	0xFDA
  3505                           fsr2l	equ	0xFD9
  3506                           status	equ	0xFD8
  3507                           
  3508 ;; *************** function ___ftsub *****************
  3509 ;; Defined at:
  3510 ;;		line 20 in file "/opt/microchip/xc8/v1.34/sources/common/ftsub.c"
  3511 ;; Parameters:    Size  Location     Type
  3512 ;;  f1              3   40[COMRAM] float 
  3513 ;;  f2              3   43[COMRAM] float 
  3514 ;; Auto vars:     Size  Location     Type
  3515 ;;		None
  3516 ;; Return value:  Size  Location     Type
  3517 ;;                  3   40[COMRAM] float 
  3518 ;; Registers used:
  3519 ;;		wreg, status,2, status,0, cstack
  3520 ;; Tracked objects:
  3521 ;;		On entry : 0/0
  3522 ;;		On exit  : 0/0
  3523 ;;		Unchanged: 0/0
  3524 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3525 ;;      Params:         6       0       0       0       0       0       0       0       0
  3526 ;;      Locals:         0       0       0       0       0       0       0       0       0
  3527 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3528 ;;      Totals:         6       0       0       0       0       0       0       0       0
  3529 ;;Total ram usage:        6 bytes
  3530 ;; Hardware stack levels used:    1
  3531 ;; Hardware stack levels required when called:    5
  3532 ;; This function calls:
  3533 ;;		___ftadd
  3534 ;; This function is called by:
  3535 ;;		_ftoa
  3536 ;; This function uses a non-reentrant model
  3537 ;;
  3538                           
  3539                           	psect	text15
  3540  00250E                     __ptext15:
  3541                           	opt stack 0
  3542  00250E                     ___ftsub:
  3543                           	opt stack 24
  3544                           
  3545                           ; BSR set to: 0
  3546                           ;incstack = 0
  3547  00250E  502C               	movf	___ftsub@f2,w,c
  3548  002510  102D               	iorwf	___ftsub@f2+1,w,c
  3549  002512  102E               	iorwf	___ftsub@f2+2,w,c
  3550  002514  B4D8               	btfsc	status,2,c
  3551  002516  D007               	goto	l3078
  3552  002518  0E00               	movlw	0
  3553  00251A  1A2C               	xorwf	___ftsub@f2,f,c
  3554  00251C  0E00               	movlw	0
  3555  00251E  1A2D               	xorwf	___ftsub@f2+1,f,c
  3556  002520  0E80               	movlw	128
  3557  002522  1A2E               	xorwf	___ftsub@f2+2,f,c
  3558  002524  D000               	goto	l3078
  3559  002526                     l3078:
  3560  002526  C029  F01D         	movff	___ftsub@f1,___ftadd@f1
  3561  00252A  C02A  F01E         	movff	___ftsub@f1+1,___ftadd@f1+1
  3562  00252E  C02B  F01F         	movff	___ftsub@f1+2,___ftadd@f1+2
  3563  002532  C02C  F020         	movff	___ftsub@f2,___ftadd@f2
  3564  002536  C02D  F021         	movff	___ftsub@f2+1,___ftadd@f2+1
  3565  00253A  C02E  F022         	movff	___ftsub@f2+2,___ftadd@f2+2
  3566  00253E  ECD9  F00B         	call	___ftadd	;wreg free
  3567  002542  C01D  F029         	movff	?___ftadd,?___ftsub
  3568  002546  C01E  F02A         	movff	?___ftadd+1,?___ftsub+1
  3569  00254A  C01F  F02B         	movff	?___ftadd+2,?___ftsub+2
  3570  00254E  D000               	goto	l768
  3571  002550                     l768:
  3572  002550  0012               	return		;funcret
  3573  002552                     __end_of___ftsub:
  3574                           	opt stack 0
  3575                           tblptru	equ	0xFF8
  3576                           tblptrh	equ	0xFF7
  3577                           tblptrl	equ	0xFF6
  3578                           tablat	equ	0xFF5
  3579                           prodh	equ	0xFF4
  3580                           prodl	equ	0xFF3
  3581                           intcon	equ	0xFF2
  3582                           postinc0	equ	0xFEE
  3583                           wreg	equ	0xFE8
  3584                           indf2	equ	0xFDF
  3585                           postinc2	equ	0xFDE
  3586                           postdec2	equ	0xFDD
  3587                           fsr2h	equ	0xFDA
  3588                           fsr2l	equ	0xFD9
  3589                           status	equ	0xFD8
  3590                           
  3591 ;; *************** function ___ftadd *****************
  3592 ;; Defined at:
  3593 ;;		line 86 in file "/opt/microchip/xc8/v1.34/sources/common/ftadd.c"
  3594 ;; Parameters:    Size  Location     Type
  3595 ;;  f1              3   28[COMRAM] float 
  3596 ;;  f2              3   31[COMRAM] float 
  3597 ;; Auto vars:     Size  Location     Type
  3598 ;;  exp1            1   39[COMRAM] unsigned char 
  3599 ;;  exp2            1   38[COMRAM] unsigned char 
  3600 ;;  sign            1   37[COMRAM] unsigned char 
  3601 ;; Return value:  Size  Location     Type
  3602 ;;                  3   28[COMRAM] float 
  3603 ;; Registers used:
  3604 ;;		wreg, status,2, status,0, cstack
  3605 ;; Tracked objects:
  3606 ;;		On entry : 0/0
  3607 ;;		On exit  : 0/0
  3608 ;;		Unchanged: 0/0
  3609 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3610 ;;      Params:         6       0       0       0       0       0       0       0       0
  3611 ;;      Locals:         3       0       0       0       0       0       0       0       0
  3612 ;;      Temps:          3       0       0       0       0       0       0       0       0
  3613 ;;      Totals:        12       0       0       0       0       0       0       0       0
  3614 ;;Total ram usage:       12 bytes
  3615 ;; Hardware stack levels used:    1
  3616 ;; Hardware stack levels required when called:    4
  3617 ;; This function calls:
  3618 ;;		___ftpack
  3619 ;; This function is called by:
  3620 ;;		___ftsub
  3621 ;; This function uses a non-reentrant model
  3622 ;;
  3623                           
  3624                           	psect	text16
  3625  0017B2                     __ptext16:
  3626                           	opt stack 0
  3627  0017B2                     ___ftadd:
  3628                           	opt stack 24
  3629                           
  3630                           ;incstack = 0
  3631  0017B2  C01F  F023         	movff	___ftadd@f1+2,??___ftadd
  3632  0017B6  6A24               	clrf	(??___ftadd+1)& (0+255),c
  3633  0017B8  6A25               	clrf	(??___ftadd+2)& (0+255),c
  3634  0017BA  341E               	rlcf	___ftadd@f1+1,w,c
  3635  0017BC  3623               	rlcf	??___ftadd& (0+255),f,c
  3636  0017BE  E301               	bnc	u2631
  3637  0017C0  8024               	bsf	(??___ftadd+1)& (0+255),0,c
  3638  0017C2                     u2631:
  3639  0017C2  5023               	movf	??___ftadd,w,c
  3640  0017C4  6E28               	movwf	___ftadd@exp1,c
  3641  0017C6  C022  F023         	movff	___ftadd@f2+2,??___ftadd
  3642  0017CA  6A24               	clrf	(??___ftadd+1)& (0+255),c
  3643  0017CC  6A25               	clrf	(??___ftadd+2)& (0+255),c
  3644  0017CE  3421               	rlcf	___ftadd@f2+1,w,c
  3645  0017D0  3623               	rlcf	??___ftadd& (0+255),f,c
  3646  0017D2  E301               	bnc	u2641
  3647  0017D4  8024               	bsf	(??___ftadd+1)& (0+255),0,c
  3648  0017D6                     u2641:
  3649  0017D6  5023               	movf	??___ftadd,w,c
  3650  0017D8  6E27               	movwf	___ftadd@exp2,c
  3651  0017DA  5028               	movf	___ftadd@exp1,w,c
  3652  0017DC  B4D8               	btfsc	status,2,c
  3653  0017DE  D00B               	goto	l696
  3654  0017E0  5027               	movf	___ftadd@exp2,w,c
  3655  0017E2  5C28               	subwf	___ftadd@exp1,w,c
  3656  0017E4  B0D8               	btfsc	status,0,c
  3657  0017E6  D00E               	goto	l2818
  3658  0017E8  5028               	movf	___ftadd@exp1,w,c
  3659  0017EA  0800               	sublw	0
  3660  0017EC  2427               	addwf	___ftadd@exp2,w,c
  3661  0017EE  6E23               	movwf	??___ftadd& (0+255),c
  3662  0017F0  0E18               	movlw	24
  3663  0017F2  6423               	cpfsgt	??___ftadd,c
  3664  0017F4  D007               	goto	l2818
  3665  0017F6                     l696:
  3666  0017F6  C020  F01D         	movff	___ftadd@f2,?___ftadd
  3667  0017FA  C021  F01E         	movff	___ftadd@f2+1,?___ftadd+1
  3668  0017FE  C022  F01F         	movff	___ftadd@f2+2,?___ftadd+2
  3669  001802  D0B8               	goto	l697
  3670  001804                     l2818:
  3671  001804  5027               	movf	___ftadd@exp2,w,c
  3672  001806  B4D8               	btfsc	status,2,c
  3673  001808  D00B               	goto	l700
  3674  00180A  5028               	movf	___ftadd@exp1,w,c
  3675  00180C  5C27               	subwf	___ftadd@exp2,w,c
  3676  00180E  B0D8               	btfsc	status,0,c
  3677  001810  D00E               	goto	l2824
  3678  001812  5027               	movf	___ftadd@exp2,w,c
  3679  001814  0800               	sublw	0
  3680  001816  2428               	addwf	___ftadd@exp1,w,c
  3681  001818  6E23               	movwf	??___ftadd& (0+255),c
  3682  00181A  0E18               	movlw	24
  3683  00181C  6423               	cpfsgt	??___ftadd,c
  3684  00181E  D007               	goto	l2824
  3685  001820                     l700:
  3686  001820  C01D  F01D         	movff	___ftadd@f1,?___ftadd
  3687  001824  C01E  F01E         	movff	___ftadd@f1+1,?___ftadd+1
  3688  001828  C01F  F01F         	movff	___ftadd@f1+2,?___ftadd+2
  3689  00182C  D0A3               	goto	l697
  3690  00182E                     l2824:
  3691  00182E  0E06               	movlw	6
  3692  001830  6E26               	movwf	___ftadd@sign,c
  3693  001832  AE1F               	btfss	___ftadd@f1+2,7,c
  3694  001834  D002               	goto	l2830
  3695  001836  8E26               	bsf	___ftadd@sign,7,c
  3696  001838  D000               	goto	l2830
  3697  00183A                     l2830:
  3698  00183A  BE22               	btfsc	___ftadd@f2+2,7,c
  3699  00183C  8C26               	bsf	___ftadd@sign,6,c
  3700  00183E  8E1E               	bsf	___ftadd@f1+1,7,c
  3701  001840  0EFF               	movlw	255
  3702  001842  161D               	andwf	___ftadd@f1,f,c
  3703  001844  0EFF               	movlw	255
  3704  001846  161E               	andwf	___ftadd@f1+1,f,c
  3705  001848  0E00               	movlw	0
  3706  00184A  161F               	andwf	___ftadd@f1+2,f,c
  3707  00184C  8E21               	bsf	___ftadd@f2+1,7,c
  3708  00184E  0EFF               	movlw	255
  3709  001850  1620               	andwf	___ftadd@f2,f,c
  3710  001852  0EFF               	movlw	255
  3711  001854  1621               	andwf	___ftadd@f2+1,f,c
  3712  001856  0E00               	movlw	0
  3713  001858  1622               	andwf	___ftadd@f2+2,f,c
  3714  00185A  5027               	movf	___ftadd@exp2,w,c
  3715  00185C  5C28               	subwf	___ftadd@exp1,w,c
  3716  00185E  B0D8               	btfsc	status,0,c
  3717  001860  D01E               	goto	l2850
  3718  001862                     l2840:
  3719  001862  90D8               	bcf	status,0,c
  3720  001864  3620               	rlcf	___ftadd@f2,f,c
  3721  001866  3621               	rlcf	___ftadd@f2+1,f,c
  3722  001868  3622               	rlcf	___ftadd@f2+2,f,c
  3723  00186A  0627               	decf	___ftadd@exp2,f,c
  3724  00186C  5028               	movf	___ftadd@exp1,w,c
  3725  00186E  1827               	xorwf	___ftadd@exp2,w,c
  3726  001870  B4D8               	btfsc	status,2,c
  3727  001872  D00F               	goto	l2848
  3728  001874  0626               	decf	___ftadd@sign,f,c
  3729  001876  C026  F023         	movff	___ftadd@sign,??___ftadd
  3730  00187A  0E07               	movlw	7
  3731  00187C  1623               	andwf	??___ftadd,f,c
  3732  00187E  B4D8               	btfsc	status,2,c
  3733  001880  D008               	goto	l2848
  3734  001882  D7EF               	goto	l2840
  3735  001884  D006               	goto	l2848
  3736  001886                     l2846:
  3737  001886  90D8               	bcf	status,0,c
  3738  001888  321F               	rrcf	___ftadd@f1+2,f,c
  3739  00188A  321E               	rrcf	___ftadd@f1+1,f,c
  3740  00188C  321D               	rrcf	___ftadd@f1,f,c
  3741  00188E  2A28               	incf	___ftadd@exp1,f,c
  3742  001890  D000               	goto	l2848
  3743  001892                     l2848:
  3744  001892  5027               	movf	___ftadd@exp2,w,c
  3745  001894  1828               	xorwf	___ftadd@exp1,w,c
  3746  001896  B4D8               	btfsc	status,2,c
  3747  001898  D024               	goto	l711
  3748  00189A  D7F5               	goto	l2846
  3749  00189C  D022               	goto	l711
  3750  00189E                     l2850:
  3751  00189E  5028               	movf	___ftadd@exp1,w,c
  3752  0018A0  5C27               	subwf	___ftadd@exp2,w,c
  3753  0018A2  B0D8               	btfsc	status,0,c
  3754  0018A4  D01E               	goto	l711
  3755  0018A6                     l2852:
  3756  0018A6  90D8               	bcf	status,0,c
  3757  0018A8  361D               	rlcf	___ftadd@f1,f,c
  3758  0018AA  361E               	rlcf	___ftadd@f1+1,f,c
  3759  0018AC  361F               	rlcf	___ftadd@f1+2,f,c
  3760  0018AE  0628               	decf	___ftadd@exp1,f,c
  3761  0018B0  5028               	movf	___ftadd@exp1,w,c
  3762  0018B2  1827               	xorwf	___ftadd@exp2,w,c
  3763  0018B4  B4D8               	btfsc	status,2,c
  3764  0018B6  D00F               	goto	l2860
  3765  0018B8  0626               	decf	___ftadd@sign,f,c
  3766  0018BA  C026  F023         	movff	___ftadd@sign,??___ftadd
  3767  0018BE  0E07               	movlw	7
  3768  0018C0  1623               	andwf	??___ftadd,f,c
  3769  0018C2  B4D8               	btfsc	status,2,c
  3770  0018C4  D008               	goto	l2860
  3771  0018C6  D7EF               	goto	l2852
  3772  0018C8  D006               	goto	l2860
  3773  0018CA                     l2858:
  3774  0018CA  90D8               	bcf	status,0,c
  3775  0018CC  3222               	rrcf	___ftadd@f2+2,f,c
  3776  0018CE  3221               	rrcf	___ftadd@f2+1,f,c
  3777  0018D0  3220               	rrcf	___ftadd@f2,f,c
  3778  0018D2  2A27               	incf	___ftadd@exp2,f,c
  3779  0018D4  D000               	goto	l2860
  3780  0018D6                     l2860:
  3781  0018D6  5027               	movf	___ftadd@exp2,w,c
  3782  0018D8  1828               	xorwf	___ftadd@exp1,w,c
  3783  0018DA  B4D8               	btfsc	status,2,c
  3784  0018DC  D002               	goto	l711
  3785  0018DE  D7F5               	goto	l2858
  3786  0018E0  D000               	goto	l711
  3787  0018E2                     l711:
  3788  0018E2  AE26               	btfss	___ftadd@sign,7,c
  3789  0018E4  D00C               	goto	l720
  3790  0018E6  0EFF               	movlw	255
  3791  0018E8  1A1D               	xorwf	___ftadd@f1,f,c
  3792  0018EA  0EFF               	movlw	255
  3793  0018EC  1A1E               	xorwf	___ftadd@f1+1,f,c
  3794  0018EE  0EFF               	movlw	255
  3795  0018F0  1A1F               	xorwf	___ftadd@f1+2,f,c
  3796  0018F2  0E01               	movlw	1
  3797  0018F4  261D               	addwf	___ftadd@f1,f,c
  3798  0018F6  0E00               	movlw	0
  3799  0018F8  221E               	addwfc	___ftadd@f1+1,f,c
  3800  0018FA  0E00               	movlw	0
  3801  0018FC  221F               	addwfc	___ftadd@f1+2,f,c
  3802  0018FE                     l720:
  3803  0018FE  AC26               	btfss	___ftadd@sign,6,c
  3804  001900  D00D               	goto	l2866
  3805  001902  0EFF               	movlw	255
  3806  001904  1A20               	xorwf	___ftadd@f2,f,c
  3807  001906  0EFF               	movlw	255
  3808  001908  1A21               	xorwf	___ftadd@f2+1,f,c
  3809  00190A  0EFF               	movlw	255
  3810  00190C  1A22               	xorwf	___ftadd@f2+2,f,c
  3811  00190E  0E01               	movlw	1
  3812  001910  2620               	addwf	___ftadd@f2,f,c
  3813  001912  0E00               	movlw	0
  3814  001914  2221               	addwfc	___ftadd@f2+1,f,c
  3815  001916  0E00               	movlw	0
  3816  001918  2222               	addwfc	___ftadd@f2+2,f,c
  3817  00191A  D000               	goto	l2866
  3818  00191C                     l2866:
  3819  00191C  0E00               	movlw	0
  3820  00191E  6E26               	movwf	___ftadd@sign,c
  3821  001920  501D               	movf	___ftadd@f1,w,c
  3822  001922  2620               	addwf	___ftadd@f2,f,c
  3823  001924  501E               	movf	___ftadd@f1+1,w,c
  3824  001926  2221               	addwfc	___ftadd@f2+1,f,c
  3825  001928  501F               	movf	___ftadd@f1+2,w,c
  3826  00192A  2222               	addwfc	___ftadd@f2+2,f,c
  3827  00192C  AE22               	btfss	___ftadd@f2+2,7,c
  3828  00192E  D00F               	goto	l2876
  3829  001930  0EFF               	movlw	255
  3830  001932  1A20               	xorwf	___ftadd@f2,f,c
  3831  001934  0EFF               	movlw	255
  3832  001936  1A21               	xorwf	___ftadd@f2+1,f,c
  3833  001938  0EFF               	movlw	255
  3834  00193A  1A22               	xorwf	___ftadd@f2+2,f,c
  3835  00193C  0E01               	movlw	1
  3836  00193E  2620               	addwf	___ftadd@f2,f,c
  3837  001940  0E00               	movlw	0
  3838  001942  2221               	addwfc	___ftadd@f2+1,f,c
  3839  001944  0E00               	movlw	0
  3840  001946  2222               	addwfc	___ftadd@f2+2,f,c
  3841  001948  0E01               	movlw	1
  3842  00194A  6E26               	movwf	___ftadd@sign,c
  3843  00194C  D000               	goto	l2876
  3844  00194E                     l2876:
  3845  00194E  C020  F015         	movff	___ftadd@f2,___ftpack@arg
  3846  001952  C021  F016         	movff	___ftadd@f2+1,___ftpack@arg+1
  3847  001956  C022  F017         	movff	___ftadd@f2+2,___ftpack@arg+2
  3848  00195A  C028  F018         	movff	___ftadd@exp1,___ftpack@exp
  3849  00195E  C026  F019         	movff	___ftadd@sign,___ftpack@sign
  3850  001962  EC37  F00F         	call	___ftpack	;wreg free
  3851  001966  C015  F01D         	movff	?___ftpack,?___ftadd
  3852  00196A  C016  F01E         	movff	?___ftpack+1,?___ftadd+1
  3853  00196E  C017  F01F         	movff	?___ftpack+2,?___ftadd+2
  3854  001972  D000               	goto	l697
  3855  001974                     l697:
  3856  001974  0012               	return		;funcret
  3857  001976                     __end_of___ftadd:
  3858                           	opt stack 0
  3859                           tblptru	equ	0xFF8
  3860                           tblptrh	equ	0xFF7
  3861                           tblptrl	equ	0xFF6
  3862                           tablat	equ	0xFF5
  3863                           prodh	equ	0xFF4
  3864                           prodl	equ	0xFF3
  3865                           intcon	equ	0xFF2
  3866                           postinc0	equ	0xFEE
  3867                           wreg	equ	0xFE8
  3868                           indf2	equ	0xFDF
  3869                           postinc2	equ	0xFDE
  3870                           postdec2	equ	0xFDD
  3871                           fsr2h	equ	0xFDA
  3872                           fsr2l	equ	0xFD9
  3873                           status	equ	0xFD8
  3874                           
  3875 ;; *************** function ___ftneg *****************
  3876 ;; Defined at:
  3877 ;;		line 15 in file "/opt/microchip/xc8/v1.34/sources/common/ftneg.c"
  3878 ;; Parameters:    Size  Location     Type
  3879 ;;  f1              3   20[COMRAM] float 
  3880 ;; Auto vars:     Size  Location     Type
  3881 ;;		None
  3882 ;; Return value:  Size  Location     Type
  3883 ;;                  3   20[COMRAM] float 
  3884 ;; Registers used:
  3885 ;;		wreg, status,2, status,0
  3886 ;; Tracked objects:
  3887 ;;		On entry : 0/0
  3888 ;;		On exit  : 0/0
  3889 ;;		Unchanged: 0/0
  3890 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3891 ;;      Params:         3       0       0       0       0       0       0       0       0
  3892 ;;      Locals:         0       0       0       0       0       0       0       0       0
  3893 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3894 ;;      Totals:         3       0       0       0       0       0       0       0       0
  3895 ;;Total ram usage:        3 bytes
  3896 ;; Hardware stack levels used:    1
  3897 ;; Hardware stack levels required when called:    3
  3898 ;; This function calls:
  3899 ;;		Nothing
  3900 ;; This function is called by:
  3901 ;;		_ftoa
  3902 ;; This function uses a non-reentrant model
  3903 ;;
  3904                           
  3905                           	psect	text17
  3906  002740                     __ptext17:
  3907                           	opt stack 0
  3908  002740                     ___ftneg:
  3909                           	opt stack 26
  3910                           
  3911                           ;incstack = 0
  3912  002740  5015               	movf	___ftneg@f1,w,c
  3913  002742  1016               	iorwf	___ftneg@f1+1,w,c
  3914  002744  1017               	iorwf	___ftneg@f1+2,w,c
  3915  002746  B4D8               	btfsc	status,2,c
  3916  002748  D006               	goto	l753
  3917  00274A  0E00               	movlw	0
  3918  00274C  1A15               	xorwf	___ftneg@f1,f,c
  3919  00274E  0E00               	movlw	0
  3920  002750  1A16               	xorwf	___ftneg@f1+1,f,c
  3921  002752  0E80               	movlw	128
  3922  002754  1A17               	xorwf	___ftneg@f1+2,f,c
  3923  002756                     l753:
  3924  002756  C015  F015         	movff	___ftneg@f1,?___ftneg
  3925  00275A  C016  F016         	movff	___ftneg@f1+1,?___ftneg+1
  3926  00275E  C017  F017         	movff	___ftneg@f1+2,?___ftneg+2
  3927  002762  0012               	return		;funcret
  3928  002764                     __end_of___ftneg:
  3929                           	opt stack 0
  3930                           tblptru	equ	0xFF8
  3931                           tblptrh	equ	0xFF7
  3932                           tblptrl	equ	0xFF6
  3933                           tablat	equ	0xFF5
  3934                           prodh	equ	0xFF4
  3935                           prodl	equ	0xFF3
  3936                           intcon	equ	0xFF2
  3937                           postinc0	equ	0xFEE
  3938                           wreg	equ	0xFE8
  3939                           indf2	equ	0xFDF
  3940                           postinc2	equ	0xFDE
  3941                           postdec2	equ	0xFDD
  3942                           fsr2h	equ	0xFDA
  3943                           fsr2l	equ	0xFD9
  3944                           status	equ	0xFD8
  3945                           
  3946 ;; *************** function ___ftmul *****************
  3947 ;; Defined at:
  3948 ;;		line 62 in file "/opt/microchip/xc8/v1.34/sources/common/ftmul.c"
  3949 ;; Parameters:    Size  Location     Type
  3950 ;;  f1              3   28[COMRAM] float 
  3951 ;;  f2              3   31[COMRAM] float 
  3952 ;; Auto vars:     Size  Location     Type
  3953 ;;  f3_as_produc    3   38[COMRAM] unsigned um
  3954 ;;  sign            1   42[COMRAM] unsigned char 
  3955 ;;  cntr            1   41[COMRAM] unsigned char 
  3956 ;;  exp             1   37[COMRAM] unsigned char 
  3957 ;; Return value:  Size  Location     Type
  3958 ;;                  3   28[COMRAM] float 
  3959 ;; Registers used:
  3960 ;;		wreg, status,2, status,0, cstack
  3961 ;; Tracked objects:
  3962 ;;		On entry : 0/0
  3963 ;;		On exit  : 0/0
  3964 ;;		Unchanged: 0/0
  3965 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3966 ;;      Params:         6       0       0       0       0       0       0       0       0
  3967 ;;      Locals:         6       0       0       0       0       0       0       0       0
  3968 ;;      Temps:          3       0       0       0       0       0       0       0       0
  3969 ;;      Totals:        15       0       0       0       0       0       0       0       0
  3970 ;;Total ram usage:       15 bytes
  3971 ;; Hardware stack levels used:    1
  3972 ;; Hardware stack levels required when called:    4
  3973 ;; This function calls:
  3974 ;;		___ftpack
  3975 ;; This function is called by:
  3976 ;;		_main
  3977 ;;		_ftoa
  3978 ;; This function uses a non-reentrant model
  3979 ;;
  3980                           
  3981                           	psect	text18
  3982  001CA2                     __ptext18:
  3983                           	opt stack 0
  3984  001CA2                     ___ftmul:
  3985                           	opt stack 25
  3986                           
  3987                           ;incstack = 0
  3988  001CA2  C01F  F023         	movff	___ftmul@f1+2,??___ftmul
  3989  001CA6  6A24               	clrf	(??___ftmul+1)& (0+255),c
  3990  001CA8  6A25               	clrf	(??___ftmul+2)& (0+255),c
  3991  001CAA  341E               	rlcf	___ftmul@f1+1,w,c
  3992  001CAC  3623               	rlcf	??___ftmul& (0+255),f,c
  3993  001CAE  E301               	bnc	u3081
  3994  001CB0  8024               	bsf	(??___ftmul+1)& (0+255),0,c
  3995  001CB2                     u3081:
  3996  001CB2  5023               	movf	??___ftmul,w,c
  3997  001CB4  6E26               	movwf	___ftmul@exp,c
  3998  001CB6  5026               	movf	___ftmul@exp,w,c
  3999  001CB8  A4D8               	btfss	status,2,c
  4000  001CBA  D002               	goto	l3032
  4001  001CBC  D00E               	goto	l3034
  4002  001CBE  D06C               	goto	l743
  4003  001CC0                     l3032:
  4004  001CC0  C022  F023         	movff	___ftmul@f2+2,??___ftmul
  4005  001CC4  6A24               	clrf	(??___ftmul+1)& (0+255),c
  4006  001CC6  6A25               	clrf	(??___ftmul+2)& (0+255),c
  4007  001CC8  3421               	rlcf	___ftmul@f2+1,w,c
  4008  001CCA  3623               	rlcf	??___ftmul& (0+255),f,c
  4009  001CCC  E301               	bnc	u3101
  4010  001CCE  8024               	bsf	(??___ftmul+1)& (0+255),0,c
  4011  001CD0                     u3101:
  4012  001CD0  5023               	movf	??___ftmul,w,c
  4013  001CD2  6E2B               	movwf	___ftmul@sign,c
  4014  001CD4  502B               	movf	___ftmul@sign,w,c
  4015  001CD6  A4D8               	btfss	status,2,c
  4016  001CD8  D007               	goto	l3038
  4017  001CDA                     l3034:
  4018  001CDA  0E00               	movlw	0
  4019  001CDC  6E1D               	movwf	?___ftmul,c
  4020  001CDE  0E00               	movlw	0
  4021  001CE0  6E1E               	movwf	?___ftmul+1,c
  4022  001CE2  0E00               	movlw	0
  4023  001CE4  6E1F               	movwf	?___ftmul+2,c
  4024  001CE6  D058               	goto	l743
  4025  001CE8                     l3038:
  4026  001CE8  502B               	movf	___ftmul@sign,w,c
  4027  001CEA  0F7B               	addlw	123
  4028  001CEC  2626               	addwf	___ftmul@exp,f,c
  4029  001CEE  C01F  F02B         	movff	___ftmul@f1+2,___ftmul@sign
  4030  001CF2  5022               	movf	___ftmul@f2+2,w,c
  4031  001CF4  1A2B               	xorwf	___ftmul@sign,f,c
  4032  001CF6  0E80               	movlw	128
  4033  001CF8  162B               	andwf	___ftmul@sign,f,c
  4034  001CFA  8E1E               	bsf	___ftmul@f1+1,7,c
  4035  001CFC  8E21               	bsf	___ftmul@f2+1,7,c
  4036  001CFE  0EFF               	movlw	255
  4037  001D00  1620               	andwf	___ftmul@f2,f,c
  4038  001D02  0EFF               	movlw	255
  4039  001D04  1621               	andwf	___ftmul@f2+1,f,c
  4040  001D06  0E00               	movlw	0
  4041  001D08  1622               	andwf	___ftmul@f2+2,f,c
  4042  001D0A  0E00               	movlw	0
  4043  001D0C  6E27               	movwf	___ftmul@f3_as_product,c
  4044  001D0E  0E00               	movlw	0
  4045  001D10  6E28               	movwf	___ftmul@f3_as_product+1,c
  4046  001D12  0E00               	movlw	0
  4047  001D14  6E29               	movwf	___ftmul@f3_as_product+2,c
  4048  001D16  0E07               	movlw	7
  4049  001D18  6E2A               	movwf	___ftmul@cntr,c
  4050  001D1A  D000               	goto	l3052
  4051  001D1C                     l3052:
  4052  001D1C  A01D               	btfss	___ftmul@f1,0,c
  4053  001D1E  D007               	goto	l3056
  4054  001D20  5020               	movf	___ftmul@f2,w,c
  4055  001D22  2627               	addwf	___ftmul@f3_as_product,f,c
  4056  001D24  5021               	movf	___ftmul@f2+1,w,c
  4057  001D26  2228               	addwfc	___ftmul@f3_as_product+1,f,c
  4058  001D28  5022               	movf	___ftmul@f2+2,w,c
  4059  001D2A  2229               	addwfc	___ftmul@f3_as_product+2,f,c
  4060  001D2C  D000               	goto	l3056
  4061  001D2E                     l3056:
  4062  001D2E  90D8               	bcf	status,0,c
  4063  001D30  321F               	rrcf	___ftmul@f1+2,f,c
  4064  001D32  321E               	rrcf	___ftmul@f1+1,f,c
  4065  001D34  321D               	rrcf	___ftmul@f1,f,c
  4066  001D36  90D8               	bcf	status,0,c
  4067  001D38  3620               	rlcf	___ftmul@f2,f,c
  4068  001D3A  3621               	rlcf	___ftmul@f2+1,f,c
  4069  001D3C  3622               	rlcf	___ftmul@f2+2,f,c
  4070  001D3E  2E2A               	decfsz	___ftmul@cntr,f,c
  4071  001D40  D7ED               	goto	l3052
  4072  001D42  D000               	goto	l3060
  4073  001D44                     l3060:
  4074  001D44  0E09               	movlw	9
  4075  001D46  6E2A               	movwf	___ftmul@cntr,c
  4076  001D48  D000               	goto	l3062
  4077  001D4A                     l3062:
  4078  001D4A  A01D               	btfss	___ftmul@f1,0,c
  4079  001D4C  D007               	goto	l3066
  4080  001D4E  5020               	movf	___ftmul@f2,w,c
  4081  001D50  2627               	addwf	___ftmul@f3_as_product,f,c
  4082  001D52  5021               	movf	___ftmul@f2+1,w,c
  4083  001D54  2228               	addwfc	___ftmul@f3_as_product+1,f,c
  4084  001D56  5022               	movf	___ftmul@f2+2,w,c
  4085  001D58  2229               	addwfc	___ftmul@f3_as_product+2,f,c
  4086  001D5A  D000               	goto	l3066
  4087  001D5C                     l3066:
  4088  001D5C  90D8               	bcf	status,0,c
  4089  001D5E  321F               	rrcf	___ftmul@f1+2,f,c
  4090  001D60  321E               	rrcf	___ftmul@f1+1,f,c
  4091  001D62  321D               	rrcf	___ftmul@f1,f,c
  4092  001D64  90D8               	bcf	status,0,c
  4093  001D66  3229               	rrcf	___ftmul@f3_as_product+2,f,c
  4094  001D68  3228               	rrcf	___ftmul@f3_as_product+1,f,c
  4095  001D6A  3227               	rrcf	___ftmul@f3_as_product,f,c
  4096  001D6C  2E2A               	decfsz	___ftmul@cntr,f,c
  4097  001D6E  D7ED               	goto	l3062
  4098  001D70  D000               	goto	l3070
  4099  001D72                     l3070:
  4100  001D72  C027  F015         	movff	___ftmul@f3_as_product,___ftpack@arg
  4101  001D76  C028  F016         	movff	___ftmul@f3_as_product+1,___ftpack@arg+1
  4102  001D7A  C029  F017         	movff	___ftmul@f3_as_product+2,___ftpack@arg+2
  4103  001D7E  C026  F018         	movff	___ftmul@exp,___ftpack@exp
  4104  001D82  C02B  F019         	movff	___ftmul@sign,___ftpack@sign
  4105  001D86  EC37  F00F         	call	___ftpack	;wreg free
  4106  001D8A  C015  F01D         	movff	?___ftpack,?___ftmul
  4107  001D8E  C016  F01E         	movff	?___ftpack+1,?___ftmul+1
  4108  001D92  C017  F01F         	movff	?___ftpack+2,?___ftmul+2
  4109  001D96  D000               	goto	l743
  4110  001D98                     l743:
  4111  001D98  0012               	return		;funcret
  4112  001D9A                     __end_of___ftmul:
  4113                           	opt stack 0
  4114                           tblptru	equ	0xFF8
  4115                           tblptrh	equ	0xFF7
  4116                           tblptrl	equ	0xFF6
  4117                           tablat	equ	0xFF5
  4118                           prodh	equ	0xFF4
  4119                           prodl	equ	0xFF3
  4120                           intcon	equ	0xFF2
  4121                           postinc0	equ	0xFEE
  4122                           wreg	equ	0xFE8
  4123                           indf2	equ	0xFDF
  4124                           postinc2	equ	0xFDE
  4125                           postdec2	equ	0xFDD
  4126                           fsr2h	equ	0xFDA
  4127                           fsr2l	equ	0xFD9
  4128                           status	equ	0xFD8
  4129                           
  4130 ;; *************** function _escreve_str_lcd *****************
  4131 ;; Defined at:
  4132 ;;		line 79 in file "LCD8.h"
  4133 ;; Parameters:    Size  Location     Type
  4134 ;;  x               1    wreg     unsigned char 
  4135 ;;  y               1   24[COMRAM] unsigned char 
  4136 ;;  str             2   25[COMRAM] PTR const unsigned char 
  4137 ;;		 -> NULL(0), ftoa@buf(17), STR_6(7), rx(3), 
  4138 ;;		 -> STR_5(5), STR_4(5), STR_3(5), STR_2(16), 
  4139 ;;		 -> STR_1(10), rx1(4), 
  4140 ;; Auto vars:     Size  Location     Type
  4141 ;;  x               1   28[COMRAM] unsigned char 
  4142 ;;  addressy        1   30[COMRAM] unsigned char 
  4143 ;;  addressx        1   29[COMRAM] unsigned char 
  4144 ;; Return value:  Size  Location     Type
  4145 ;;		None               void
  4146 ;; Registers used:
  4147 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  4148 ;; Tracked objects:
  4149 ;;		On entry : 0/0
  4150 ;;		On exit  : 0/0
  4151 ;;		Unchanged: 0/0
  4152 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4153 ;;      Params:         3       0       0       0       0       0       0       0       0
  4154 ;;      Locals:         3       0       0       0       0       0       0       0       0
  4155 ;;      Temps:          1       0       0       0       0       0       0       0       0
  4156 ;;      Totals:         7       0       0       0       0       0       0       0       0
  4157 ;;Total ram usage:        7 bytes
  4158 ;; Hardware stack levels used:    1
  4159 ;; Hardware stack levels required when called:    4
  4160 ;; This function calls:
  4161 ;;		_dados
  4162 ;; This function is called by:
  4163 ;;		_main
  4164 ;; This function uses a non-reentrant model
  4165 ;;
  4166                           
  4167                           	psect	text19
  4168  001FDE                     __ptext19:
  4169                           	opt stack 0
  4170  001FDE                     _escreve_str_lcd:
  4171                           	opt stack 26
  4172                           
  4173                           ;incstack = 0
  4174                           ;escreve_str_lcd@x stored from wreg
  4175  001FDE  6E1D               	movwf	escreve_str_lcd@x,c
  4176                           
  4177                           ;LCD8.h: 81: char addressy, addressx ;
  4178                           ;LCD8.h: 83: if (y==1)
  4179  001FE0  0419               	decf	escreve_str_lcd@y,w,c
  4180  001FE2  A4D8               	btfss	status,2,c
  4181  001FE4  D002               	goto	l2418
  4182                           
  4183                           ;LCD8.h: 84: {
  4184                           ;LCD8.h: 85: addressy = 0x80;
  4185  001FE6  0E80               	movlw	128
  4186  001FE8  D011               	goto	L4
  4187  001FEA                     l2418:
  4188                           
  4189                           ;LCD8.h: 87: else if (y==2)
  4190  001FEA  0E02               	movlw	2
  4191  001FEC  1819               	xorwf	escreve_str_lcd@y,w,c
  4192  001FEE  A4D8               	btfss	status,2,c
  4193  001FF0  D002               	goto	l2422
  4194                           
  4195                           ;LCD8.h: 88: {
  4196                           ;LCD8.h: 89: addressy = 0xc0;
  4197  001FF2  0EC0               	movlw	192
  4198  001FF4  D00B               	goto	L4
  4199  001FF6                     l2422:
  4200                           
  4201                           ;LCD8.h: 91: else if (y==3)
  4202  001FF6  0E03               	movlw	3
  4203  001FF8  1819               	xorwf	escreve_str_lcd@y,w,c
  4204  001FFA  A4D8               	btfss	status,2,c
  4205  001FFC  D002               	goto	l2426
  4206                           
  4207                           ;LCD8.h: 92: {
  4208                           ;LCD8.h: 93: addressy = 0x90;
  4209  001FFE  0E90               	movlw	144
  4210  002000  D005               	goto	L4
  4211  002002                     l2426:
  4212                           
  4213                           ;LCD8.h: 95: else if (y==4)
  4214  002002  0E04               	movlw	4
  4215  002004  1819               	xorwf	escreve_str_lcd@y,w,c
  4216  002006  A4D8               	btfss	status,2,c
  4217  002008  D003               	goto	l2430
  4218                           
  4219                           ;LCD8.h: 96: {
  4220                           ;LCD8.h: 97: addressy = 0xd0;
  4221  00200A  0ED0               	movlw	208
  4222  00200C                     L4:
  4223  00200C  6E1F               	movwf	escreve_str_lcd@addressy,c
  4224  00200E  D000               	goto	l2430
  4225  002010                     l2430:
  4226                           
  4227                           ;LCD8.h: 98: }
  4228                           ;LCD8.h: 101: addressx =addressy + x-1;
  4229  002010  501F               	movf	escreve_str_lcd@addressy,w,c
  4230  002012  241D               	addwf	escreve_str_lcd@x,w,c
  4231  002014  6E1C               	movwf	??_escreve_str_lcd& (0+255),c
  4232  002016  041C               	decf	??_escreve_str_lcd,w,c
  4233  002018  6E1E               	movwf	escreve_str_lcd@addressx,c
  4234                           
  4235                           ;LCD8.h: 103: dados(addressx, 0);
  4236  00201A  0E00               	movlw	0
  4237  00201C  6E16               	movwf	dados@rw+1,c
  4238  00201E  0E00               	movlw	0
  4239  002020  6E15               	movwf	dados@rw,c
  4240  002022  501E               	movf	escreve_str_lcd@addressx,w,c
  4241  002024  EC77  F013         	call	_dados
  4242                           
  4243                           ;LCD8.h: 105: while(*str!='\0')
  4244  002028  D019               	goto	l2438
  4245  00202A                     l2434:
  4246                           
  4247                           ;LCD8.h: 106: {
  4248                           ;LCD8.h: 108: dados(*str,1);
  4249  00202A  0E00               	movlw	0
  4250  00202C  6E16               	movwf	dados@rw+1,c
  4251  00202E  0E01               	movlw	1
  4252  002030  6E15               	movwf	dados@rw,c
  4253  002032  C01A  FFF6         	movff	escreve_str_lcd@str,tblptrl
  4254  002036  C01B  FFF7         	movff	escreve_str_lcd@str+1,tblptrh
  4255  00203A  6AF8               	clrf	tblptru,c
  4256  00203C  0E07               	movlw	(high __ramtop+-1)
  4257  00203E  64F7               	cpfsgt	tblptrh,c
  4258  002040  D003               	bra	u2267
  4259  002042  0008               	tblrd		*
  4260  002044  50F5               	movf	tablat,w,c
  4261  002046  D005               	bra	u2260
  4262  002048                     u2267:
  4263  002048  CFF6 FFD9          	movff	tblptrl,fsr2l
  4264  00204C  CFF7 FFDA          	movff	tblptrh,fsr2h
  4265  002050  50DF               	movf	indf2,w,c
  4266  002052                     u2260:
  4267  002052  EC77  F013         	call	_dados
  4268                           
  4269                           ;LCD8.h: 109: str++;
  4270  002056  4A1A               	infsnz	escreve_str_lcd@str,f,c
  4271  002058  2A1B               	incf	escreve_str_lcd@str+1,f,c
  4272  00205A  D000               	goto	l2438
  4273  00205C                     l2438:
  4274  00205C  C01A  FFF6         	movff	escreve_str_lcd@str,tblptrl
  4275  002060  C01B  FFF7         	movff	escreve_str_lcd@str+1,tblptrh
  4276  002064  6AF8               	clrf	tblptru,c
  4277  002066  0E07               	movlw	(high __ramtop+-1)
  4278  002068  64F7               	cpfsgt	tblptrh,c
  4279  00206A  D003               	bra	u2277
  4280  00206C  0008               	tblrd		*
  4281  00206E  50F5               	movf	tablat,w,c
  4282  002070  D005               	bra	u2270
  4283  002072                     u2277:
  4284  002072  CFF6 FFD9          	movff	tblptrl,fsr2l
  4285  002076  CFF7 FFDA          	movff	tblptrh,fsr2h
  4286  00207A  50DF               	movf	indf2,w,c
  4287  00207C                     u2270:
  4288  00207C  0900               	iorlw	0
  4289  00207E  A4D8               	btfss	status,2,c
  4290  002080  D7D4               	goto	l2434
  4291  002082  0012               	return		;funcret
  4292  002084                     __end_of_escreve_str_lcd:
  4293                           	opt stack 0
  4294                           tblptru	equ	0xFF8
  4295                           tblptrh	equ	0xFF7
  4296                           tblptrl	equ	0xFF6
  4297                           tablat	equ	0xFF5
  4298                           prodh	equ	0xFF4
  4299                           prodl	equ	0xFF3
  4300                           intcon	equ	0xFF2
  4301                           postinc0	equ	0xFEE
  4302                           wreg	equ	0xFE8
  4303                           indf2	equ	0xFDF
  4304                           postinc2	equ	0xFDE
  4305                           postdec2	equ	0xFDD
  4306                           fsr2h	equ	0xFDA
  4307                           fsr2l	equ	0xFD9
  4308                           status	equ	0xFD8
  4309                           
  4310 ;; *************** function _dados *****************
  4311 ;; Defined at:
  4312 ;;		line 49 in file "LCD8.h"
  4313 ;; Parameters:    Size  Location     Type
  4314 ;;  chr             1    wreg     unsigned char 
  4315 ;;  rw              2   20[COMRAM] int 
  4316 ;; Auto vars:     Size  Location     Type
  4317 ;;  chr             1   23[COMRAM] unsigned char 
  4318 ;; Return value:  Size  Location     Type
  4319 ;;		None               void
  4320 ;; Registers used:
  4321 ;;		wreg, status,2, cstack
  4322 ;; Tracked objects:
  4323 ;;		On entry : 0/0
  4324 ;;		On exit  : 0/0
  4325 ;;		Unchanged: 0/0
  4326 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4327 ;;      Params:         2       0       0       0       0       0       0       0       0
  4328 ;;      Locals:         1       0       0       0       0       0       0       0       0
  4329 ;;      Temps:          1       0       0       0       0       0       0       0       0
  4330 ;;      Totals:         4       0       0       0       0       0       0       0       0
  4331 ;;Total ram usage:        4 bytes
  4332 ;; Hardware stack levels used:    1
  4333 ;; Hardware stack levels required when called:    3
  4334 ;; This function calls:
  4335 ;;		Nothing
  4336 ;; This function is called by:
  4337 ;;		_init_lcd
  4338 ;;		_escreve_str_lcd
  4339 ;;		_comando_lcd
  4340 ;; This function uses a non-reentrant model
  4341 ;;
  4342                           
  4343                           	psect	text20
  4344  0026EE                     __ptext20:
  4345                           	opt stack 0
  4346  0026EE                     _dados:
  4347                           	opt stack 26
  4348                           
  4349                           ;incstack = 0
  4350                           ;dados@chr stored from wreg
  4351  0026EE  6E18               	movwf	dados@chr,c
  4352                           
  4353                           ;LCD8.h: 51: RD1 = 0;
  4354  0026F0  9283               	bcf	3971,1,c	;volatile
  4355                           
  4356                           ;LCD8.h: 52: RD0 = rw;
  4357  0026F2  B015               	btfsc	dados@rw,0,c
  4358  0026F4  D002               	bra	u1735
  4359  0026F6  9083               	bcf	3971,0,c	;volatile
  4360  0026F8  D001               	bra	u1736
  4361  0026FA                     u1735:
  4362  0026FA  8083               	bsf	3971,0,c	;volatile
  4363  0026FC                     u1736:
  4364                           
  4365                           ;LCD8.h: 54: PORTB=chr;
  4366  0026FC  C018  FF81         	movff	dados@chr,3969	;volatile
  4367                           
  4368                           ;LCD8.h: 56: RD1 = 1;
  4369  002700  8283               	bsf	3971,1,c	;volatile
  4370                           
  4371                           ;LCD8.h: 57: _delay((unsigned long)((5)*(48000000/4000.0)));
  4372  002702  0E4E               	movlw	78
  4373  002704  6E17               	movwf	??_dados& (0+255),c
  4374  002706  0EEB               	movlw	235
  4375  002708                     u3447:
  4376  002708  2EE8               	decfsz	wreg,f,c
  4377  00270A  D7FE               	goto	u3447
  4378  00270C  2E17               	decfsz	??_dados& (0+255),f,c
  4379  00270E  D7FC               	goto	u3447
  4380  002710  F000               	nop	
  4381                           
  4382                           ;LCD8.h: 58: RD1 = 0;
  4383  002712  9283               	bcf	3971,1,c	;volatile
  4384                           
  4385                           ;LCD8.h: 59: RD0 =0;
  4386  002714  9083               	bcf	3971,0,c	;volatile
  4387  002716  0012               	return		;funcret
  4388  002718                     __end_of_dados:
  4389                           	opt stack 0
  4390                           tblptru	equ	0xFF8
  4391                           tblptrh	equ	0xFF7
  4392                           tblptrl	equ	0xFF6
  4393                           tablat	equ	0xFF5
  4394                           prodh	equ	0xFF4
  4395                           prodl	equ	0xFF3
  4396                           intcon	equ	0xFF2
  4397                           postinc0	equ	0xFEE
  4398                           wreg	equ	0xFE8
  4399                           indf2	equ	0xFDF
  4400                           postinc2	equ	0xFDE
  4401                           postdec2	equ	0xFDD
  4402                           fsr2h	equ	0xFDA
  4403                           fsr2l	equ	0xFD9
  4404                           status	equ	0xFD8
  4405                           
  4406 ;; *************** function _atoi *****************
  4407 ;; Defined at:
  4408 ;;		line 5 in file "/opt/microchip/xc8/v1.34/sources/common/atoi.c"
  4409 ;; Parameters:    Size  Location     Type
  4410 ;;  s               2   26[COMRAM] PTR const unsigned char 
  4411 ;;		 -> rx1(4), 
  4412 ;; Auto vars:     Size  Location     Type
  4413 ;;  a               2   31[COMRAM] int 
  4414 ;;  sign            1   30[COMRAM] unsigned char 
  4415 ;; Return value:  Size  Location     Type
  4416 ;;                  2   26[COMRAM] int 
  4417 ;; Registers used:
  4418 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  4419 ;; Tracked objects:
  4420 ;;		On entry : 0/0
  4421 ;;		On exit  : 0/0
  4422 ;;		Unchanged: 0/0
  4423 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4424 ;;      Params:         2       0       0       0       0       0       0       0       0
  4425 ;;      Locals:         3       0       0       0       0       0       0       0       0
  4426 ;;      Temps:          2       0       0       0       0       0       0       0       0
  4427 ;;      Totals:         7       0       0       0       0       0       0       0       0
  4428 ;;Total ram usage:        7 bytes
  4429 ;; Hardware stack levels used:    1
  4430 ;; Hardware stack levels required when called:    4
  4431 ;; This function calls:
  4432 ;;		___wmul
  4433 ;;		_isdigit
  4434 ;; This function is called by:
  4435 ;;		_main
  4436 ;; This function uses a non-reentrant model
  4437 ;;
  4438                           
  4439                           	psect	text21
  4440  001D9A                     __ptext21:
  4441                           	opt stack 0
  4442  001D9A                     _atoi:
  4443                           	opt stack 26
  4444                           
  4445                           ;incstack = 0
  4446  001D9A  D003               	goto	l3150
  4447  001D9C                     l3148:
  4448  001D9C  4A1B               	infsnz	atoi@s,f,c
  4449  001D9E  2A1C               	incf	atoi@s+1,f,c
  4450  001DA0  D000               	goto	l3150
  4451  001DA2                     l3150:
  4452  001DA2  C01B  FFD9         	movff	atoi@s,fsr2l
  4453  001DA6  C01C  FFDA         	movff	atoi@s+1,fsr2h
  4454  001DAA  0E20               	movlw	32
  4455  001DAC  18DE               	xorwf	postinc2,w,c
  4456  001DAE  B4D8               	btfsc	status,2,c
  4457  001DB0  D7F5               	goto	l3148
  4458  001DB2  C01B  FFD9         	movff	atoi@s,fsr2l
  4459  001DB6  C01C  FFDA         	movff	atoi@s+1,fsr2h
  4460  001DBA  0E09               	movlw	9
  4461  001DBC  18DE               	xorwf	postinc2,w,c
  4462  001DBE  B4D8               	btfsc	status,2,c
  4463  001DC0  D7ED               	goto	l3148
  4464  001DC2  0E00               	movlw	0
  4465  001DC4  6E21               	movwf	atoi@a+1,c
  4466  001DC6  0E00               	movlw	0
  4467  001DC8  6E20               	movwf	atoi@a,c
  4468  001DCA  0E00               	movlw	0
  4469  001DCC  6E1F               	movwf	atoi@sign,c
  4470  001DCE  C01B  FFD9         	movff	atoi@s,fsr2l
  4471  001DD2  C01C  FFDA         	movff	atoi@s+1,fsr2h
  4472  001DD6  0E2D               	movlw	45
  4473  001DD8  18DE               	xorwf	postinc2,w,c
  4474  001DDA  A4D8               	btfss	status,2,c
  4475  001DDC  D002               	goto	l3160
  4476  001DDE  2A1F               	incf	atoi@sign,f,c
  4477  001DE0  D025               	goto	l3166
  4478  001DE2                     l3160:
  4479  001DE2  C01B  FFD9         	movff	atoi@s,fsr2l
  4480  001DE6  C01C  FFDA         	movff	atoi@s+1,fsr2h
  4481  001DEA  0E2B               	movlw	43
  4482  001DEC  18DE               	xorwf	postinc2,w,c
  4483  001DEE  A4D8               	btfss	status,2,c
  4484  001DF0  D020               	goto	l3168
  4485  001DF2  D01C               	goto	l3166
  4486  001DF4  D01E               	goto	l3168
  4487  001DF6                     l3164:
  4488  001DF6  C020  F015         	movff	atoi@a,___wmul@multiplier
  4489  001DFA  C021  F016         	movff	atoi@a+1,___wmul@multiplier+1
  4490  001DFE  0E00               	movlw	0
  4491  001E00  6E18               	movwf	___wmul@multiplicand+1,c
  4492  001E02  0E0A               	movlw	10
  4493  001E04  6E17               	movwf	___wmul@multiplicand,c
  4494  001E06  EC8C  F013         	call	___wmul	;wreg free
  4495  001E0A  C01B  FFD9         	movff	atoi@s,fsr2l
  4496  001E0E  C01C  FFDA         	movff	atoi@s+1,fsr2h
  4497  001E12  50DF               	movf	indf2,w,c
  4498  001E14  6E1D               	movwf	??_atoi& (0+255),c
  4499  001E16  6A1E               	clrf	(??_atoi+1)& (0+255),c
  4500  001E18  5015               	movf	?___wmul,w,c
  4501  001E1A  261D               	addwf	??_atoi,f,c
  4502  001E1C  5016               	movf	?___wmul+1,w,c
  4503  001E1E  221E               	addwfc	??_atoi+1,f,c
  4504  001E20  0ED0               	movlw	208
  4505  001E22  241D               	addwf	??_atoi,w,c
  4506  001E24  6E20               	movwf	atoi@a,c
  4507  001E26  0EFF               	movlw	255
  4508  001E28  201E               	addwfc	??_atoi+1,w,c
  4509  001E2A  6E21               	movwf	atoi@a+1,c
  4510  001E2C                     l3166:
  4511  001E2C  4A1B               	infsnz	atoi@s,f,c
  4512  001E2E  2A1C               	incf	atoi@s+1,f,c
  4513  001E30  D000               	goto	l3168
  4514  001E32                     l3168:
  4515  001E32  C01B  FFD9         	movff	atoi@s,fsr2l
  4516  001E36  C01C  FFDA         	movff	atoi@s+1,fsr2h
  4517  001E3A  50DF               	movf	indf2,w,c
  4518  001E3C  ECC4  F013         	call	_isdigit
  4519  001E40  B0D8               	btfsc	status,0,c
  4520  001E42  D7D9               	goto	l3164
  4521  001E44  501F               	movf	atoi@sign,w,c
  4522  001E46  B4D8               	btfsc	status,2,c
  4523  001E48  D00D               	goto	l515
  4524  001E4A  C020  F01D         	movff	atoi@a,??_atoi
  4525  001E4E  C021  F01E         	movff	atoi@a+1,??_atoi+1
  4526  001E52  1E1D               	comf	??_atoi,f,c
  4527  001E54  1E1E               	comf	??_atoi+1,f,c
  4528  001E56  4A1D               	infsnz	??_atoi,f,c
  4529  001E58  2A1E               	incf	??_atoi+1,f,c
  4530  001E5A  C01D  F01B         	movff	??_atoi,?_atoi
  4531  001E5E  C01E  F01C         	movff	??_atoi+1,?_atoi+1
  4532  001E62  D004               	goto	l516
  4533  001E64                     l515:
  4534  001E64  C020  F01B         	movff	atoi@a,?_atoi
  4535  001E68  C021  F01C         	movff	atoi@a+1,?_atoi+1
  4536  001E6C                     l516:
  4537  001E6C  0012               	return		;funcret
  4538  001E6E                     __end_of_atoi:
  4539                           	opt stack 0
  4540                           tblptru	equ	0xFF8
  4541                           tblptrh	equ	0xFF7
  4542                           tblptrl	equ	0xFF6
  4543                           tablat	equ	0xFF5
  4544                           prodh	equ	0xFF4
  4545                           prodl	equ	0xFF3
  4546                           intcon	equ	0xFF2
  4547                           postinc0	equ	0xFEE
  4548                           wreg	equ	0xFE8
  4549                           indf2	equ	0xFDF
  4550                           postinc2	equ	0xFDE
  4551                           postdec2	equ	0xFDD
  4552                           fsr2h	equ	0xFDA
  4553                           fsr2l	equ	0xFD9
  4554                           status	equ	0xFD8
  4555                           
  4556 ;; *************** function _isdigit *****************
  4557 ;; Defined at:
  4558 ;;		line 8 in file "/opt/microchip/xc8/v1.34/sources/common/isdigit.c"
  4559 ;; Parameters:    Size  Location     Type
  4560 ;;  c               1    wreg     unsigned char 
  4561 ;; Auto vars:     Size  Location     Type
  4562 ;;  c               1   22[COMRAM] unsigned char 
  4563 ;; Return value:  Size  Location     Type
  4564 ;;		None               void
  4565 ;; Registers used:
  4566 ;;		wreg, status,2, status,0
  4567 ;; Tracked objects:
  4568 ;;		On entry : 0/0
  4569 ;;		On exit  : 0/0
  4570 ;;		Unchanged: 0/0
  4571 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4572 ;;      Params:         0       0       0       0       0       0       0       0       0
  4573 ;;      Locals:         2       0       0       0       0       0       0       0       0
  4574 ;;      Temps:          1       0       0       0       0       0       0       0       0
  4575 ;;      Totals:         3       0       0       0       0       0       0       0       0
  4576 ;;Total ram usage:        3 bytes
  4577 ;; Hardware stack levels used:    1
  4578 ;; Hardware stack levels required when called:    3
  4579 ;; This function calls:
  4580 ;;		Nothing
  4581 ;; This function is called by:
  4582 ;;		_sprintf
  4583 ;;		_atoi
  4584 ;; This function uses a non-reentrant model
  4585 ;;
  4586                           
  4587                           	psect	text22
  4588  002788                     __ptext22:
  4589                           	opt stack 0
  4590  002788                     _isdigit:
  4591                           	opt stack 25
  4592                           
  4593                           ;incstack = 0
  4594                           ;isdigit@c stored from wreg
  4595  002788  6E17               	movwf	isdigit@c,c
  4596  00278A  0E00               	movlw	0
  4597  00278C  6E16               	movwf	_isdigit$1735,c
  4598  00278E  0E3A               	movlw	58
  4599  002790  6017               	cpfslt	isdigit@c,c
  4600  002792  D006               	goto	l2800
  4601  002794  0E2F               	movlw	47
  4602  002796  6417               	cpfsgt	isdigit@c,c
  4603  002798  D003               	goto	l2800
  4604  00279A  0E01               	movlw	1
  4605  00279C  6E16               	movwf	_isdigit$1735,c
  4606  00279E  D000               	goto	l2800
  4607  0027A0                     l2800:
  4608  0027A0  C016  F015         	movff	_isdigit$1735,??_isdigit
  4609  0027A4  3015               	rrcf	??_isdigit,w,c
  4610  0027A6  D000               	goto	l787
  4611  0027A8                     l787:
  4612  0027A8  0012               	return		;funcret
  4613  0027AA                     __end_of_isdigit:
  4614                           	opt stack 0
  4615                           tblptru	equ	0xFF8
  4616                           tblptrh	equ	0xFF7
  4617                           tblptrl	equ	0xFF6
  4618                           tablat	equ	0xFF5
  4619                           prodh	equ	0xFF4
  4620                           prodl	equ	0xFF3
  4621                           intcon	equ	0xFF2
  4622                           postinc0	equ	0xFEE
  4623                           wreg	equ	0xFE8
  4624                           indf2	equ	0xFDF
  4625                           postinc2	equ	0xFDE
  4626                           postdec2	equ	0xFDD
  4627                           fsr2h	equ	0xFDA
  4628                           fsr2l	equ	0xFD9
  4629                           status	equ	0xFD8
  4630                           
  4631 ;; *************** function ___wmul *****************
  4632 ;; Defined at:
  4633 ;;		line 15 in file "/opt/microchip/xc8/v1.34/sources/common/Umul16.c"
  4634 ;; Parameters:    Size  Location     Type
  4635 ;;  multiplier      2   20[COMRAM] unsigned int 
  4636 ;;  multiplicand    2   22[COMRAM] unsigned int 
  4637 ;; Auto vars:     Size  Location     Type
  4638 ;;  product         2   24[COMRAM] unsigned int 
  4639 ;; Return value:  Size  Location     Type
  4640 ;;                  2   20[COMRAM] unsigned int 
  4641 ;; Registers used:
  4642 ;;		wreg, status,2, status,0, prodl, prodh
  4643 ;; Tracked objects:
  4644 ;;		On entry : 0/0
  4645 ;;		On exit  : 0/0
  4646 ;;		Unchanged: 0/0
  4647 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4648 ;;      Params:         4       0       0       0       0       0       0       0       0
  4649 ;;      Locals:         2       0       0       0       0       0       0       0       0
  4650 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4651 ;;      Totals:         6       0       0       0       0       0       0       0       0
  4652 ;;Total ram usage:        6 bytes
  4653 ;; Hardware stack levels used:    1
  4654 ;; Hardware stack levels required when called:    3
  4655 ;; This function calls:
  4656 ;;		Nothing
  4657 ;; This function is called by:
  4658 ;;		_sprintf
  4659 ;;		_atoi
  4660 ;; This function uses a non-reentrant model
  4661 ;;
  4662                           
  4663                           	psect	text23
  4664  002718                     __ptext23:
  4665                           	opt stack 0
  4666  002718                     ___wmul:
  4667                           	opt stack 25
  4668                           
  4669                           ;incstack = 0
  4670  002718  5015               	movf	___wmul@multiplier,w,c
  4671  00271A  0217               	mulwf	___wmul@multiplicand,c
  4672  00271C  CFF3 F019          	movff	prodl,___wmul@product
  4673  002720  CFF4 F01A          	movff	prodh,___wmul@product+1
  4674  002724  5015               	movf	___wmul@multiplier,w,c
  4675  002726  0218               	mulwf	___wmul@multiplicand+1,c
  4676  002728  50F3               	movf	prodl,w,c
  4677  00272A  261A               	addwf	___wmul@product+1,f,c
  4678  00272C  5016               	movf	___wmul@multiplier+1,w,c
  4679  00272E  0217               	mulwf	___wmul@multiplicand,c
  4680  002730  50F3               	movf	prodl,w,c
  4681  002732  261A               	addwf	___wmul@product+1,f,c
  4682  002734  C019  F015         	movff	___wmul@product,?___wmul
  4683  002738  C01A  F016         	movff	___wmul@product+1,?___wmul+1
  4684  00273C  D000               	goto	l333
  4685  00273E                     l333:
  4686  00273E  0012               	return		;funcret
  4687  002740                     __end_of___wmul:
  4688                           	opt stack 0
  4689                           tblptru	equ	0xFF8
  4690                           tblptrh	equ	0xFF7
  4691                           tblptrl	equ	0xFF6
  4692                           tablat	equ	0xFF5
  4693                           prodh	equ	0xFF4
  4694                           prodl	equ	0xFF3
  4695                           intcon	equ	0xFF2
  4696                           postinc0	equ	0xFEE
  4697                           wreg	equ	0xFE8
  4698                           indf2	equ	0xFDF
  4699                           postinc2	equ	0xFDE
  4700                           postdec2	equ	0xFDD
  4701                           fsr2h	equ	0xFDA
  4702                           fsr2l	equ	0xFD9
  4703                           status	equ	0xFD8
  4704                           
  4705 ;; *************** function ___ftdiv *****************
  4706 ;; Defined at:
  4707 ;;		line 54 in file "/opt/microchip/xc8/v1.34/sources/common/ftdiv.c"
  4708 ;; Parameters:    Size  Location     Type
  4709 ;;  f1              3   43[COMRAM] float 
  4710 ;;  f2              3   46[COMRAM] float 
  4711 ;; Auto vars:     Size  Location     Type
  4712 ;;  f3              3    1[BANK0 ] float 
  4713 ;;  sign            1    5[BANK0 ] unsigned char 
  4714 ;;  exp             1    4[BANK0 ] unsigned char 
  4715 ;;  cntr            1    0[BANK0 ] unsigned char 
  4716 ;; Return value:  Size  Location     Type
  4717 ;;                  3   43[COMRAM] float 
  4718 ;; Registers used:
  4719 ;;		wreg, status,2, status,0, cstack
  4720 ;; Tracked objects:
  4721 ;;		On entry : 0/0
  4722 ;;		On exit  : 0/0
  4723 ;;		Unchanged: 0/0
  4724 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4725 ;;      Params:         6       0       0       0       0       0       0       0       0
  4726 ;;      Locals:         0       6       0       0       0       0       0       0       0
  4727 ;;      Temps:          3       0       0       0       0       0       0       0       0
  4728 ;;      Totals:         9       6       0       0       0       0       0       0       0
  4729 ;;Total ram usage:       15 bytes
  4730 ;; Hardware stack levels used:    1
  4731 ;; Hardware stack levels required when called:    4
  4732 ;; This function calls:
  4733 ;;		___ftpack
  4734 ;; This function is called by:
  4735 ;;		_main
  4736 ;; This function uses a non-reentrant model
  4737 ;;
  4738                           
  4739                           	psect	text24
  4740  001BA2                     __ptext24:
  4741                           	opt stack 0
  4742  001BA2                     ___ftdiv:
  4743                           	opt stack 26
  4744                           
  4745                           ;incstack = 0
  4746  001BA2  C02E  F032         	movff	___ftdiv@f1+2,??___ftdiv
  4747  001BA6  6A33               	clrf	(??___ftdiv+1)& (0+255),c
  4748  001BA8  6A34               	clrf	(??___ftdiv+2)& (0+255),c
  4749  001BAA  342D               	rlcf	___ftdiv@f1+1,w,c
  4750  001BAC  3632               	rlcf	??___ftdiv& (0+255),f,c
  4751  001BAE  E301               	bnc	u3341
  4752  001BB0  8033               	bsf	(??___ftdiv+1)& (0+255),0,c
  4753  001BB2                     u3341:
  4754  001BB2  5032               	movf	??___ftdiv,w,c
  4755  001BB4  0100               	movlb	0	; () banked
  4756  001BB6  6F64               	movwf	___ftdiv@exp& (0+255),b
  4757  001BB8  0100               	movlb	0	; () banked
  4758  001BBA  5164               	movf	___ftdiv@exp& (0+255),w,b
  4759  001BBC  A4D8               	btfss	status,2,c
  4760  001BBE  D002               	goto	l3212
  4761  001BC0  D010               	goto	l3214
  4762                           
  4763                           ; BSR set to: 0
  4764                           
  4765                           ; BSR set to: 0
  4766  001BC2  D06E               	goto	l728
  4767  001BC4                     l3212:
  4768                           
  4769                           ; BSR set to: 0
  4770  001BC4  C031  F032         	movff	___ftdiv@f2+2,??___ftdiv
  4771  001BC8  6A33               	clrf	(??___ftdiv+1)& (0+255),c
  4772  001BCA  6A34               	clrf	(??___ftdiv+2)& (0+255),c
  4773  001BCC  3430               	rlcf	___ftdiv@f2+1,w,c
  4774  001BCE  3632               	rlcf	??___ftdiv& (0+255),f,c
  4775  001BD0  E301               	bnc	u3361
  4776  001BD2  8033               	bsf	(??___ftdiv+1)& (0+255),0,c
  4777  001BD4                     u3361:
  4778  001BD4  5032               	movf	??___ftdiv,w,c
  4779  001BD6  0100               	movlb	0	; () banked
  4780  001BD8  6F65               	movwf	___ftdiv@sign& (0+255),b
  4781  001BDA  0100               	movlb	0	; () banked
  4782  001BDC  5165               	movf	___ftdiv@sign& (0+255),w,b
  4783  001BDE  A4D8               	btfss	status,2,c
  4784  001BE0  D007               	goto	l3218
  4785  001BE2                     l3214:
  4786                           
  4787                           ; BSR set to: 0
  4788  001BE2  0E00               	movlw	0
  4789  001BE4  6E2C               	movwf	?___ftdiv,c
  4790  001BE6  0E00               	movlw	0
  4791  001BE8  6E2D               	movwf	?___ftdiv+1,c
  4792  001BEA  0E00               	movlw	0
  4793  001BEC  6E2E               	movwf	?___ftdiv+2,c
  4794                           
  4795                           ; BSR set to: 0
  4796  001BEE  D058               	goto	l728
  4797  001BF0                     l3218:
  4798                           
  4799                           ; BSR set to: 0
  4800  001BF0  0E00               	movlw	0
  4801  001BF2  0100               	movlb	0	; () banked
  4802  001BF4  6F61               	movwf	___ftdiv@f3& (0+255),b
  4803  001BF6  0E00               	movlw	0
  4804  001BF8  0100               	movlb	0	; () banked
  4805  001BFA  6F62               	movwf	(___ftdiv@f3+1)& (0+255),b
  4806  001BFC  0E00               	movlw	0
  4807  001BFE  0100               	movlb	0	; () banked
  4808  001C00  6F63               	movwf	(___ftdiv@f3+2)& (0+255),b
  4809                           
  4810                           ; BSR set to: 0
  4811  001C02  0100               	movlb	0	; () banked
  4812  001C04  5165               	movf	___ftdiv@sign& (0+255),w,b
  4813  001C06  0F89               	addlw	137
  4814  001C08  0100               	movlb	0	; () banked
  4815  001C0A  5F64               	subwf	___ftdiv@exp& (0+255),f,b
  4816                           
  4817                           ; BSR set to: 0
  4818  001C0C  C02E  F065         	movff	___ftdiv@f1+2,___ftdiv@sign
  4819                           
  4820                           ; BSR set to: 0
  4821  001C10  5031               	movf	___ftdiv@f2+2,w,c
  4822  001C12  0100               	movlb	0	; () banked
  4823  001C14  1B65               	xorwf	___ftdiv@sign& (0+255),f,b
  4824                           
  4825                           ; BSR set to: 0
  4826  001C16  0E80               	movlw	128
  4827  001C18  0100               	movlb	0	; () banked
  4828  001C1A  1765               	andwf	___ftdiv@sign& (0+255),f,b
  4829                           
  4830                           ; BSR set to: 0
  4831  001C1C  8E2D               	bsf	___ftdiv@f1+1,7,c
  4832                           
  4833                           ; BSR set to: 0
  4834  001C1E  0EFF               	movlw	255
  4835  001C20  162C               	andwf	___ftdiv@f1,f,c
  4836  001C22  0EFF               	movlw	255
  4837  001C24  162D               	andwf	___ftdiv@f1+1,f,c
  4838  001C26  0E00               	movlw	0
  4839  001C28  162E               	andwf	___ftdiv@f1+2,f,c
  4840                           
  4841                           ; BSR set to: 0
  4842  001C2A  8E30               	bsf	___ftdiv@f2+1,7,c
  4843                           
  4844                           ; BSR set to: 0
  4845  001C2C  0EFF               	movlw	255
  4846  001C2E  162F               	andwf	___ftdiv@f2,f,c
  4847  001C30  0EFF               	movlw	255
  4848  001C32  1630               	andwf	___ftdiv@f2+1,f,c
  4849  001C34  0E00               	movlw	0
  4850  001C36  1631               	andwf	___ftdiv@f2+2,f,c
  4851                           
  4852                           ; BSR set to: 0
  4853  001C38  0E18               	movlw	24
  4854  001C3A  0100               	movlb	0	; () banked
  4855  001C3C  6F60               	movwf	___ftdiv@cntr& (0+255),b
  4856  001C3E  D000               	goto	l3238
  4857  001C40                     l3238:
  4858                           
  4859                           ; BSR set to: 0
  4860  001C40  0100               	movlb	0	; () banked
  4861  001C42  90D8               	bcf	status,0,c
  4862  001C44  3761               	rlcf	___ftdiv@f3& (0+255),f,b
  4863  001C46  3762               	rlcf	(___ftdiv@f3+1)& (0+255),f,b
  4864  001C48  3763               	rlcf	(___ftdiv@f3+2)& (0+255),f,b
  4865                           
  4866                           ; BSR set to: 0
  4867  001C4A  502F               	movf	___ftdiv@f2,w,c
  4868  001C4C  5C2C               	subwf	___ftdiv@f1,w,c
  4869  001C4E  5030               	movf	___ftdiv@f2+1,w,c
  4870  001C50  582D               	subwfb	___ftdiv@f1+1,w,c
  4871  001C52  5031               	movf	___ftdiv@f2+2,w,c
  4872  001C54  582E               	subwfb	___ftdiv@f1+2,w,c
  4873  001C56  A0D8               	btfss	status,0,c
  4874  001C58  D008               	goto	l731
  4875                           
  4876                           ; BSR set to: 0
  4877  001C5A  502F               	movf	___ftdiv@f2,w,c
  4878  001C5C  5E2C               	subwf	___ftdiv@f1,f,c
  4879  001C5E  5030               	movf	___ftdiv@f2+1,w,c
  4880  001C60  5A2D               	subwfb	___ftdiv@f1+1,f,c
  4881  001C62  5031               	movf	___ftdiv@f2+2,w,c
  4882  001C64  5A2E               	subwfb	___ftdiv@f1+2,f,c
  4883                           
  4884                           ; BSR set to: 0
  4885  001C66  0100               	movlb	0	; () banked
  4886  001C68  8161               	bsf	___ftdiv@f3& (0+255),0,b
  4887  001C6A                     l731:
  4888                           
  4889                           ; BSR set to: 0
  4890  001C6A  90D8               	bcf	status,0,c
  4891  001C6C  362C               	rlcf	___ftdiv@f1,f,c
  4892  001C6E  362D               	rlcf	___ftdiv@f1+1,f,c
  4893  001C70  362E               	rlcf	___ftdiv@f1+2,f,c
  4894                           
  4895                           ; BSR set to: 0
  4896  001C72  0100               	movlb	0	; () banked
  4897  001C74  2F60               	decfsz	___ftdiv@cntr& (0+255),f,b
  4898  001C76  D7E4               	goto	l3238
  4899  001C78  D000               	goto	l3248
  4900  001C7A                     l3248:
  4901                           
  4902                           ; BSR set to: 0
  4903  001C7A  C061  F015         	movff	___ftdiv@f3,___ftpack@arg
  4904  001C7E  C062  F016         	movff	___ftdiv@f3+1,___ftpack@arg+1
  4905  001C82  C063  F017         	movff	___ftdiv@f3+2,___ftpack@arg+2
  4906  001C86  C064  F018         	movff	___ftdiv@exp,___ftpack@exp
  4907  001C8A  C065  F019         	movff	___ftdiv@sign,___ftpack@sign
  4908  001C8E  EC37  F00F         	call	___ftpack	;wreg free
  4909  001C92  C015  F02C         	movff	?___ftpack,?___ftdiv
  4910  001C96  C016  F02D         	movff	?___ftpack+1,?___ftdiv+1
  4911  001C9A  C017  F02E         	movff	?___ftpack+2,?___ftdiv+2
  4912  001C9E  D000               	goto	l728
  4913  001CA0                     l728:
  4914  001CA0  0012               	return		;funcret
  4915  001CA2                     __end_of___ftdiv:
  4916                           	opt stack 0
  4917                           tblptru	equ	0xFF8
  4918                           tblptrh	equ	0xFF7
  4919                           tblptrl	equ	0xFF6
  4920                           tablat	equ	0xFF5
  4921                           prodh	equ	0xFF4
  4922                           prodl	equ	0xFF3
  4923                           intcon	equ	0xFF2
  4924                           postinc0	equ	0xFEE
  4925                           wreg	equ	0xFE8
  4926                           indf2	equ	0xFDF
  4927                           postinc2	equ	0xFDE
  4928                           postdec2	equ	0xFDD
  4929                           fsr2h	equ	0xFDA
  4930                           fsr2l	equ	0xFD9
  4931                           status	equ	0xFD8
  4932                           
  4933 ;; *************** function ___awtoft *****************
  4934 ;; Defined at:
  4935 ;;		line 32 in file "/opt/microchip/xc8/v1.34/sources/common/awtoft.c"
  4936 ;; Parameters:    Size  Location     Type
  4937 ;;  c               2   33[COMRAM] int 
  4938 ;; Auto vars:     Size  Location     Type
  4939 ;;  sign            1   36[COMRAM] unsigned char 
  4940 ;; Return value:  Size  Location     Type
  4941 ;;                  3   33[COMRAM] float 
  4942 ;; Registers used:
  4943 ;;		wreg, status,2, status,0, cstack
  4944 ;; Tracked objects:
  4945 ;;		On entry : 0/0
  4946 ;;		On exit  : 0/0
  4947 ;;		Unchanged: 0/0
  4948 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4949 ;;      Params:         3       0       0       0       0       0       0       0       0
  4950 ;;      Locals:         1       0       0       0       0       0       0       0       0
  4951 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4952 ;;      Totals:         4       0       0       0       0       0       0       0       0
  4953 ;;Total ram usage:        4 bytes
  4954 ;; Hardware stack levels used:    1
  4955 ;; Hardware stack levels required when called:    4
  4956 ;; This function calls:
  4957 ;;		___ftpack
  4958 ;; This function is called by:
  4959 ;;		_main
  4960 ;; This function uses a non-reentrant model
  4961 ;;
  4962                           
  4963                           	psect	text25
  4964  002616                     __ptext25:
  4965                           	opt stack 0
  4966  002616                     ___awtoft:
  4967                           	opt stack 26
  4968                           
  4969                           ;incstack = 0
  4970  002616  0E00               	movlw	0
  4971  002618  6E25               	movwf	___awtoft@sign,c
  4972  00261A  AE23               	btfss	___awtoft@c+1,7,c
  4973  00261C  D007               	goto	l3260
  4974  00261E  6C22               	negf	___awtoft@c,c
  4975  002620  1E23               	comf	___awtoft@c+1,f,c
  4976  002622  B0D8               	btfsc	status,0,c
  4977  002624  2A23               	incf	___awtoft@c+1,f,c
  4978  002626  0E01               	movlw	1
  4979  002628  6E25               	movwf	___awtoft@sign,c
  4980  00262A  D000               	goto	l3260
  4981  00262C                     l3260:
  4982  00262C  C022  F015         	movff	___awtoft@c,___ftpack@arg
  4983  002630  C023  F016         	movff	___awtoft@c+1,___ftpack@arg+1
  4984  002634  6A17               	clrf	___ftpack@arg+2,c
  4985  002636  0E8E               	movlw	142
  4986  002638  6E18               	movwf	___ftpack@exp,c
  4987  00263A  C025  F019         	movff	___awtoft@sign,___ftpack@sign
  4988  00263E  EC37  F00F         	call	___ftpack	;wreg free
  4989  002642  C015  F022         	movff	?___ftpack,?___awtoft
  4990  002646  C016  F023         	movff	?___ftpack+1,?___awtoft+1
  4991  00264A  C017  F024         	movff	?___ftpack+2,?___awtoft+2
  4992  00264E  D000               	goto	l566
  4993  002650                     l566:
  4994  002650  0012               	return		;funcret
  4995  002652                     __end_of___awtoft:
  4996                           	opt stack 0
  4997                           tblptru	equ	0xFF8
  4998                           tblptrh	equ	0xFF7
  4999                           tblptrl	equ	0xFF6
  5000                           tablat	equ	0xFF5
  5001                           prodh	equ	0xFF4
  5002                           prodl	equ	0xFF3
  5003                           intcon	equ	0xFF2
  5004                           postinc0	equ	0xFEE
  5005                           wreg	equ	0xFE8
  5006                           indf2	equ	0xFDF
  5007                           postinc2	equ	0xFDE
  5008                           postdec2	equ	0xFDD
  5009                           fsr2h	equ	0xFDA
  5010                           fsr2l	equ	0xFD9
  5011                           status	equ	0xFD8
  5012                           
  5013 ;; *************** function ___ftpack *****************
  5014 ;; Defined at:
  5015 ;;		line 62 in file "/opt/microchip/xc8/v1.34/sources/common/float.c"
  5016 ;; Parameters:    Size  Location     Type
  5017 ;;  arg             3   20[COMRAM] unsigned um
  5018 ;;  exp             1   23[COMRAM] unsigned char 
  5019 ;;  sign            1   24[COMRAM] unsigned char 
  5020 ;; Auto vars:     Size  Location     Type
  5021 ;;		None
  5022 ;; Return value:  Size  Location     Type
  5023 ;;                  3   20[COMRAM] float 
  5024 ;; Registers used:
  5025 ;;		wreg, status,2, status,0
  5026 ;; Tracked objects:
  5027 ;;		On entry : 0/0
  5028 ;;		On exit  : 0/0
  5029 ;;		Unchanged: 0/0
  5030 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5031 ;;      Params:         5       0       0       0       0       0       0       0       0
  5032 ;;      Locals:         0       0       0       0       0       0       0       0       0
  5033 ;;      Temps:          3       0       0       0       0       0       0       0       0
  5034 ;;      Totals:         8       0       0       0       0       0       0       0       0
  5035 ;;Total ram usage:        8 bytes
  5036 ;; Hardware stack levels used:    1
  5037 ;; Hardware stack levels required when called:    3
  5038 ;; This function calls:
  5039 ;;		Nothing
  5040 ;; This function is called by:
  5041 ;;		___awtoft
  5042 ;;		___ftadd
  5043 ;;		___ftdiv
  5044 ;;		___ftmul
  5045 ;;		___lltoft
  5046 ;; This function uses a non-reentrant model
  5047 ;;
  5048                           
  5049                           	psect	text26
  5050  001E6E                     __ptext26:
  5051                           	opt stack 0
  5052  001E6E                     ___ftpack:
  5053                           	opt stack 25
  5054                           
  5055                           ;incstack = 0
  5056  001E6E  5018               	movf	___ftpack@exp,w,c
  5057  001E70  B4D8               	btfsc	status,2,c
  5058  001E72  D005               	goto	l2760
  5059  001E74  5015               	movf	___ftpack@arg,w,c
  5060  001E76  1016               	iorwf	___ftpack@arg+1,w,c
  5061  001E78  1017               	iorwf	___ftpack@arg+2,w,c
  5062  001E7A  A4D8               	btfss	status,2,c
  5063  001E7C  D00E               	goto	l2766
  5064  001E7E                     l2760:
  5065  001E7E  0E00               	movlw	0
  5066  001E80  6E15               	movwf	?___ftpack,c
  5067  001E82  0E00               	movlw	0
  5068  001E84  6E16               	movwf	?___ftpack+1,c
  5069  001E86  0E00               	movlw	0
  5070  001E88  6E17               	movwf	?___ftpack+2,c
  5071  001E8A  D053               	goto	l656
  5072  001E8C  D006               	goto	l2766
  5073  001E8E                     l2764:
  5074  001E8E  2A18               	incf	___ftpack@exp,f,c
  5075  001E90  90D8               	bcf	status,0,c
  5076  001E92  3217               	rrcf	___ftpack@arg+2,f,c
  5077  001E94  3216               	rrcf	___ftpack@arg+1,f,c
  5078  001E96  3215               	rrcf	___ftpack@arg,f,c
  5079  001E98  D000               	goto	l2766
  5080  001E9A                     l2766:
  5081  001E9A  0E00               	movlw	0
  5082  001E9C  1415               	andwf	___ftpack@arg,w,c
  5083  001E9E  6E1A               	movwf	??___ftpack& (0+255),c
  5084  001EA0  0E00               	movlw	0
  5085  001EA2  1416               	andwf	___ftpack@arg+1,w,c
  5086  001EA4  6E1B               	movwf	(??___ftpack+1)& (0+255),c
  5087  001EA6  0EFE               	movlw	254
  5088  001EA8  1417               	andwf	___ftpack@arg+2,w,c
  5089  001EAA  6E1C               	movwf	(??___ftpack+2)& (0+255),c
  5090  001EAC  501A               	movf	??___ftpack,w,c
  5091  001EAE  101B               	iorwf	??___ftpack+1,w,c
  5092  001EB0  101C               	iorwf	??___ftpack+2,w,c
  5093  001EB2  B4D8               	btfsc	status,2,c
  5094  001EB4  D00E               	goto	l2772
  5095  001EB6  D7EB               	goto	l2764
  5096  001EB8  D00C               	goto	l2772
  5097  001EBA                     l2768:
  5098  001EBA  2A18               	incf	___ftpack@exp,f,c
  5099  001EBC  0E01               	movlw	1
  5100  001EBE  2615               	addwf	___ftpack@arg,f,c
  5101  001EC0  0E00               	movlw	0
  5102  001EC2  2216               	addwfc	___ftpack@arg+1,f,c
  5103  001EC4  0E00               	movlw	0
  5104  001EC6  2217               	addwfc	___ftpack@arg+2,f,c
  5105  001EC8  90D8               	bcf	status,0,c
  5106  001ECA  3217               	rrcf	___ftpack@arg+2,f,c
  5107  001ECC  3216               	rrcf	___ftpack@arg+1,f,c
  5108  001ECE  3215               	rrcf	___ftpack@arg,f,c
  5109  001ED0  D000               	goto	l2772
  5110  001ED2                     l2772:
  5111  001ED2  0E00               	movlw	0
  5112  001ED4  1415               	andwf	___ftpack@arg,w,c
  5113  001ED6  6E1A               	movwf	??___ftpack& (0+255),c
  5114  001ED8  0E00               	movlw	0
  5115  001EDA  1416               	andwf	___ftpack@arg+1,w,c
  5116  001EDC  6E1B               	movwf	(??___ftpack+1)& (0+255),c
  5117  001EDE  0EFF               	movlw	255
  5118  001EE0  1417               	andwf	___ftpack@arg+2,w,c
  5119  001EE2  6E1C               	movwf	(??___ftpack+2)& (0+255),c
  5120  001EE4  501A               	movf	??___ftpack,w,c
  5121  001EE6  101B               	iorwf	??___ftpack+1,w,c
  5122  001EE8  101C               	iorwf	??___ftpack+2,w,c
  5123  001EEA  B4D8               	btfsc	status,2,c
  5124  001EEC  D008               	goto	l2776
  5125  001EEE  D7E5               	goto	l2768
  5126  001EF0  D006               	goto	l2776
  5127  001EF2                     l2774:
  5128  001EF2  0618               	decf	___ftpack@exp,f,c
  5129  001EF4  90D8               	bcf	status,0,c
  5130  001EF6  3615               	rlcf	___ftpack@arg,f,c
  5131  001EF8  3616               	rlcf	___ftpack@arg+1,f,c
  5132  001EFA  3617               	rlcf	___ftpack@arg+2,f,c
  5133  001EFC  D000               	goto	l2776
  5134  001EFE                     l2776:
  5135  001EFE  BE16               	btfsc	___ftpack@arg+1,7,c
  5136  001F00  D004               	goto	l667
  5137  001F02  0E02               	movlw	2
  5138  001F04  6018               	cpfslt	___ftpack@exp,c
  5139  001F06  D7F5               	goto	l2774
  5140  001F08  D000               	goto	l667
  5141  001F0A                     l667:
  5142  001F0A  B018               	btfsc	___ftpack@exp,0,c
  5143  001F0C  D002               	goto	l2782
  5144  001F0E  9E16               	bcf	___ftpack@arg+1,7,c
  5145  001F10  D000               	goto	l2782
  5146  001F12                     l2782:
  5147  001F12  90D8               	bcf	status,0,c
  5148  001F14  3218               	rrcf	___ftpack@exp,f,c
  5149  001F16  5018               	movf	___ftpack@exp,w,c
  5150  001F18  1217               	iorwf	___ftpack@arg+2,f,c
  5151  001F1A  5019               	movf	___ftpack@sign,w,c
  5152  001F1C  B4D8               	btfsc	status,2,c
  5153  001F1E  D002               	goto	l2788
  5154  001F20  8E17               	bsf	___ftpack@arg+2,7,c
  5155  001F22  D000               	goto	l2788
  5156  001F24                     l2788:
  5157  001F24  C015  F015         	movff	___ftpack@arg,?___ftpack
  5158  001F28  C016  F016         	movff	___ftpack@arg+1,?___ftpack+1
  5159  001F2C  C017  F017         	movff	___ftpack@arg+2,?___ftpack+2
  5160  001F30  D000               	goto	l656
  5161  001F32                     l656:
  5162  001F32  0012               	return		;funcret
  5163  001F34                     __end_of___ftpack:
  5164                           	opt stack 0
  5165                           tblptru	equ	0xFF8
  5166                           tblptrh	equ	0xFF7
  5167                           tblptrl	equ	0xFF6
  5168                           tablat	equ	0xFF5
  5169                           prodh	equ	0xFF4
  5170                           prodl	equ	0xFF3
  5171                           intcon	equ	0xFF2
  5172                           postinc0	equ	0xFEE
  5173                           wreg	equ	0xFE8
  5174                           indf2	equ	0xFDF
  5175                           postinc2	equ	0xFDE
  5176                           postdec2	equ	0xFDD
  5177                           fsr2h	equ	0xFDA
  5178                           fsr2l	equ	0xFD9
  5179                           status	equ	0xFD8
  5180                           
  5181 ;; *************** function _SetDCPWM2 *****************
  5182 ;; Defined at:
  5183 ;;		line 7 in file "/opt/microchip/xc8/v1.34/sources/pic18/plib/PWM/pw2setdc.c"
  5184 ;; Parameters:    Size  Location     Type
  5185 ;;  dutycycle       2   52[COMRAM] unsigned int 
  5186 ;; Auto vars:     Size  Location     Type
  5187 ;;  DCycle          2    8[BANK0 ] struct PWMDC
  5188 ;; Return value:  Size  Location     Type
  5189 ;;		None               void
  5190 ;; Registers used:
  5191 ;;		wreg, status,2, status,0
  5192 ;; Tracked objects:
  5193 ;;		On entry : 0/0
  5194 ;;		On exit  : 0/0
  5195 ;;		Unchanged: 0/0
  5196 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5197 ;;      Params:         2       0       0       0       0       0       0       0       0
  5198 ;;      Locals:         0       2       0       0       0       0       0       0       0
  5199 ;;      Temps:          0       2       0       0       0       0       0       0       0
  5200 ;;      Totals:         2       4       0       0       0       0       0       0       0
  5201 ;;Total ram usage:        6 bytes
  5202 ;; Hardware stack levels used:    1
  5203 ;; Hardware stack levels required when called:    3
  5204 ;; This function calls:
  5205 ;;		Nothing
  5206 ;; This function is called by:
  5207 ;;		_main
  5208 ;; This function uses a non-reentrant model
  5209 ;;
  5210                           
  5211                           	psect	text27
  5212  002552                     __ptext27:
  5213                           	opt stack 0
  5214  002552                     _SetDCPWM2:
  5215                           	opt stack 27
  5216                           
  5217                           ;incstack = 0
  5218  002552  C035  F066         	movff	SetDCPWM2@dutycycle,??_SetDCPWM2
  5219  002556  C036  F067         	movff	SetDCPWM2@dutycycle+1,??_SetDCPWM2+1
  5220  00255A  0E06               	movlw	6
  5221  00255C                     u3255:
  5222  00255C  90D8               	bcf	status,0,c
  5223  00255E  0100               	movlb	0	; () banked
  5224  002560  3766               	rlcf	??_SetDCPWM2& (0+255),f,b
  5225  002562  3767               	rlcf	(??_SetDCPWM2+1)& (0+255),f,b
  5226  002564  2EE8               	decfsz	wreg,f,c
  5227  002566  D7FA               	goto	u3255
  5228  002568  C066  F068         	movff	??_SetDCPWM2,SetDCPWM2@DCycle
  5229  00256C  C067  F069         	movff	??_SetDCPWM2+1,SetDCPWM2@DCycle+1
  5230                           
  5231                           ; BSR set to: 0
  5232  002570  C069  FFBB         	movff	SetDCPWM2@DCycle+1,4027	;volatile
  5233  002574  C068  F066         	movff	SetDCPWM2@DCycle,??_SetDCPWM2
  5234  002578  0100               	movlb	0	; () banked
  5235  00257A  90D8               	bcf	status,0,c
  5236  00257C  3366               	rrcf	??_SetDCPWM2& (0+255),f,b
  5237  00257E  0100               	movlb	0	; () banked
  5238  002580  90D8               	bcf	status,0,c
  5239  002582  3366               	rrcf	??_SetDCPWM2& (0+255),f,b
  5240  002584  0E30               	movlw	48
  5241  002586  0100               	movlb	0	; () banked
  5242  002588  1766               	andwf	??_SetDCPWM2& (0+255),f,b
  5243  00258A  50BA               	movf	4026,w,c	;volatile
  5244  00258C  0BCF               	andlw	207
  5245  00258E  0100               	movlb	0	; () banked
  5246  002590  1166               	iorwf	??_SetDCPWM2& (0+255),w,b
  5247  002592  6EBA               	movwf	4026,c	;volatile
  5248                           
  5249                           ; BSR set to: 0
  5250  002594  0012               	return		;funcret
  5251  002596                     __end_of_SetDCPWM2:
  5252                           	opt stack 0
  5253                           tblptru	equ	0xFF8
  5254                           tblptrh	equ	0xFF7
  5255                           tblptrl	equ	0xFF6
  5256                           tablat	equ	0xFF5
  5257                           prodh	equ	0xFF4
  5258                           prodl	equ	0xFF3
  5259                           intcon	equ	0xFF2
  5260                           postinc0	equ	0xFEE
  5261                           wreg	equ	0xFE8
  5262                           indf2	equ	0xFDF
  5263                           postinc2	equ	0xFDE
  5264                           postdec2	equ	0xFDD
  5265                           fsr2h	equ	0xFDA
  5266                           fsr2l	equ	0xFD9
  5267                           status	equ	0xFD8
  5268                           
  5269 ;; *************** function _SetDCPWM1 *****************
  5270 ;; Defined at:
  5271 ;;		line 7 in file "/opt/microchip/xc8/v1.34/sources/pic18/plib/PWM/pw1setdc.c"
  5272 ;; Parameters:    Size  Location     Type
  5273 ;;  dutycycle       2   52[COMRAM] unsigned int 
  5274 ;; Auto vars:     Size  Location     Type
  5275 ;;  DCycle          2    8[BANK0 ] struct PWMDC
  5276 ;; Return value:  Size  Location     Type
  5277 ;;		None               void
  5278 ;; Registers used:
  5279 ;;		wreg, status,2, status,0
  5280 ;; Tracked objects:
  5281 ;;		On entry : 0/0
  5282 ;;		On exit  : 0/0
  5283 ;;		Unchanged: 0/0
  5284 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5285 ;;      Params:         2       0       0       0       0       0       0       0       0
  5286 ;;      Locals:         0       2       0       0       0       0       0       0       0
  5287 ;;      Temps:          0       2       0       0       0       0       0       0       0
  5288 ;;      Totals:         2       4       0       0       0       0       0       0       0
  5289 ;;Total ram usage:        6 bytes
  5290 ;; Hardware stack levels used:    1
  5291 ;; Hardware stack levels required when called:    3
  5292 ;; This function calls:
  5293 ;;		Nothing
  5294 ;; This function is called by:
  5295 ;;		_main
  5296 ;; This function uses a non-reentrant model
  5297 ;;
  5298                           
  5299                           	psect	text28
  5300  002596                     __ptext28:
  5301                           	opt stack 0
  5302  002596                     _SetDCPWM1:
  5303                           	opt stack 27
  5304                           
  5305                           ; BSR set to: 0
  5306                           ;incstack = 0
  5307  002596  C035  F066         	movff	SetDCPWM1@dutycycle,??_SetDCPWM1
  5308  00259A  C036  F067         	movff	SetDCPWM1@dutycycle+1,??_SetDCPWM1+1
  5309  00259E  0E06               	movlw	6
  5310  0025A0                     u3245:
  5311  0025A0  90D8               	bcf	status,0,c
  5312  0025A2  0100               	movlb	0	; () banked
  5313  0025A4  3766               	rlcf	??_SetDCPWM1& (0+255),f,b
  5314  0025A6  3767               	rlcf	(??_SetDCPWM1+1)& (0+255),f,b
  5315  0025A8  2EE8               	decfsz	wreg,f,c
  5316  0025AA  D7FA               	goto	u3245
  5317  0025AC  C066  F068         	movff	??_SetDCPWM1,SetDCPWM1@DCycle
  5318  0025B0  C067  F069         	movff	??_SetDCPWM1+1,SetDCPWM1@DCycle+1
  5319                           
  5320                           ; BSR set to: 0
  5321  0025B4  C069  FFBE         	movff	SetDCPWM1@DCycle+1,4030	;volatile
  5322  0025B8  C068  F066         	movff	SetDCPWM1@DCycle,??_SetDCPWM1
  5323  0025BC  0100               	movlb	0	; () banked
  5324  0025BE  90D8               	bcf	status,0,c
  5325  0025C0  3366               	rrcf	??_SetDCPWM1& (0+255),f,b
  5326  0025C2  0100               	movlb	0	; () banked
  5327  0025C4  90D8               	bcf	status,0,c
  5328  0025C6  3366               	rrcf	??_SetDCPWM1& (0+255),f,b
  5329  0025C8  0E30               	movlw	48
  5330  0025CA  0100               	movlb	0	; () banked
  5331  0025CC  1766               	andwf	??_SetDCPWM1& (0+255),f,b
  5332  0025CE  50BD               	movf	4029,w,c	;volatile
  5333  0025D0  0BCF               	andlw	207
  5334  0025D2  0100               	movlb	0	; () banked
  5335  0025D4  1166               	iorwf	??_SetDCPWM1& (0+255),w,b
  5336  0025D6  6EBD               	movwf	4029,c	;volatile
  5337                           
  5338                           ; BSR set to: 0
  5339  0025D8  0012               	return		;funcret
  5340  0025DA                     __end_of_SetDCPWM1:
  5341                           	opt stack 0
  5342                           tblptru	equ	0xFF8
  5343                           tblptrh	equ	0xFF7
  5344                           tblptrl	equ	0xFF6
  5345                           tablat	equ	0xFF5
  5346                           prodh	equ	0xFF4
  5347                           prodl	equ	0xFF3
  5348                           intcon	equ	0xFF2
  5349                           postinc0	equ	0xFEE
  5350                           wreg	equ	0xFE8
  5351                           indf2	equ	0xFDF
  5352                           postinc2	equ	0xFDE
  5353                           postdec2	equ	0xFDD
  5354                           fsr2h	equ	0xFDA
  5355                           fsr2l	equ	0xFD9
  5356                           status	equ	0xFD8
  5357                           
  5358 ;; *************** function _ReadADC *****************
  5359 ;; Defined at:
  5360 ;;		line 24 in file "/opt/microchip/xc8/v1.34/sources/pic18/plib/ADC/adcread.c"
  5361 ;; Parameters:    Size  Location     Type
  5362 ;;		None
  5363 ;; Auto vars:     Size  Location     Type
  5364 ;;		None
  5365 ;; Return value:  Size  Location     Type
  5366 ;;                  2   20[COMRAM] int 
  5367 ;; Registers used:
  5368 ;;		wreg, status,2
  5369 ;; Tracked objects:
  5370 ;;		On entry : 0/0
  5371 ;;		On exit  : 0/0
  5372 ;;		Unchanged: 0/0
  5373 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5374 ;;      Params:         2       0       0       0       0       0       0       0       0
  5375 ;;      Locals:         0       0       0       0       0       0       0       0       0
  5376 ;;      Temps:          2       0       0       0       0       0       0       0       0
  5377 ;;      Totals:         4       0       0       0       0       0       0       0       0
  5378 ;;Total ram usage:        4 bytes
  5379 ;; Hardware stack levels used:    1
  5380 ;; Hardware stack levels required when called:    3
  5381 ;; This function calls:
  5382 ;;		Nothing
  5383 ;; This function is called by:
  5384 ;;		_main
  5385 ;; This function uses a non-reentrant model
  5386 ;;
  5387                           
  5388                           	psect	text29
  5389  0027DA                     __ptext29:
  5390                           	opt stack 0
  5391  0027DA                     _ReadADC:
  5392                           	opt stack 27
  5393                           
  5394                           ; BSR set to: 0
  5395                           ;incstack = 0
  5396  0027DA  50C4               	movf	4036,w,c	;volatile
  5397  0027DC  6E17               	movwf	??_ReadADC& (0+255),c
  5398  0027DE  50C3               	movf	4035,w,c	;volatile
  5399  0027E0  6E15               	movwf	?_ReadADC,c
  5400  0027E2  C017  F016         	movff	??_ReadADC,?_ReadADC+1
  5401  0027E6  D000               	goto	l226
  5402  0027E8                     l226:
  5403  0027E8  0012               	return		;funcret
  5404  0027EA                     __end_of_ReadADC:
  5405                           	opt stack 0
  5406                           tblptru	equ	0xFF8
  5407                           tblptrh	equ	0xFF7
  5408                           tblptrl	equ	0xFF6
  5409                           tablat	equ	0xFF5
  5410                           prodh	equ	0xFF4
  5411                           prodl	equ	0xFF3
  5412                           intcon	equ	0xFF2
  5413                           postinc0	equ	0xFEE
  5414                           wreg	equ	0xFE8
  5415                           indf2	equ	0xFDF
  5416                           postinc2	equ	0xFDE
  5417                           postdec2	equ	0xFDD
  5418                           fsr2h	equ	0xFDA
  5419                           fsr2l	equ	0xFD9
  5420                           status	equ	0xFD8
  5421                           
  5422 ;; *************** function _OpenPWM2 *****************
  5423 ;; Defined at:
  5424 ;;		line 18 in file "/opt/microchip/xc8/v1.34/sources/pic18/plib/PWM/pw2open.c"
  5425 ;; Parameters:    Size  Location     Type
  5426 ;;  period          1    wreg     unsigned char 
  5427 ;; Auto vars:     Size  Location     Type
  5428 ;;  period          1   20[COMRAM] unsigned char 
  5429 ;;  ccp2mx          1   21[COMRAM] unsigned char 
  5430 ;;  pmmode          1    0        unsigned char 
  5431 ;; Return value:  Size  Location     Type
  5432 ;;		None               void
  5433 ;; Registers used:
  5434 ;;		wreg, status,2, tblptrl, tblptrh, tblptru
  5435 ;; Tracked objects:
  5436 ;;		On entry : 0/0
  5437 ;;		On exit  : 0/0
  5438 ;;		Unchanged: 0/0
  5439 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5440 ;;      Params:         0       0       0       0       0       0       0       0       0
  5441 ;;      Locals:         2       0       0       0       0       0       0       0       0
  5442 ;;      Temps:          0       0       0       0       0       0       0       0       0
  5443 ;;      Totals:         2       0       0       0       0       0       0       0       0
  5444 ;;Total ram usage:        2 bytes
  5445 ;; Hardware stack levels used:    1
  5446 ;; Hardware stack levels required when called:    3
  5447 ;; This function calls:
  5448 ;;		Nothing
  5449 ;; This function is called by:
  5450 ;;		_main
  5451 ;; This function uses a non-reentrant model
  5452 ;;
  5453                           
  5454                           	psect	text30
  5455  002652                     __ptext30:
  5456                           	opt stack 0
  5457  002652                     _OpenPWM2:
  5458                           	opt stack 27
  5459                           
  5460                           ;incstack = 0
  5461                           ;OpenPWM2@period stored from wreg
  5462  002652  6E15               	movwf	OpenPWM2@period,c
  5463  002654  0E0C               	movlw	12
  5464  002656  6EBA               	movwf	4026,c	;volatile
  5465  002658  0E05               	movlw	5
  5466  00265A  6EF6               	movwf	tblptrl,c
  5467  00265C                     	if	1	;There is more than 1 active tblptr byte
  5468  00265C  0E00               	movlw	0
  5469  00265E  6EF7               	movwf	tblptrh,c
  5470  002660                     	endif
  5471  002660                     	if	1	;There are 3 active tblptr bytes
  5472  002660  0E30               	movlw	48
  5473  002662  6EF8               	movwf	tblptru,c
  5474  002664                     	endif
  5475  002664  0008               	tblrd		*
  5476  002666  0100               	movlb	12288	; () banked
  5477  002668  A0F5               	btfss	tablat,0,c
  5478  00266A  D002               	goto	l2524
  5479                           
  5480                           ; BSR set to: 0
  5481  00266C  6816               	setf	OpenPWM2@ccp2mx,c
  5482  00266E  D002               	goto	l261
  5483  002670                     l2524:
  5484                           
  5485                           ; BSR set to: 0
  5486  002670  0E00               	movlw	0
  5487  002672  6E16               	movwf	OpenPWM2@ccp2mx,c
  5488  002674                     l261:
  5489                           
  5490                           ; BSR set to: 0
  5491  002674  5016               	movf	OpenPWM2@ccp2mx,w,c
  5492  002676  B4D8               	btfsc	status,2,c
  5493  002678  D002               	goto	l262
  5494                           
  5495                           ; BSR set to: 0
  5496  00267A  9294               	bcf	3988,1,c	;volatile
  5497  00267C  D001               	goto	l263
  5498  00267E                     l262:
  5499                           
  5500                           ; BSR set to: 0
  5501  00267E  9693               	bcf	3987,3,c	;volatile
  5502  002680                     l263:
  5503                           
  5504                           ; BSR set to: 0
  5505  002680  94CA               	bcf	4042,2,c	;volatile
  5506  002682  C015  FFCB         	movff	OpenPWM2@period,4043	;volatile
  5507  002686  84CA               	bsf	4042,2,c	;volatile
  5508                           
  5509                           ; BSR set to: 0
  5510  002688  0012               	return		;funcret
  5511  00268A                     __end_of_OpenPWM2:
  5512                           	opt stack 0
  5513                           tblptru	equ	0xFF8
  5514                           tblptrh	equ	0xFF7
  5515                           tblptrl	equ	0xFF6
  5516                           tablat	equ	0xFF5
  5517                           prodh	equ	0xFF4
  5518                           prodl	equ	0xFF3
  5519                           intcon	equ	0xFF2
  5520                           postinc0	equ	0xFEE
  5521                           wreg	equ	0xFE8
  5522                           indf2	equ	0xFDF
  5523                           postinc2	equ	0xFDE
  5524                           postdec2	equ	0xFDD
  5525                           fsr2h	equ	0xFDA
  5526                           fsr2l	equ	0xFD9
  5527                           status	equ	0xFD8
  5528                           
  5529 ;; *************** function _OpenPWM1 *****************
  5530 ;; Defined at:
  5531 ;;		line 8 in file "/opt/microchip/xc8/v1.34/sources/pic18/plib/PWM/pw1open.c"
  5532 ;; Parameters:    Size  Location     Type
  5533 ;;  period          1    wreg     unsigned char 
  5534 ;; Auto vars:     Size  Location     Type
  5535 ;;  period          1   20[COMRAM] unsigned char 
  5536 ;; Return value:  Size  Location     Type
  5537 ;;		None               void
  5538 ;; Registers used:
  5539 ;;		wreg, status,2, status,0
  5540 ;; Tracked objects:
  5541 ;;		On entry : 0/0
  5542 ;;		On exit  : 0/0
  5543 ;;		Unchanged: 0/0
  5544 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5545 ;;      Params:         0       0       0       0       0       0       0       0       0
  5546 ;;      Locals:         1       0       0       0       0       0       0       0       0
  5547 ;;      Temps:          0       0       0       0       0       0       0       0       0
  5548 ;;      Totals:         1       0       0       0       0       0       0       0       0
  5549 ;;Total ram usage:        1 bytes
  5550 ;; Hardware stack levels used:    1
  5551 ;; Hardware stack levels required when called:    3
  5552 ;; This function calls:
  5553 ;;		Nothing
  5554 ;; This function is called by:
  5555 ;;		_main
  5556 ;; This function uses a non-reentrant model
  5557 ;;
  5558                           
  5559                           	psect	text31
  5560  0027C8                     __ptext31:
  5561                           	opt stack 0
  5562  0027C8                     _OpenPWM1:
  5563                           	opt stack 27
  5564                           
  5565                           ; BSR set to: 0
  5566                           ;incstack = 0
  5567                           ;OpenPWM1@period stored from wreg
  5568  0027C8  6E15               	movwf	OpenPWM1@period,c
  5569  0027CA  0E0C               	movlw	12
  5570  0027CC  12BD               	iorwf	4029,f,c	;volatile
  5571  0027CE  9494               	bcf	3988,2,c	;volatile
  5572  0027D0  94CA               	bcf	4042,2,c	;volatile
  5573  0027D2  C015  FFCB         	movff	OpenPWM1@period,4043	;volatile
  5574  0027D6  84CA               	bsf	4042,2,c	;volatile
  5575  0027D8  0012               	return		;funcret
  5576  0027DA                     __end_of_OpenPWM1:
  5577                           	opt stack 0
  5578                           tblptru	equ	0xFF8
  5579                           tblptrh	equ	0xFF7
  5580                           tblptrl	equ	0xFF6
  5581                           tablat	equ	0xFF5
  5582                           prodh	equ	0xFF4
  5583                           prodl	equ	0xFF3
  5584                           intcon	equ	0xFF2
  5585                           postinc0	equ	0xFEE
  5586                           wreg	equ	0xFE8
  5587                           indf2	equ	0xFDF
  5588                           postinc2	equ	0xFDE
  5589                           postdec2	equ	0xFDD
  5590                           fsr2h	equ	0xFDA
  5591                           fsr2l	equ	0xFD9
  5592                           status	equ	0xFD8
  5593                           
  5594 ;; *************** function _OpenADC *****************
  5595 ;; Defined at:
  5596 ;;		line 68 in file "/opt/microchip/xc8/v1.34/sources/pic18/plib/ADC/adcopen.c"
  5597 ;; Parameters:    Size  Location     Type
  5598 ;;  config          1    wreg     unsigned char 
  5599 ;;  config2         1   20[COMRAM] unsigned char 
  5600 ;;  portconfig      1   21[COMRAM] unsigned char 
  5601 ;; Auto vars:     Size  Location     Type
  5602 ;;  config          1   24[COMRAM] unsigned char 
  5603 ;; Return value:  Size  Location     Type
  5604 ;;		None               void
  5605 ;; Registers used:
  5606 ;;		wreg, status,2, status,0
  5607 ;; Tracked objects:
  5608 ;;		On entry : 0/0
  5609 ;;		On exit  : 0/0
  5610 ;;		Unchanged: 0/0
  5611 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5612 ;;      Params:         2       0       0       0       0       0       0       0       0
  5613 ;;      Locals:         1       0       0       0       0       0       0       0       0
  5614 ;;      Temps:          2       0       0       0       0       0       0       0       0
  5615 ;;      Totals:         5       0       0       0       0       0       0       0       0
  5616 ;;Total ram usage:        5 bytes
  5617 ;; Hardware stack levels used:    1
  5618 ;; Hardware stack levels required when called:    3
  5619 ;; This function calls:
  5620 ;;		Nothing
  5621 ;; This function is called by:
  5622 ;;		_main
  5623 ;; This function uses a non-reentrant model
  5624 ;;
  5625                           
  5626                           	psect	text32
  5627  00236E                     __ptext32:
  5628                           	opt stack 0
  5629  00236E                     _OpenADC:
  5630                           	opt stack 27
  5631                           
  5632                           ;incstack = 0
  5633                           ;OpenADC@config stored from wreg
  5634  00236E  6E19               	movwf	OpenADC@config,c
  5635  002370  0E00               	movlw	0
  5636  002372  6EC2               	movwf	4034,c	;volatile
  5637  002374  0E00               	movlw	0
  5638  002376  6EC0               	movwf	4032,c	;volatile
  5639  002378  90D8               	bcf	status,0,c
  5640  00237A  3015               	rrcf	OpenADC@config2,w,c
  5641  00237C  0B3C               	andlw	60
  5642  00237E  6EC2               	movwf	4034,c	;volatile
  5643  002380  C015  F017         	movff	OpenADC@config2,??_OpenADC
  5644  002384  3A17               	swapf	??_OpenADC,f,c
  5645  002386  0EF0               	movlw	240
  5646  002388  1617               	andwf	??_OpenADC,f,c
  5647  00238A  0E30               	movlw	48
  5648  00238C  1617               	andwf	??_OpenADC,f,c
  5649  00238E  5016               	movf	OpenADC@portconfig,w,c
  5650  002390  0B0F               	andlw	15
  5651  002392  1017               	iorwf	??_OpenADC,w,c
  5652  002394  6EC1               	movwf	4033,c	;volatile
  5653  002396  C019  F017         	movff	OpenADC@config,??_OpenADC
  5654  00239A  90D8               	bcf	status,0,c
  5655  00239C  3617               	rlcf	??_OpenADC,f,c
  5656  00239E  90D8               	bcf	status,0,c
  5657  0023A0  3617               	rlcf	??_OpenADC,f,c
  5658  0023A2  0E38               	movlw	56
  5659  0023A4  1617               	andwf	??_OpenADC,f,c
  5660  0023A6  C019  F018         	movff	OpenADC@config,??_OpenADC+1
  5661  0023AA  3A18               	swapf	??_OpenADC+1,f,c
  5662  0023AC  0E0F               	movlw	15
  5663  0023AE  1618               	andwf	??_OpenADC+1,f,c
  5664  0023B0  0E07               	movlw	7
  5665  0023B2  1618               	andwf	??_OpenADC+1,f,c
  5666  0023B4  5019               	movf	OpenADC@config,w,c
  5667  0023B6  0B80               	andlw	128
  5668  0023B8  1018               	iorwf	??_OpenADC+1,w,c
  5669  0023BA  1017               	iorwf	??_OpenADC,w,c
  5670  0023BC  6EC0               	movwf	4032,c	;volatile
  5671  0023BE  AE15               	btfss	OpenADC@config2,7,c
  5672  0023C0  D003               	goto	l218
  5673  0023C2  9C9E               	bcf	3998,6,c	;volatile
  5674  0023C4  8C9D               	bsf	3997,6,c	;volatile
  5675  0023C6  8CF2               	bsf	intcon,6,c	;volatile
  5676  0023C8                     l218:
  5677  0023C8  80C2               	bsf	4034,0,c	;volatile
  5678  0023CA  0012               	return		;funcret
  5679  0023CC                     __end_of_OpenADC:
  5680                           	opt stack 0
  5681                           tblptru	equ	0xFF8
  5682                           tblptrh	equ	0xFF7
  5683                           tblptrl	equ	0xFF6
  5684                           tablat	equ	0xFF5
  5685                           prodh	equ	0xFF4
  5686                           prodl	equ	0xFF3
  5687                           intcon	equ	0xFF2
  5688                           postinc0	equ	0xFEE
  5689                           wreg	equ	0xFE8
  5690                           indf2	equ	0xFDF
  5691                           postinc2	equ	0xFDE
  5692                           postdec2	equ	0xFDD
  5693                           fsr2h	equ	0xFDA
  5694                           fsr2l	equ	0xFD9
  5695                           status	equ	0xFD8
  5696                           
  5697 ;; *************** function _ConvertADC *****************
  5698 ;; Defined at:
  5699 ;;		line 22 in file "/opt/microchip/xc8/v1.34/sources/pic18/plib/ADC/adcconv.c"
  5700 ;; Parameters:    Size  Location     Type
  5701 ;;		None
  5702 ;; Auto vars:     Size  Location     Type
  5703 ;;		None
  5704 ;; Return value:  Size  Location     Type
  5705 ;;		None               void
  5706 ;; Registers used:
  5707 ;;		None
  5708 ;; Tracked objects:
  5709 ;;		On entry : 0/0
  5710 ;;		On exit  : 0/0
  5711 ;;		Unchanged: 0/0
  5712 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5713 ;;      Params:         0       0       0       0       0       0       0       0       0
  5714 ;;      Locals:         0       0       0       0       0       0       0       0       0
  5715 ;;      Temps:          0       0       0       0       0       0       0       0       0
  5716 ;;      Totals:         0       0       0       0       0       0       0       0       0
  5717 ;;Total ram usage:        0 bytes
  5718 ;; Hardware stack levels used:    1
  5719 ;; Hardware stack levels required when called:    3
  5720 ;; This function calls:
  5721 ;;		Nothing
  5722 ;; This function is called by:
  5723 ;;		_main
  5724 ;; This function uses a non-reentrant model
  5725 ;;
  5726                           
  5727                           	psect	text33
  5728  0027F8                     __ptext33:
  5729                           	opt stack 0
  5730  0027F8                     _ConvertADC:
  5731                           	opt stack 27
  5732                           
  5733                           ;incstack = 0
  5734  0027F8  82C2               	bsf	4034,1,c	;volatile
  5735  0027FA  0012               	return		;funcret
  5736  0027FC                     __end_of_ConvertADC:
  5737                           	opt stack 0
  5738                           tblptru	equ	0xFF8
  5739                           tblptrh	equ	0xFF7
  5740                           tblptrl	equ	0xFF6
  5741                           tablat	equ	0xFF5
  5742                           prodh	equ	0xFF4
  5743                           prodl	equ	0xFF3
  5744                           intcon	equ	0xFF2
  5745                           postinc0	equ	0xFEE
  5746                           wreg	equ	0xFE8
  5747                           indf2	equ	0xFDF
  5748                           postinc2	equ	0xFDE
  5749                           postdec2	equ	0xFDD
  5750                           fsr2h	equ	0xFDA
  5751                           fsr2l	equ	0xFD9
  5752                           status	equ	0xFD8
  5753                           
  5754 ;; *************** function _BusyADC *****************
  5755 ;; Defined at:
  5756 ;;		line 26 in file "/opt/microchip/xc8/v1.34/sources/pic18/plib/ADC/adcbusy.c"
  5757 ;; Parameters:    Size  Location     Type
  5758 ;;		None
  5759 ;; Auto vars:     Size  Location     Type
  5760 ;;		None
  5761 ;; Return value:  Size  Location     Type
  5762 ;;                  1    wreg      unsigned char 
  5763 ;; Registers used:
  5764 ;;		wreg
  5765 ;; Tracked objects:
  5766 ;;		On entry : 0/0
  5767 ;;		On exit  : 0/0
  5768 ;;		Unchanged: 0/0
  5769 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5770 ;;      Params:         0       0       0       0       0       0       0       0       0
  5771 ;;      Locals:         0       0       0       0       0       0       0       0       0
  5772 ;;      Temps:          0       0       0       0       0       0       0       0       0
  5773 ;;      Totals:         0       0       0       0       0       0       0       0       0
  5774 ;;Total ram usage:        0 bytes
  5775 ;; Hardware stack levels used:    1
  5776 ;; Hardware stack levels required when called:    3
  5777 ;; This function calls:
  5778 ;;		Nothing
  5779 ;; This function is called by:
  5780 ;;		_main
  5781 ;; This function uses a non-reentrant model
  5782 ;;
  5783                           
  5784                           	psect	text34
  5785  0027EA                     __ptext34:
  5786                           	opt stack 0
  5787  0027EA                     _BusyADC:
  5788                           	opt stack 27
  5789                           
  5790                           ;incstack = 0
  5791  0027EA  A2C2               	btfss	4034,1,c	;volatile
  5792  0027EC  D002               	goto	u2430
  5793  0027EE  0E01               	movlw	1
  5794  0027F0  D002               	goto	l196
  5795  0027F2                     u2430:
  5796  0027F2  0E00               	movlw	0
  5797  0027F4  D000               	goto	l196
  5798  0027F6                     l196:
  5799  0027F6  0012               	return		;funcret
  5800  0027F8                     __end_of_BusyADC:
  5801                           	opt stack 0
  5802                           tblptru	equ	0xFF8
  5803                           tblptrh	equ	0xFF7
  5804                           tblptrl	equ	0xFF6
  5805                           tablat	equ	0xFF5
  5806                           prodh	equ	0xFF4
  5807                           prodl	equ	0xFF3
  5808                           intcon	equ	0xFF2
  5809                           postinc0	equ	0xFEE
  5810                           wreg	equ	0xFE8
  5811                           indf2	equ	0xFDF
  5812                           postinc2	equ	0xFDE
  5813                           postdec2	equ	0xFDD
  5814                           fsr2h	equ	0xFDA
  5815                           fsr2l	equ	0xFD9
  5816                           status	equ	0xFD8
  5817                           
  5818 ;; *************** function _Board_Init *****************
  5819 ;; Defined at:
  5820 ;;		line 166 in file "proton.c"
  5821 ;; Parameters:    Size  Location     Type
  5822 ;;		None
  5823 ;; Auto vars:     Size  Location     Type
  5824 ;;		None
  5825 ;; Return value:  Size  Location     Type
  5826 ;;		None               void
  5827 ;; Registers used:
  5828 ;;		wreg, status,2
  5829 ;; Tracked objects:
  5830 ;;		On entry : 0/0
  5831 ;;		On exit  : 0/0
  5832 ;;		Unchanged: 0/0
  5833 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5834 ;;      Params:         0       0       0       0       0       0       0       0       0
  5835 ;;      Locals:         0       0       0       0       0       0       0       0       0
  5836 ;;      Temps:          0       0       0       0       0       0       0       0       0
  5837 ;;      Totals:         0       0       0       0       0       0       0       0       0
  5838 ;;Total ram usage:        0 bytes
  5839 ;; Hardware stack levels used:    1
  5840 ;; Hardware stack levels required when called:    3
  5841 ;; This function calls:
  5842 ;;		Nothing
  5843 ;; This function is called by:
  5844 ;;		_main
  5845 ;; This function uses a non-reentrant model
  5846 ;;
  5847                           
  5848                           	psect	text35
  5849  002428                     __ptext35:
  5850                           	opt stack 0
  5851  002428                     _Board_Init:
  5852                           	opt stack 27
  5853                           
  5854                           ;proton.c: 168: RCON = 0X80;
  5855                           
  5856                           ;incstack = 0
  5857  002428  0E80               	movlw	128
  5858  00242A  6ED0               	movwf	4048,c	;volatile
  5859                           
  5860                           ;proton.c: 169: ADCON1 = 0x0F;
  5861  00242C  0E0F               	movlw	15
  5862  00242E  6EC1               	movwf	4033,c	;volatile
  5863                           
  5864                           ;proton.c: 170: CMCON = 0x0F;
  5865  002430  0E0F               	movlw	15
  5866  002432  6EB4               	movwf	4020,c	;volatile
  5867                           
  5868                           ;proton.c: 171: T0CON = 0b11000101;
  5869  002434  0EC5               	movlw	197
  5870  002436  6ED5               	movwf	4053,c	;volatile
  5871                           
  5872                           ;proton.c: 172: T2CON = 0b00000111;
  5873  002438  0E07               	movlw	7
  5874  00243A  6ECA               	movwf	4042,c	;volatile
  5875                           
  5876                           ;proton.c: 175: TRISA = 0b00000001;
  5877  00243C  0E01               	movlw	1
  5878  00243E  6E92               	movwf	3986,c	;volatile
  5879                           
  5880                           ;proton.c: 176: TRISB = 0;
  5881  002440  0E00               	movlw	0
  5882  002442  6E93               	movwf	3987,c	;volatile
  5883                           
  5884                           ;proton.c: 177: TRISC = 0b10000000;
  5885  002444  0E80               	movlw	128
  5886  002446  6E94               	movwf	3988,c	;volatile
  5887                           
  5888                           ;proton.c: 178: TRISD = 0;
  5889  002448  0E00               	movlw	0
  5890  00244A  6E95               	movwf	3989,c	;volatile
  5891                           
  5892                           ;proton.c: 179: TRISE = 0;
  5893  00244C  0E00               	movlw	0
  5894  00244E  6E96               	movwf	3990,c	;volatile
  5895                           
  5896                           ;proton.c: 182: PORTAbits.RA1 = 0;
  5897  002450  9280               	bcf	3968,1,c	;volatile
  5898                           
  5899                           ;proton.c: 183: PORTAbits.RA2 = 0;
  5900  002452  9480               	bcf	3968,2,c	;volatile
  5901                           
  5902                           ;proton.c: 184: PORTAbits.RA3 = 0;
  5903  002454  9680               	bcf	3968,3,c	;volatile
  5904                           
  5905                           ;proton.c: 185: PORTAbits.RA4 = 0;
  5906  002456  9880               	bcf	3968,4,c	;volatile
  5907                           
  5908                           ;proton.c: 186: PORTAbits.RA5 = 0;
  5909  002458  9A80               	bcf	3968,5,c	;volatile
  5910                           
  5911                           ;proton.c: 189: PORTB = 0;
  5912  00245A  0E00               	movlw	0
  5913  00245C  6E81               	movwf	3969,c	;volatile
  5914                           
  5915                           ;proton.c: 190: PORTCbits.RC0 = 0;
  5916  00245E  9082               	bcf	3970,0,c	;volatile
  5917                           
  5918                           ;proton.c: 191: PORTCbits.RC1 = 0;
  5919  002460  9282               	bcf	3970,1,c	;volatile
  5920                           
  5921                           ;proton.c: 192: PORTCbits.RC2 = 0;
  5922  002462  9482               	bcf	3970,2,c	;volatile
  5923                           
  5924                           ;proton.c: 193: PORTCbits.RC3 = 0;
  5925  002464  9682               	bcf	3970,3,c	;volatile
  5926                           
  5927                           ;proton.c: 194: PORTCbits.RC4 = 0;
  5928  002466  9882               	bcf	3970,4,c	;volatile
  5929                           
  5930                           ;proton.c: 195: PORTCbits.RC5 = 0;
  5931  002468  9A82               	bcf	3970,5,c	;volatile
  5932                           
  5933                           ;proton.c: 196: PORTCbits.RC6 = 0;
  5934  00246A  9C82               	bcf	3970,6,c	;volatile
  5935                           
  5936                           ;proton.c: 197: PORTD = 0;
  5937  00246C  0E00               	movlw	0
  5938  00246E  6E83               	movwf	3971,c	;volatile
  5939                           
  5940                           ;proton.c: 198: PORTE = 0;
  5941  002470  0E00               	movlw	0
  5942  002472  6E84               	movwf	3972,c	;volatile
  5943  002474  0012               	return		;funcret
  5944  002476                     __end_of_Board_Init:
  5945                           	opt stack 0
  5946                           tblptru	equ	0xFF8
  5947                           tblptrh	equ	0xFF7
  5948                           tblptrl	equ	0xFF6
  5949                           tablat	equ	0xFF5
  5950                           prodh	equ	0xFF4
  5951                           prodl	equ	0xFF3
  5952                           intcon	equ	0xFF2
  5953                           postinc0	equ	0xFEE
  5954                           wreg	equ	0xFE8
  5955                           indf2	equ	0xFDF
  5956                           postinc2	equ	0xFDE
  5957                           postdec2	equ	0xFDD
  5958                           fsr2h	equ	0xFDA
  5959                           fsr2l	equ	0xFD9
  5960                           status	equ	0xFD8
  5961                           
  5962 ;; *************** function _RS232 *****************
  5963 ;; Defined at:
  5964 ;;		line 26 in file "proton.c"
  5965 ;; Parameters:    Size  Location     Type
  5966 ;;		None
  5967 ;; Auto vars:     Size  Location     Type
  5968 ;;		None
  5969 ;; Return value:  Size  Location     Type
  5970 ;;		None               void
  5971 ;; Registers used:
  5972 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  5973 ;; Tracked objects:
  5974 ;;		On entry : 0/0
  5975 ;;		On exit  : 0/0
  5976 ;;		Unchanged: 0/0
  5977 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5978 ;;      Params:         0       0       0       0       0       0       0       0       0
  5979 ;;      Locals:         0       0       0       0       0       0       0       0       0
  5980 ;;      Temps:         14       0       0       0       0       0       0       0       0
  5981 ;;      Totals:        14       0       0       0       0       0       0       0       0
  5982 ;;Total ram usage:       14 bytes
  5983 ;; Hardware stack levels used:    1
  5984 ;; Hardware stack levels required when called:    2
  5985 ;; This function calls:
  5986 ;;		_getsUSART
  5987 ;; This function is called by:
  5988 ;;		Interrupt level 2
  5989 ;; This function uses a non-reentrant model
  5990 ;;
  5991                           
  5992                           	psect	intcode
  5993  001008                     __pintcode:
  5994                           	opt stack 0
  5995  001008                     _RS232:
  5996                           	opt stack 24
  5997                           
  5998                           ;incstack = 0
  5999  001008  CFFA F007          	movff	pclath,??_RS232
  6000  00100C  CFFB F008          	movff	pclatu,??_RS232+1
  6001  001010  CFE9 F009          	movff	fsr0l,??_RS232+2
  6002  001014  EDD6  F010         	call	int_func,f	;refresh shadow registers
  6003                           pclatu	equ	0xFFB
  6004                           pclath	equ	0xFFA
  6005                           tblptru	equ	0xFF8
  6006                           tblptrh	equ	0xFF7
  6007                           tblptrl	equ	0xFF6
  6008                           tablat	equ	0xFF5
  6009                           prodh	equ	0xFF4
  6010                           prodl	equ	0xFF3
  6011                           intcon	equ	0xFF2
  6012                           postinc0	equ	0xFEE
  6013                           fsr0l	equ	0xFE9
  6014                           wreg	equ	0xFE8
  6015                           indf2	equ	0xFDF
  6016                           postinc2	equ	0xFDE
  6017                           postdec2	equ	0xFDD
  6018                           fsr2h	equ	0xFDA
  6019                           fsr2l	equ	0xFD9
  6020                           status	equ	0xFD8
  6021                           
  6022                           	psect	intcode_body
  6023  0021AC                     __pintcode_body:
  6024                           	opt stack 24
  6025  0021AC                     int_func:
  6026                           	opt stack 24
  6027  0021AC  0006               	pop		; remove dummy address from shadow register refresh
  6028  0021AE  CFEA F00A          	movff	fsr0h,??_RS232+3
  6029  0021B2  CFE1 F00B          	movff	fsr1l,??_RS232+4
  6030  0021B6  CFE2 F00C          	movff	fsr1h,??_RS232+5
  6031  0021BA  CFD9 F00D          	movff	fsr2l,??_RS232+6
  6032  0021BE  CFDA F00E          	movff	fsr2h,??_RS232+7
  6033  0021C2  CFF3 F00F          	movff	prodl,??_RS232+8
  6034  0021C6  CFF4 F010          	movff	prodh,??_RS232+9
  6035  0021CA  CFF6 F011          	movff	tblptrl,??_RS232+10
  6036  0021CE  CFF7 F012          	movff	tblptrh,??_RS232+11
  6037  0021D2  CFF8 F013          	movff	tblptru,??_RS232+12
  6038  0021D6  CFF5 F014          	movff	tablat,??_RS232+13
  6039                           
  6040                           ;proton.c: 28: getsUSART(rx1,3 );
  6041  0021DA  0E44               	movlw	low _rx1
  6042  0021DC  6E02               	movwf	getsUSART@buffer,c
  6043  0021DE  0E00               	movlw	high _rx1
  6044  0021E0  6E03               	movwf	getsUSART@buffer+1,c
  6045  0021E2  0E03               	movlw	3
  6046  0021E4  6E04               	movwf	getsUSART@len,c
  6047  0021E6  EC5F  F013         	call	_getsUSART	;wreg free
  6048                           
  6049                           ;proton.c: 29: flag = 1;
  6050  0021EA  0E00               	movlw	0
  6051  0021EC  6E3E               	movwf	_flag+1,c
  6052  0021EE  0E01               	movlw	1
  6053  0021F0  6E3D               	movwf	_flag,c
  6054                           
  6055                           ;proton.c: 30: PIR1bits.RCIF = 0;
  6056  0021F2  9A9E               	bcf	3998,5,c	;volatile
  6057  0021F4  C014  FFF5         	movff	??_RS232+13,tablat
  6058  0021F8  C013  FFF8         	movff	??_RS232+12,tblptru
  6059  0021FC  C012  FFF7         	movff	??_RS232+11,tblptrh
  6060  002200  C011  FFF6         	movff	??_RS232+10,tblptrl
  6061  002204  C010  FFF4         	movff	??_RS232+9,prodh
  6062  002208  C00F  FFF3         	movff	??_RS232+8,prodl
  6063  00220C  C00E  FFDA         	movff	??_RS232+7,fsr2h
  6064  002210  C00D  FFD9         	movff	??_RS232+6,fsr2l
  6065  002214  C00C  FFE2         	movff	??_RS232+5,fsr1h
  6066  002218  C00B  FFE1         	movff	??_RS232+4,fsr1l
  6067  00221C  C00A  FFEA         	movff	??_RS232+3,fsr0h
  6068  002220  C009  FFE9         	movff	??_RS232+2,fsr0l
  6069  002224  C008  FFFB         	movff	??_RS232+1,pclatu
  6070  002228  C007  FFFA         	movff	??_RS232,pclath
  6071  00222C  0011               	retfie		f
  6072  00222E                     __end_of_RS232:
  6073                           	opt stack 0
  6074                           pclatu	equ	0xFFB
  6075                           pclath	equ	0xFFA
  6076                           tblptru	equ	0xFF8
  6077                           tblptrh	equ	0xFF7
  6078                           tblptrl	equ	0xFF6
  6079                           tablat	equ	0xFF5
  6080                           prodh	equ	0xFF4
  6081                           prodl	equ	0xFF3
  6082                           intcon	equ	0xFF2
  6083                           postinc0	equ	0xFEE
  6084                           fsr0h	equ	0xFEA
  6085                           fsr0l	equ	0xFE9
  6086                           wreg	equ	0xFE8
  6087                           fsr1h	equ	0xFE2
  6088                           fsr1l	equ	0xFE1
  6089                           indf2	equ	0xFDF
  6090                           postinc2	equ	0xFDE
  6091                           postdec2	equ	0xFDD
  6092                           fsr2h	equ	0xFDA
  6093                           fsr2l	equ	0xFD9
  6094                           status	equ	0xFD8
  6095                           
  6096 ;; *************** function _getsUSART *****************
  6097 ;; Defined at:
  6098 ;;		line 14 in file "/opt/microchip/xc8/v1.34/sources/pic18/plib/USART/ugets.c"
  6099 ;; Parameters:    Size  Location     Type
  6100 ;;  buffer          2    1[COMRAM] PTR unsigned char 
  6101 ;;		 -> rx1(4), 
  6102 ;;  len             1    3[COMRAM] unsigned char 
  6103 ;; Auto vars:     Size  Location     Type
  6104 ;;  i               1    5[COMRAM] unsigned char 
  6105 ;;  data            1    4[COMRAM] unsigned char 
  6106 ;; Return value:  Size  Location     Type
  6107 ;;		None               void
  6108 ;; Registers used:
  6109 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  6110 ;; Tracked objects:
  6111 ;;		On entry : 0/0
  6112 ;;		On exit  : 0/0
  6113 ;;		Unchanged: 0/0
  6114 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6115 ;;      Params:         3       0       0       0       0       0       0       0       0
  6116 ;;      Locals:         2       0       0       0       0       0       0       0       0
  6117 ;;      Temps:          0       0       0       0       0       0       0       0       0
  6118 ;;      Totals:         5       0       0       0       0       0       0       0       0
  6119 ;;Total ram usage:        5 bytes
  6120 ;; Hardware stack levels used:    1
  6121 ;; Hardware stack levels required when called:    1
  6122 ;; This function calls:
  6123 ;;		_ReadUSART
  6124 ;; This function is called by:
  6125 ;;		_RS232
  6126 ;; This function uses a non-reentrant model
  6127 ;;
  6128                           
  6129                           	psect	text37
  6130  0026BE                     __ptext37:
  6131                           	opt stack 0
  6132  0026BE                     _getsUSART:
  6133                           	opt stack 24
  6134                           
  6135                           ;incstack = 0
  6136  0026BE  0E00               	movlw	0
  6137  0026C0  6E06               	movwf	getsUSART@i,c
  6138  0026C2  D010               	goto	i2l2450
  6139  0026C4  D000               	goto	i2l280
  6140  0026C6                     i2l280:
  6141  0026C6  AA9E               	btfss	3998,5,c	;volatile
  6142  0026C8  D7FE               	goto	i2l280
  6143  0026CA  ECB2  F013         	call	_ReadUSART	;wreg free
  6144  0026CE  6E05               	movwf	getsUSART@data,c
  6145  0026D0  C002  FFD9         	movff	getsUSART@buffer,fsr2l
  6146  0026D4  C003  FFDA         	movff	getsUSART@buffer+1,fsr2h
  6147  0026D8  C005  FFDF         	movff	getsUSART@data,indf2
  6148  0026DC  4A02               	infsnz	getsUSART@buffer,f,c
  6149  0026DE  2A03               	incf	getsUSART@buffer+1,f,c
  6150  0026E0  2A06               	incf	getsUSART@i,f,c
  6151  0026E2  D000               	goto	i2l2450
  6152  0026E4                     i2l2450:
  6153  0026E4  5004               	movf	getsUSART@len,w,c
  6154  0026E6  5C06               	subwf	getsUSART@i,w,c
  6155  0026E8  A0D8               	btfss	status,0,c
  6156  0026EA  D7ED               	goto	i2l280
  6157  0026EC  0012               	return		;funcret
  6158  0026EE                     __end_of_getsUSART:
  6159                           	opt stack 0
  6160                           pclatu	equ	0xFFB
  6161                           pclath	equ	0xFFA
  6162                           tblptru	equ	0xFF8
  6163                           tblptrh	equ	0xFF7
  6164                           tblptrl	equ	0xFF6
  6165                           tablat	equ	0xFF5
  6166                           prodh	equ	0xFF4
  6167                           prodl	equ	0xFF3
  6168                           intcon	equ	0xFF2
  6169                           postinc0	equ	0xFEE
  6170                           fsr0h	equ	0xFEA
  6171                           fsr0l	equ	0xFE9
  6172                           wreg	equ	0xFE8
  6173                           fsr1h	equ	0xFE2
  6174                           fsr1l	equ	0xFE1
  6175                           indf2	equ	0xFDF
  6176                           postinc2	equ	0xFDE
  6177                           postdec2	equ	0xFDD
  6178                           fsr2h	equ	0xFDA
  6179                           fsr2l	equ	0xFD9
  6180                           status	equ	0xFD8
  6181                           
  6182 ;; *************** function _ReadUSART *****************
  6183 ;; Defined at:
  6184 ;;		line 15 in file "/opt/microchip/xc8/v1.34/sources/pic18/plib/USART/uread.c"
  6185 ;; Parameters:    Size  Location     Type
  6186 ;;		None
  6187 ;; Auto vars:     Size  Location     Type
  6188 ;;  data            1    0[COMRAM] unsigned char 
  6189 ;; Return value:  Size  Location     Type
  6190 ;;                  1    wreg      unsigned char 
  6191 ;; Registers used:
  6192 ;;		wreg, status,2, status,0
  6193 ;; Tracked objects:
  6194 ;;		On entry : 0/0
  6195 ;;		On exit  : 0/0
  6196 ;;		Unchanged: 0/0
  6197 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6198 ;;      Params:         0       0       0       0       0       0       0       0       0
  6199 ;;      Locals:         1       0       0       0       0       0       0       0       0
  6200 ;;      Temps:          0       0       0       0       0       0       0       0       0
  6201 ;;      Totals:         1       0       0       0       0       0       0       0       0
  6202 ;;Total ram usage:        1 bytes
  6203 ;; Hardware stack levels used:    1
  6204 ;; This function calls:
  6205 ;;		Nothing
  6206 ;; This function is called by:
  6207 ;;		_getsUSART
  6208 ;; This function uses a non-reentrant model
  6209 ;;
  6210                           
  6211                           	psect	text38
  6212  002764                     __ptext38:
  6213                           	opt stack 0
  6214  002764                     _ReadUSART:
  6215                           	opt stack 24
  6216                           
  6217                           ;incstack = 0
  6218  002764  0EF2               	movlw	242
  6219  002766  1643               	andwf	_USART_Status,f,c
  6220  002768  ACAB               	btfss	4011,6,c	;volatile
  6221  00276A  D005               	goto	i2l326
  6222  00276C  9043               	bcf	_USART_Status,0,c
  6223  00276E  A0AB               	btfss	4011,0,c	;volatile
  6224  002770  D002               	goto	i2l326
  6225  002772  8043               	bsf	_USART_Status,0,c
  6226  002774  D000               	goto	i2l326
  6227  002776                     i2l326:
  6228  002776  B4AB               	btfsc	4011,2,c	;volatile
  6229  002778  8443               	bsf	_USART_Status,2,c
  6230  00277A  B2AB               	btfsc	4011,1,c	;volatile
  6231  00277C  8643               	bsf	_USART_Status,3,c
  6232  00277E  CFAE F001          	movff	4014,ReadUSART@data	;volatile
  6233  002782  5001               	movf	ReadUSART@data,w,c
  6234  002784  D000               	goto	i2l330
  6235  002786                     i2l330:
  6236  002786  0012               	return		;funcret
  6237  002788                     __end_of_ReadUSART:
  6238                           	opt stack 0
  6239                           pclatu	equ	0xFFB
  6240                           pclath	equ	0xFFA
  6241                           tblptru	equ	0xFF8
  6242                           tblptrh	equ	0xFF7
  6243                           tblptrl	equ	0xFF6
  6244                           tablat	equ	0xFF5
  6245                           prodh	equ	0xFF4
  6246                           prodl	equ	0xFF3
  6247                           intcon	equ	0xFF2
  6248                           postinc0	equ	0xFEE
  6249                           fsr0h	equ	0xFEA
  6250                           fsr0l	equ	0xFE9
  6251                           wreg	equ	0xFE8
  6252                           fsr1h	equ	0xFE2
  6253                           fsr1l	equ	0xFE1
  6254                           indf2	equ	0xFDF
  6255                           postinc2	equ	0xFDE
  6256                           postdec2	equ	0xFDD
  6257                           fsr2h	equ	0xFDA
  6258                           fsr2l	equ	0xFD9
  6259                           status	equ	0xFD8
  6260                           pclatu	equ	0xFFB
  6261                           pclath	equ	0xFFA
  6262                           tblptru	equ	0xFF8
  6263                           tblptrh	equ	0xFF7
  6264                           tblptrl	equ	0xFF6
  6265                           tablat	equ	0xFF5
  6266                           prodh	equ	0xFF4
  6267                           prodl	equ	0xFF3
  6268                           intcon	equ	0xFF2
  6269                           postinc0	equ	0xFEE
  6270                           fsr0h	equ	0xFEA
  6271                           fsr0l	equ	0xFE9
  6272                           wreg	equ	0xFE8
  6273                           fsr1h	equ	0xFE2
  6274                           fsr1l	equ	0xFE1
  6275                           indf2	equ	0xFDF
  6276                           postinc2	equ	0xFDE
  6277                           postdec2	equ	0xFDD
  6278                           fsr2h	equ	0xFDA
  6279                           fsr2l	equ	0xFD9
  6280                           status	equ	0xFD8
  6281                           
  6282                           	psect	rparam
  6283  0000                     pclatu	equ	0xFFB
  6284                           pclath	equ	0xFFA
  6285                           tblptru	equ	0xFF8
  6286                           tblptrh	equ	0xFF7
  6287                           tblptrl	equ	0xFF6
  6288                           tablat	equ	0xFF5
  6289                           prodh	equ	0xFF4
  6290                           prodl	equ	0xFF3
  6291                           intcon	equ	0xFF2
  6292                           postinc0	equ	0xFEE
  6293                           fsr0h	equ	0xFEA
  6294                           fsr0l	equ	0xFE9
  6295                           wreg	equ	0xFE8
  6296                           fsr1h	equ	0xFE2
  6297                           fsr1l	equ	0xFE1
  6298                           indf2	equ	0xFDF
  6299                           postinc2	equ	0xFDE
  6300                           postdec2	equ	0xFDD
  6301                           fsr2h	equ	0xFDA
  6302                           fsr2l	equ	0xFD9
  6303                           status	equ	0xFD8


Data Sizes:
    Strings     44
    Constant    40
    Data        0
    BSS         43
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           95     54      74
    BANK0           160     31      54
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0

Pointer List with Targets:

    ftoa@status	PTR int  size(2) Largest target is 2047
		 -> RAM(DATA[2047]), 

    utoa@buf	PTR unsigned char  size(2) Largest target is 3
		 -> rx(COMRAM[3]), 

    sp__utoa	PTR unsigned char  size(2) Largest target is 3
		 -> rx(COMRAM[3]), 

    itoa@buf	PTR unsigned char  size(2) Largest target is 3
		 -> rx(COMRAM[3]), 

    itoa@cp	PTR unsigned char  size(2) Largest target is 3
		 -> rx(COMRAM[3]), 

    ftoa@cp	PTR unsigned char  size(2) Largest target is 17
		 -> ftoa@buf(BANK0[17]), 

    atoi@s	PTR const unsigned char  size(2) Largest target is 4
		 -> rx1(COMRAM[4]), 

    getsUSART@buffer	PTR unsigned char  size(2) Largest target is 4
		 -> rx1(COMRAM[4]), 

    sprintf@f	PTR const unsigned char  size(2) Largest target is 11
		 -> STR_7(CODE[11]), 

    sprintf@sp	PTR unsigned char  size(2) Largest target is 17
		 -> ftoa@buf(BANK0[17]), 

    sprintf@ap	PTR void [1] size(2) Largest target is 2
		 -> ?_sprintf(COMRAM[2]), 

    sp__ftoa	PTR unsigned char  size(2) Largest target is 17
		 -> ftoa@buf(BANK0[17]), 

    valorstr	PTR unsigned char  size(2) Largest target is 17
		 -> NULL(NULL[0]), ftoa@buf(BANK0[17]), 

    sp__itoa	PTR unsigned char  size(2) Largest target is 3
		 -> rx(COMRAM[3]), 

    escreve_str_lcd@str	PTR const unsigned char  size(2) Largest target is 17
		 -> NULL(NULL[0]), ftoa@buf(BANK0[17]), STR_6(CODE[7]), rx(COMRAM[3]), 
		 -> STR_5(CODE[5]), STR_4(CODE[5]), STR_3(CODE[5]), STR_2(CODE[16]), 
		 -> STR_1(CODE[10]), rx1(COMRAM[4]), 


Critical Paths under _main in COMRAM

    _main->_SetDCPWM1
    _main->_SetDCPWM2
    _main->_itoa
    _itoa->___fttol
    _utoa->___lwdiv
    _init_uart->_OpenUSART
    _init_lcd->_delay_ms_x10
    _ftoa->_sprintf
    _sprintf->___llmod
    ___llmod->___lldiv
    ___lltoft->___ftpack
    ___fttol->___ftmul
    ___ftsub->___ftadd
    ___ftadd->___ftpack
    ___ftmul->___ftpack
    _escreve_str_lcd->_dados
    _atoi->___wmul
    ___ftdiv->___ftmul
    ___awtoft->_atoi
    _SetDCPWM2->___fttol
    _SetDCPWM1->___fttol

Critical Paths under _RS232 in COMRAM

    _RS232->_getsUSART
    _getsUSART->_ReadUSART

Critical Paths under _main in BANK0

    _main->_ftoa
    _itoa->___fttol
    _ftoa->_sprintf
    _SetDCPWM2->___fttol
    _SetDCPWM1->___fttol

Critical Paths under _RS232 in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _RS232 in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _RS232 in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _RS232 in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _RS232 in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _RS232 in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _RS232 in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _RS232 in BANK7

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0   30225
                         _Board_Init
                            _BusyADC
                         _ConvertADC
                            _OpenADC
                           _OpenPWM1
                           _OpenPWM2
                            _ReadADC
                          _SetDCPWM1
                          _SetDCPWM2
                           ___awtoft
                            ___ftdiv
                            ___ftmul
                            ___fttol
                               _atoi
                       _delay_ms_x10
                    _escreve_str_lcd
                               _ftoa
                           _init_lcd
                          _init_uart
                               _itoa
 ---------------------------------------------------------------------------------
 (1) _itoa                                                 8     2      6    1723
                                             52 COMRAM     2     2      0
                                              6 BANK0      6     0      6
                            ___fttol (ARG)
                               _utoa
 ---------------------------------------------------------------------------------
 (2) _utoa                                                 9     3      6    1100
                                             27 COMRAM     9     3      6
                            ___lwdiv
                            ___lwmod
 ---------------------------------------------------------------------------------
 (3) ___lwmod                                              5     1      4     265
                                             20 COMRAM     5     1      4
 ---------------------------------------------------------------------------------
 (3) ___lwdiv                                              7     3      4     374
                                             20 COMRAM     7     3      4
 ---------------------------------------------------------------------------------
 (1) _init_uart                                            3     3      0     322
                                             23 COMRAM     3     3      0
                          _OpenUSART
 ---------------------------------------------------------------------------------
 (2) _OpenUSART                                            3     1      2     273
                                             20 COMRAM     3     1      2
 ---------------------------------------------------------------------------------
 (1) _init_lcd                                             1     1      0    1045
                                             25 COMRAM     1     1      0
                              _dados
                       _delay_ms_x10
 ---------------------------------------------------------------------------------
 (2) _delay_ms_x10                                         5     3      2     365
                                             20 COMRAM     5     3      2
 ---------------------------------------------------------------------------------
 (1) _ftoa                                                15    10      5   13644
                                             16 BANK0     15    10      5
                            ___ftmul
                            ___ftneg
                            ___ftsub
                            ___fttol
                           ___lltoft
                            _sprintf
 ---------------------------------------------------------------------------------
 (2) _sprintf                                             37    25     12    2917
                                             42 COMRAM    12     0     12
                                              0 BANK0     16    16      0
                            ___lldiv
                            ___llmod
                             ___wmul
                            _isdigit
 ---------------------------------------------------------------------------------
 (3) ___llmod                                              9     1      8     362
                                             33 COMRAM     9     1      8
                            ___lldiv (ARG)
 ---------------------------------------------------------------------------------
 (3) ___lldiv                                             13     5      8     371
                                             20 COMRAM    13     5      8
 ---------------------------------------------------------------------------------
 (2) ___lltoft                                             9     5      4    2295
                                             28 COMRAM     9     5      4
                           ___ftpack
 ---------------------------------------------------------------------------------
 (2) ___fttol                                             15    11      4     891
                                             43 COMRAM     9     5      4
                                              0 BANK0      6     6      0
                            ___ftmul (ARG)
 ---------------------------------------------------------------------------------
 (2) ___ftsub                                              6     0      6    3889
                                             40 COMRAM     6     0      6
                            ___ftadd
                           ___lltoft (ARG)
 ---------------------------------------------------------------------------------
 (3) ___ftadd                                             12     6      6    3573
                                             28 COMRAM    12     6      6
                           ___ftpack
 ---------------------------------------------------------------------------------
 (2) ___ftneg                                              3     0      3      98
                                             20 COMRAM     3     0      3
 ---------------------------------------------------------------------------------
 (2) ___ftmul                                             15     9      6    3096
                                             28 COMRAM    15     9      6
                           ___ftpack
 ---------------------------------------------------------------------------------
 (1) _escreve_str_lcd                                      7     4      3    1944
                                             24 COMRAM     7     4      3
                              _dados
 ---------------------------------------------------------------------------------
 (2) _dados                                                4     2      2     680
                                             20 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (1) _atoi                                                 7     5      2    1120
                                             26 COMRAM     7     5      2
                             ___wmul
                            _isdigit
 ---------------------------------------------------------------------------------
 (3) _isdigit                                              3     3      0      99
                                             20 COMRAM     3     3      0
 ---------------------------------------------------------------------------------
 (3) ___wmul                                               6     2      4     622
                                             20 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (1) ___ftdiv                                             15     9      6    2898
                                             43 COMRAM     9     3      6
                                              0 BANK0      6     6      0
                            ___ftmul (ARG)
                           ___ftpack
 ---------------------------------------------------------------------------------
 (1) ___awtoft                                             4     1      3    2391
                                             33 COMRAM     4     1      3
                            _ReadADC (ARG)
                           ___ftpack
                               _atoi (ARG)
 ---------------------------------------------------------------------------------
 (3) ___ftpack                                             8     3      5    2128
                                             20 COMRAM     8     3      5
 ---------------------------------------------------------------------------------
 (1) _SetDCPWM2                                            6     4      2     229
                                             52 COMRAM     2     0      2
                                              6 BANK0      4     4      0
                            ___fttol (ARG)
 ---------------------------------------------------------------------------------
 (1) _SetDCPWM1                                            6     4      2     229
                                             52 COMRAM     2     0      2
                                              6 BANK0      4     4      0
                            ___fttol (ARG)
 ---------------------------------------------------------------------------------
 (1) _ReadADC                                              4     2      2       0
                                             20 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (1) _OpenPWM2                                             3     3      0      46
                                             20 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (1) _OpenPWM1                                             1     1      0      22
                                             20 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _OpenADC                                              5     3      2     260
                                             20 COMRAM     5     3      2
 ---------------------------------------------------------------------------------
 (1) _ConvertADC                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _BusyADC                                              0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Board_Init                                           0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (5) _RS232                                               14    14      0     213
                                              6 COMRAM    14    14      0
                          _getsUSART
 ---------------------------------------------------------------------------------
 (6) _getsUSART                                            5     2      3     213
                                              1 COMRAM     5     2      3
                          _ReadUSART
 ---------------------------------------------------------------------------------
 (7) _ReadUSART                                            1     1      0      15
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 7
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _Board_Init
   _BusyADC
   _ConvertADC
   _OpenADC
   _OpenPWM1
   _OpenPWM2
   _ReadADC
   _SetDCPWM1
     ___fttol (ARG)
       ___ftmul (ARG)
         ___ftpack
   _SetDCPWM2
     ___fttol (ARG)
       ___ftmul (ARG)
         ___ftpack
   ___awtoft
     _ReadADC (ARG)
     ___ftpack (ARG)
     _atoi (ARG)
       ___wmul
       _isdigit
   ___ftdiv
     ___ftmul (ARG)
       ___ftpack
     ___ftpack (ARG)
   ___ftmul
     ___ftpack
   ___fttol
     ___ftmul (ARG)
       ___ftpack
   _atoi
     ___wmul
     _isdigit
   _delay_ms_x10
   _escreve_str_lcd
     _dados
   _ftoa
     ___ftmul
       ___ftpack
     ___ftneg
     ___ftsub
       ___ftadd
         ___ftpack
       ___lltoft (ARG)
         ___ftpack
     ___fttol
       ___ftmul (ARG)
         ___ftpack
     ___lltoft
       ___ftpack
     _sprintf
       ___lldiv
       ___llmod
         ___lldiv (ARG)
       ___wmul
       _isdigit
   _init_lcd
     _dados
     _delay_ms_x10
   _init_uart
     _OpenUSART
   _itoa
     ___fttol (ARG)
       ___ftmul (ARG)
         ___ftpack
     _utoa (ARG)
       ___lwdiv
       ___lwmod

 _RS232 (ROOT)
   _getsUSART
     _ReadUSART

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             7FF      0       0      21        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0     1F      36       5       33.8%
BITCOMRAM           5F      0       0       0        0.0%
COMRAM              5F     36      4A       1       77.9%
BITSFR               0      0       0      40        0.0%
SFR                  0      0       0      40        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      80      20        0.0%
DATA                 0      0      80       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V1.34 build -361300703 
Symbol Table                                                                                   Sat May  9 03:35:45 2015

                       _a 0037                        l81 25F8                        _rx 0048  
     ___wmul@multiplicand 0017              ___ftadd@exp1 0028              ___ftadd@exp2 0027  
            ___ftadd@sign 0026                       l312 2274                       l313 2276  
                     l218 23C8                       l226 27E8                       l314 2280  
                     l315 2282                       l172 120E                       l308 225A  
                     l261 2674                       l333 273E                       l317 229C  
                     l262 267E                       l263 2680                       l191 148C  
                     l515 1E64                       l196 27F6                       l516 1E6C  
                     l700 1820                       l711 18E2                       l720 18FE  
                     l801 1FDC                       l731 1C6A                       l566 2650  
                     l830 219A                       l743 1D98                       l903 2504  
                     l656 1F32                       l728 1CA0                       l840 22FC  
                     l753 2756                       l762 1A92                       l667 1F0A  
                     l772 1BA0                       l860 236C                       l696 17F6  
                     l768 2550                       l697 1974                       l793 24C0  
                     l787 27A8                       l893 241E                       l799 1FB8  
            getsUSART@len 0004                       _RD0 007C18                       _RD1 007C19  
                     _PR2 000FCB                       _rx1 0044                       _ton 003A  
                     wreg 000FE8              ___ftdiv@cntr 0060              ___ftdiv@sign 0065  
                    l2102 2252                      l2040 23F4                      l3002 136E  
                    l2114 226C                      l2106 225E                      l3012 13AE  
                    l3004 137A                      l3020 145E                      l2036 23E2  
                    l2060 24E2                      l3110 1B34                      l3006 1386  
                    l3022 147E                      l2070 25E4                      l2038 23EC  
                    l3032 1CC0                      l3112 1B3C                      l3120 1B70  
                    l2048 2412                      l2064 24F8                      l2056 24D0  
                    l3034 1CDA                      l3106 1B20                      l3130 2314  
                    l3018 1444                      l2058 24DA                      l3212 1BC4  
                    l3060 1D44                      l3052 1D1C                      l3124 1B8E  
                    l3116 1B50                      l3132 2322                      l3214 1BE2  
                    l3150 1DA2                      l2422 1FF6                      l2430 2010  
                    l3070 1D72                      l3062 1D4A                      l3038 1CE8  
                    l3118 1B62                      l2094 2240                      l3160 1DE2  
                    l3056 1D2E                      l3218 1BF0                      l2434 202A  
                    l2426 2002                      l2418 1FEA                      l3066 1D5C  
                    l2098 224A                      l2354 1F3E                      l2524 2670  
                    l3260 262C                      l3164 1DF6                      l3148 1D9C  
                    l2364 1F7A                      l3238 1C40                      l3166 1E2C  
                    l2438 205C                      l3078 2526                      l3182 24A2  
                    l3334 16EC                      l3248 1C7A                      l2800 27A0  
                    l3168 1E32                      l3088 1AB6                      l3336 16F2  
                    l3194 19B8                      l2830 183A                      l2910 22C6  
                    l3294 1526                      l2760 1E7E                      l2840 1862  
                    l2824 182E                      l2920 1080                      l2850 189E  
                    l2818 1804                      l2914 22EC                      l2906 22B0  
                    l2772 1ED2                      l2764 1E8E                      l2860 18D6  
                    l2852 18A6                      l2908 22BE                      l2932 10CE  
                    l2940 1148                      l2782 1F12                      l2774 1EF2  
                    l2766 1E9A                      l2846 1886                      l2950 11AA  
                    l2926 109C                      l2776 1EFE                      l2768 1EBA  
                    l2848 1892                      l2960 11E2                      l2952 11C4  
                    l2866 191C                      l2858 18CA                      l2890 2158  
                    l2970 125A                      l2954 11D2                      l2946 116C  
                    l2788 1F24                      l2876 194E                      l2956 11DA  
                    l2886 2142                      l2990 12DC                      l2982 1296  
                    l2966 1230                      l2888 2150                      l2976 1282  
                    l2898 218A                      l2994 1304                      l2986 12D6  
                    l2978 1288                      l2998 1336             getsUSART@data 0005  
                    STR_1 1060                      STR_2 1045                      STR_3 106C  
                    STR_4 106C                      STR_5 106C                      STR_6 106A  
                    STR_7 1055                      u3101 1CD0                      u2260 2052  
                    u2430 27F2                      u2270 207C                      u3151 1AA4  
                    u3081 1CB2                      u3170 1AD4                      u2267 2048  
                    u3245 25A0                      u3341 1BB2                      u2277 2072  
                    u3255 255C                      u1735 26FA                      u2631 17C2  
                    u3175 1ACC                      _PIE1 000F9D                      u1736 26FC  
                    u3361 1BD4                      u2641 17D6                      u3427 20B2  
                    u3437 25EA                      u3447 2708                      _RCON 000FD0  
                    _flag 003D                      _atoi 1D9A                      _main 148E  
                    _ftoa 1976              ___ftpack@arg 0015                      _itoa 2476  
            ___ftpack@exp 0018                      fsr0h 000FEA                      fsr1h 000FE2  
                    fsr0l 000FE9                      fsr2h 000FDA                      fsr1l 000FE1  
                    indf2 000FDF                      fsr2l 000FD9                      _utoa 1F34  
                    _volt 0082                      pclat 000FFA                      prodh 000FF4  
                    prodl 000FF3                      start 1018                _Board_Init 2428  
            ___ftmul@cntr 002A              ___param_bank 000010              ___ftmul@sign 002B  
         __end_of_BusyADC 27F8           __end_of_ReadADC 27EA           __end_of_OpenADC 23CC  
            ___fttol@exp1 0065        escreve_str_lcd@str 001A              ___fttol@lval 0061  
                   ?_atoi 001B      __end_of_delay_ms_x10 2616                     ?_main 0001  
                   ?_ftoa 0070                     ?_itoa 0066           __end_of___ftadd 1976  
         __end_of___ftdiv 1CA2                     _CMCON 000FB4           __end_of___ftneg 2764  
         __end_of___lldiv 21AC                     ?_utoa 001C           __end_of___ftmul 1D9A  
                   _T0CON 000FD5           __end_of___llmod 230E           __end_of___ftsub 2552  
         __end_of___fttol 1BA2                     _T2CON 000FCA           __end_of___lwdiv 2428  
                   _RS232 1008           __end_of___lwmod 250E                     i2l330 2786  
                   i2l326 2776                     i2l280 26C6                     _RCREG 000FAE  
                   _RCSTA 000FAB                     _SPBRG 000FAF                     _PORTB 000F81  
                   _PORTD 000F83                     _PORTE 000F84                     _TRISA 000F92  
                   _TRISB 000F93                     _TRISC 000F94                     _TRISD 000F95  
                   _TRISE 000F96                     _TXSTA 000FAC              ___lltoft@exp 0025  
                   _dados 26EE             ___awtoft@sign 0025           __end_of_dpowers 1045  
         __end_of_isdigit 27AA             ___ftpack@sign 0019                     _valor 007F  
                   atoi@a 0020                     atoi@s 001B                _ConvertADC 27F8  
                   ftoa@f 0070                     ftoa@l 0079                     tablat 000FF5  
                   utoa@c 0024                     utoa@v 0022                     status 000FD8  
         __end_of_sprintf 148E  __size_of_escreve_str_lcd 00A6           __initialization 27AA  
            __end_of_atoi 1E6E              __end_of_main 17B2              __end_of_ftoa 1A94  
            __end_of_itoa 24C2              __end_of_utoa 1FDE          __end_of_OpenPWM1 27DA  
        __end_of_OpenPWM2 268A                    ??_atoi 001D                    ??_main 0037  
                  ??_ftoa 0037             ___fttol@sign1 0060                    ??_itoa 0035  
                  ??_utoa 0022             __activetblptr 000003                    ?_RS232 0001  
                  ?_dados 0015                    _ADCON0 000FC2                    _ADCON1 000FC1  
                  _ADCON2 000FC0          ___llmod@dividend 0022                    _ADRESH 000FC4  
                  _ADRESL 000FC3                    _CCPR1L 000FBE                    _CCPR2L 000FBB  
        __end_of___awtoft 2652          __end_of___ftpack 1F34           getsUSART@buffer 0002  
        __end_of___lltoft 236E                    i2l2450 26E4        __size_of_ReadUSART 0024  
                  _SPBRGH 000FB0        __size_of_SetDCPWM1 0044        __size_of_SetDCPWM2 0044  
               ??_BusyADC 0015                 ??_ReadADC 0017                 ??_OpenADC 0017  
             ?_Board_Init 0001        __size_of_OpenUSART 0070                    ___wmul 2718  
               ??___ftadd 0023                 ??___ftdiv 0032                 ??___ftneg 0018  
               ??___lldiv 001D                 ??___ftmul 0023                 ??___llmod 002A  
               ??___ftsub 002F                 ??___fttol 0030                 ??___lwdiv 0019  
               ??___lwmod 0019          __end_of_init_lcd 2120                    clear_0 27B0  
                  clear_1 27BC                    _status 003F                    ftoa@cp 007D  
   ___ftmul@f3_as_product 0027                    itoa@cp 0035                 ??_isdigit 0015  
            __mediumconst 0000                    tblptrh 000FF7                    tblptrl 000FF6  
                  tblptru 000FF8                 ??_sprintf 0060               ?_ConvertADC 0001  
              __accesstop 0060   __end_of__initialization 27C2                ___ftadd@f1 001D  
              ___ftadd@f2 0020             ___rparam_used 000001                ___ftdiv@f1 002C  
              ___ftdiv@f2 002F                ___ftdiv@f3 0061             __end_of_RS232 222E  
              ___ftneg@f1 0015                ___awtoft@c 0022                ___ftmul@f1 001D  
              ___ftmul@f2 0020                ___ftsub@f1 0029                ___ftsub@f2 002C  
              ___fttol@f1 002C            __pcstackCOMRAM 0001          escreve_str_lcd@x 001D  
        escreve_str_lcd@y 0019     __size_of_delay_ms_x10 003C             __end_of_dados 2718  
              ___lltoft@c 001D         ??_escreve_str_lcd 001C         __end_of_ReadUSART 2788  
       __end_of_SetDCPWM1 25DA         __end_of_SetDCPWM2 2596                   ??_RS232 0007  
      __size_of_getsUSART 0030       __size_of_Board_Init 004E             ReadUSART@data 0001  
                 ??_dados 0017         __end_of_OpenUSART 229E              sprintf@width 006B  
              __pbssBANK0 007F              _delay_ms_x10 25DA                 ?_OpenPWM1 0001  
               ?_OpenPWM2 0001        __size_of_init_uart 0034                   ?___wmul 0015  
                 _CCP1CON 000FBD                   _CCP2CON 000FBA       __size_of_ConvertADC 0004  
               ?___awtoft 0022                 ?___ftpack 0015                 ?___lltoft 001D  
               ?_init_lcd 0001   escreve_str_lcd@addressx 001E   escreve_str_lcd@addressy 001F  
                 _BusyADC 27EA                   _ReadADC 27DA                ??_OpenPWM1 0015  
              ??_OpenPWM2 0015                   _OpenADC 236E                   __Hparam 0000  
                 __Lparam 0000         __end_of_getsUSART 26EE                   ___ftadd 17B2  
                 ___ftdiv 1BA2                   ___ftneg 2740                   ___lldiv 2120  
         __size_of___wmul 0028                   ___ftmul 1CA2                   ___llmod 229E  
                 ___ftsub 250E                   ___fttol 1A94                   ___lwdiv 23CC  
                 ___lwmod 24C2              __psmallconst 101C                   __pcinit 27AA  
              ??___awtoft 0025                ??___ftpack 001A                   __ramtop 0800  
              ??___lltoft 0021                   __ptext0 148E                   __ptext1 2476  
                 __ptext2 1F34                   __ptext3 24C2                   __ptext4 23CC  
                 __ptext5 268A                   __ptext6 222E                   __ptext7 2084  
                 __ptext8 25DA                   __ptext9 1976                   dados@rw 0015  
                 _dpowers 101D                 _T2CONbits 000FCA                   _isdigit 2788  
       __end_of_init_uart 26BE            OpenADC@config2 0015                   _sprintf 1072  
          __pintcode_body 21AC      end_of_initialization 27C2                   ftoa@buf 0085  
                 ftoa@rem 0075                   itoa@buf 0066                   itoa@val 0068  
              ??_init_lcd 001A                   int_func 21AC           ___lldiv@divisor 0019  
            ??_Board_Init 0015           ___lldiv@counter 0021                 _RCSTAbits 000FAB  
                 postdec2 000FDD                   postinc0 000FEE                   postinc2 000FDE  
                 utoa@buf 001C                   utoa@val 001E                 _PORTAbits 000F80  
               _PORTCbits 000F82                 _TRISBbits 000F93                 _TRISCbits 000F94  
      __end_of_Board_Init 2476                getsUSART@i 0006              ??_ConvertADC 0015  
             ___ftdiv@exp 0064                 _TXSTAbits 000FAC           _escreve_str_lcd 1FDE  
             ___ftmul@exp 0026            __end_of___wmul 2740        __end_of_ConvertADC 27FC  
           delay_ms_x10@t 0018       start_initialization 27AA                 _ReadUSART 2764  
               _SetDCPWM1 2596                 _SetDCPWM2 2552           SetDCPWM1@DCycle 0068  
         SetDCPWM2@DCycle 0068                ftoa@status 0073                 _OpenUSART 222E  
         ___llmod@divisor 0026           ___llmod@counter 002A         __size_of_OpenPWM1 0012  
       __size_of_OpenPWM2 0038       init_uart@baudconfig 0018                  ??___wmul 0019  
       __size_of___awtoft 003C         __size_of___ftpack 00C6         __size_of___lltoft 0060  
             __pbssCOMRAM 0037                ?_ReadUSART 0001             __pcstackBANK0 0060  
              ?_SetDCPWM1 0035                ?_SetDCPWM2 0035              _isdigit$1735 0016  
 __end_of_escreve_str_lcd 2084                ?_OpenUSART 0015               sprintf@flag 0064  
             sprintf@prec 006D                  ?_BusyADC 0001                  ?_ReadADC 0015  
       OpenADC@portconfig 0016                  ?_OpenADC 0015         __size_of_init_lcd 009C  
        ___lwdiv@dividend 0015           init_uart@config 0019                 __pintcode 1008  
                ?___ftadd 001D                  ?___ftdiv 002C                  ?___ftneg 0015  
                ?___lldiv 0015                  ?___ftmul 001D                  ?___llmod 0022  
                ?___ftsub 0029                  ?___fttol 002C                  ?___lwdiv 0015  
                ?___lwmod 0015                 _getsUSART 26BE               __smallconst 101C  
          __size_of_RS232 1226                  ?_isdigit 0001            __size_of_dados 002A  
        ___lwdiv@quotient 0019                  ?_sprintf 002B                 _init_uart 268A  
          ___wmul@product 0019             OpenADC@config 0019                  _IPR1bits 000F9F  
                _PIE1bits 000F9D                  _PIR1bits 000F9E                ?_getsUSART 0002  
              _ADCON0bits 000FC2         ___wmul@multiplier 0015               ??_ReadUSART 0001  
             ??_SetDCPWM1 0066               ??_SetDCPWM2 0066                ?_init_uart 0001  
        ?_escreve_str_lcd 0019               ??_OpenUSART 0017        SetDCPWM1@dutycycle 0035  
         OpenUSART@config 0017                  _OpenPWM1 27C8                  _OpenPWM2 2652  
        __size_of_BusyADC 000E          __size_of_ReadADC 0010                  __Hrparam 0000  
        __size_of_OpenADC 005E                  __Lrparam 0000        SetDCPWM2@dutycycle 0035  
        __size_of___ftadd 01C4          __size_of___ftdiv 0100          __size_of___ftneg 0024  
        __size_of___lldiv 008C          __size_of___ftmul 00F8          __size_of___llmod 0070  
        __size_of___ftsub 0044          __size_of___fttol 010E          __size_of___lwdiv 005C  
        __size_of___lwmod 004C                  ___awtoft 2616                  ___ftpack 1E6E  
                ___lltoft 230E            OpenPWM2@ccp2mx 0016                sprintf@val 0067  
          OpenPWM1@period 0015            OpenPWM2@period 0015          __size_of_isdigit 0022  
         ___lwdiv@divisor 0017           ___lwdiv@counter 001B            init_uart@spbrg 001A  
                __ptext10 1072                  __ptext11 229E                  __ptext20 26EE  
                __ptext12 2120                  __ptext21 1D9A                  __ptext13 230E  
                __ptext30 2652                  __ptext22 2788                  __ptext14 1A94  
                __ptext31 27C8                  __ptext23 2718                  __ptext15 250E  
                __ptext32 236E                  __ptext24 1BA2                  __ptext16 17B2  
                __ptext33 27F8                  __ptext25 2616                  __ptext17 2740  
                __ptext34 27EA                  __ptext26 1E6E                  __ptext18 1CA2  
                __ptext35 2428                  __ptext27 2552                  __ptext19 1FDE  
                __ptext28 2596                  __ptext37 26BE                  __ptext29 27DA  
                __ptext38 2764          __size_of_sprintf 041C                  dados@chr 0018  
           ?_delay_ms_x10 0015                  _init_lcd 2084             __size_of_atoi 00D4  
           __size_of_main 0324             __size_of_ftoa 011E             __size_of_itoa 004C  
           __size_of_utoa 00AA                  _valorstr 0041                  atoi@sign 001F  
             ??_getsUSART 0005         delay_ms_x10@tempo 0015                _INTCONbits 000FF2  
          OpenUSART@spbrg 0015                  itoa@base 006A                  isdigit@c 0017  
             ??_init_uart 0018                  intlevel2 0000                 sprintf@ap 0065  
               sprintf@sp 002B            ??_delay_ms_x10 0017          ___lwmod@dividend 0015  
        ___lldiv@dividend 0015                  utoa@base 0020                  sprintf@c 006F  
                sprintf@f 002D          ___lldiv@quotient 001D           ___lwmod@divisor 0017  
         ___lwmod@counter 0019              _USART_Status 0043  
